{"version":3,"sources":["utilities/interfaces/dataInterfaces/index.ts","utilities/interfaces/appInterfaces.ts","utilities/interfaces/dataInterfaces/dayInterfaces.ts","utilities/interfaces/dataInterfaces/termInterfaces.ts","utilities/contexts/appContext.ts","utilities/contexts/scheduleContext.ts","utilities/helpers/caseFunctions.ts","utilities/helpers/makeFC.tsx","utilities/helpers/readCSV.ts","utilities/helpers/teamMembers.ts","utilities/helpers/utils.ts","utilities/helpers/writeCSV.ts","utilities/hooks/useExportCSV.ts","utilities/hooks/useImportFile.ts","utilities/reducers/appReducer.ts","assets/CalvinUniv-vert-full-color-inverse.png","utilities/services/addSectionService.ts","utilities/services/facultyScheduleService.ts","utilities/services/roomsScheduleService.ts","utilities/services/scheduleService.ts","components/reuseables/AddSectionButton/AddSectionButton.tsx","components/reuseables/AddSectionPopover/AddSectionPopover.tsx","components/reuseables/animated/AnimateShowAndHide/AnimateShowAndHide.tsx","components/reuseables/animated/Spring3DHover/Spring3DHover.tsx","components/reuseables/animated/Spring3DHover/spring3DHoverService.ts","components/reuseables/AsyncComponent/AsyncComponent.tsx","components/reuseables/Calendar/Calendar.tsx","components/reuseables/GridItem/GridItemCheckboxGroup/GridItemCheckboxGroup.tsx","components/reuseables/GridItem/GridItemRadioGroup/GridItemRadioGroup.tsx","components/reuseables/GridItem/GridItemTextField/GridItemTextField.tsx","components/reuseables/ImportInputWrapper/ImportInputWrapper.tsx","components/reuseables/NewTabLink/NewTabLink.tsx","components/reuseables/Schedule/Schedule.tsx","components/pages/AboutPage/AboutPage.tsx","components/pages/AboutPage/TeamMemberProfile/TeamMemberProfile.tsx","components/pages/AboutPage/TextSection/TextSection.tsx","components/pages/HelpPage/HelpPage.tsx","components/Toolbar/ColorSelector/ColorSelector.tsx","components/pages/SchedulizerPage/SchedulizerPage.tsx","components/App/App.tsx","components/Footer/Footer.tsx","assets/logo.ts","components/Header/Header.tsx","components/Tabs/FacultyLoads/FacultyLoads.tsx","components/Tabs/FacultySchedule/FacultySchedule.tsx","components/Tabs/RoomsSchedule/RoomsSchedule.tsx","components/Tabs/tabComponents/CSVActions/CSVActions.tsx","components/Tabs/tabComponents/CSVActions/ImportButton/ImportButton.tsx","components/Tabs/tabComponents/NoCoursesHeader/NoCoursesHeader.tsx","components/Tabs/tabComponents/TabPanel/TabPanel.tsx","components/Tabs/Tabs.tsx","components/Toolbar/ScheduleToolbar/ScheduleToolbar.tsx","components/Toolbar/Searchbar/Searchbar.tsx","components/Toolbar/SemesterSelector/SemesterSelector.tsx","serviceWorker.ts","index.tsx","utilities/constants.ts","utilities/index.ts","utilities/interfaces/index.ts"],"names":["initialAppState","professors","rooms","schedule","courses","selectedTerm","Term","Fall","slotMaxTime","slotMinTime","Day","Weekday","Monday","Tuesday","Wednesday","Thursday","Friday","SemesterLength","Half","Intensive","SemesterLengthOption","HalfFirst","HalfSecond","IntensiveA","IntensiveB","IntensiveC","IntensiveD","AppContext","createContext","appDispatch","voidFn","appState","isCSVLoading","setIsCSVLoading","ScheduleContext","isScheduleLoading","setIsScheduleLoading","fallReg","RegExp","summerReg","springReg","interimReg","sunReg","monReg","tuesReg","wedReg","thursReg","friReg","satReg","assignWithMeetings","value","params","arrAssign","valueParts","meetings","split","forEach","_","i","length","push","cloneDeep","emptyMeeting","createMeetings","v","startTimeCallback","startTime","startTimeCase","locationCallback","location","locationCase","building","roomNumber","termCallback","section","term","termCase","semesterLengthCallback","semesterLength","semesterLengthCase","daysCallback","days","daysCase","instructorCallback","instructors","instructorCase","prefixCallback","course","prefixes","prefixCase","nameCallback","name","numberCallback","number","letterCallback","letter","globalMaxCallback","globalMax","numberDefaultZeroCase","localMaxCallback","localMax","commentsCallback","comments","yearCallback","year","yearCase","studentHoursCallback","studentHours","facultyHoursCallback","facultyHours","durationCallback","duration","durationCase","roomCapacityCallback","capacity","roomCapacity","startMoment","moment","isValid","format","roomParts","trim","slice","join","test","Summer","Spring","Interim","console","log","upperValue","toUpperCase","lowerValue","toLowerCase","Full","Sunday","Saturday","map","instructor","endDateCase","startSectionDate","sectionStart","sectionLength","diff","startMonth","month","includes","replace","Number","isInteger","endTime","startTimeMoment","createFC","prefix","displayName","Component","defaultProps","subComponent","forwardRef","ref","className","as","Tag","props","getElements","children","type","elements","alternatives","literal","getUnionTypeIterable","it","getChildByName","pruimSpreadsheetFields","anticipatedSize","cf","half","startTimeStr","registrarSpreadsheetFields","AcademicYear","BuildingAndRoom","Comments","CourseNum","Day10Used","day10Used","Department","department","Faculty","FacultyLoad","GlobalMax","InstructionalMethod","instructionalMethod","LocalMax","MeetingDays","MeetingDurationMinutes","MeetingStart","MeetingTime","MinimumCredits","RoomCapacity","SectionCode","SectionEndDate","endDate","startDate","SectionStartDate","SectionStatus","status","ShortTitle","SubjectCode","TermStart","termStart","Used","used","callbacks","csvStringToSchedule","csvString","objects","papa","parse","header","skipEmptyLines","data","fields","meta","object","emptySection","emptyCourse","field","String","insertSectionCourse","filter","meeting","existingCourse","getCourse","existingCourseIndex","indexOf","existingSection","getSection","existingSectionIndex","sections","concat","team","bio","photo","website","enumArray","e","Object","keys","val","Children","child","scheduleToCSVString","numericReg","csvStr","endMoment","meetingTimeStr","meetingStartStr","meetingStartInternalStr","meetingEndStr","meetingEndInternalStr","meetingDurationMinutesStr","buildingStr","roomNumberStr","buildingAndRoomStr","roomCapacityStr","daysStr","monStr","tuesStr","wedStr","thursStr","friStr","clone","add","termStr","sectionNameStr","courseLevelCodeStr","useExportCSV","useContext","download","useImportFile","file","target","files","read","FileReader","readAsBinaryString","onloadend","a","scheduleJSON","result","isEqual","payload","reducer","state","action","times","getMinAndMaxTimes","getProfs","getRooms","maxTime","minTime","module","exports","convertFromSemesterLength","sl","HalfSemester","IntensiveSemester","FullSemester","schema","shape","array","transform","d","day","getSectionName","undefined","mapInputToInternalTypes","semesterType","First","Second","A","B","C","D","convertToSemesterLength","intensive","newSection","newCourse","updateScheduleWithNewSection","oldCourse","courseIndex","removeSection","professorsSet","Set","prof","roomsSet","getHoursArr","min","max","minHour","parseInt","maxHour","range","getEvents","groups","events","sectionName","room","group","endTimeMoment","event","dayOfWeek","INITIAL_DATE","newEvent","description","end","extendedProps","start","title","some","flatten","startTimes","endTimes","minBy","startOf","maxBy","filterEventsByTerm","groupedEvents","tempGroupedEvents","forOwn","key","filterHeadersWithNoEvents","filteredEvents","headers","groupEvents","AddSectionButton","popupState","usePopupState","popupId","variant","isIcon","buttonProps","IconButton","bindTrigger","Add","Button","color","Popover","bindPopover","anchorOrigin","horizontal","vertical","PaperProps","style","minWidth","transformOrigin","AddSectionPopover","values","useForm","resolver","yupResolver","register","handleSubmit","control","useState","setSemesterLength","isHalfSemester","isIntensiveSemester","isCustomSemester","CustomSemester","locationValue","Box","mb","Typography","Grid","container","spacing","label","textFieldProps","autoFocus","item","xs","toString","fullWidth","InputProps","endAdornment","InputAdornment","position","options","defaultValue","onChange","lowercase","h","direction","disabled","multiline","rows","alignItems","justify","onClick","AnimateShowAndHide","once","isActive","setIsActive","isVisible","setIsVisible","springProps","useSpring","config","friction","mass","tension","from","height","opacity","x","onVisibilityChange","useCallback","isElemVisible","active","div","Spring3DHover","member","xys","set","href","onMouseLeave","onMouseMove","clientX","y","clientY","calc","interpolate","trans","alt","src","borderRadius","window","innerHeight","innerWidth","s","SubComponents","Union","Literal","AsyncComponent","isLoading","Loading","Loaded","Calendar","allDaySlot","dayHeaderFormat","weekday","droppable","editable","headerToolbar","initialDate","initialView","nowIndicator","plugins","interactionPlugin","timeGridPlugin","selectable","weekends","GridItemCheckboxGroup","FormLabel","component","o","FormControlLabel","Checkbox","defaultChecked","inputRef","camelCase","GridItemRadioGroup","RadioGroup","Radio","GridItemTextField","TextField","ImportInputWrapper","onInputChange","htmlFor","accept","id","NewTabLink","Link","rel","Schedule","Provider","ScheduleBase","calendarHeaders","calendarOptions","popupData","setPopupData","handleEventClick","arg","open","el","useMemo","calenderHeadersNoEmptyInTerm","Stick","node","eventClick","maxWidth","LeftTimeAxis","time","tenVH","ScheduleHeader","top","AboutPage","align","p","AboutVision","body","AboutTeam","AboutCode","AboutReport","AboutResources","TeamMemberProfile","TextSection","mt","ColorBy","HelpPage","SchedulizerPage","App","useReducer","path","Footer","AppBar","elevation","logo","CalvinLogo","Header","Toolbar","to","RouterLink","updateRow","newRow","prevRow","termName","termCourseSectionProp","termHoursProp","FacultyLoads","newTableData","newFacultyRow","faculty","prevAddedFacultyRow","updateArgs","row","totalHours","fallHours","springHours","summerHours","sort","b","createTable","columns","accessor","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","prepareRow","TableContainer","Paper","Table","TableHead","headerGroup","getHeaderGroupProps","column","TableCell","getHeaderProps","render","TableBody","getRowProps","cells","cell","getCellProps","FacultySchedule","RoomsSchedule","CSVActions","onExportClick","edge","Menu","getContentAnchorEl","bindMenu","MenuItem","button","ImportButton","btnProps","NoCoursesHeader","marginRight","TabPanel","index","other","aria-labelledby","hidden","role","Tabs","tabValue","setTabValue","scheduleHasCourses","Container","centered","indicatorColor","newValue","textColor","Tab","ColorSelector","Level","colorValue","setColorValue","InputLabel","Select","Room","Instructor","Prefix","ScheduleToolbar","Searchbar","Autocomplete","getOptionLabel","option","classes","renderInput","SemesterSelector","terms","handleOnClick","newTerm","ChevronLeft","ChevronRight","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","Date","getFullYear"],"mappings":"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","file":"static/js/main.ae661aff.chunk.js","sourcesContent":["export * from \"./dayInterfaces\";\nexport * from \"./scheduleInterfaces\";\nexport * from \"./termInterfaces\";\n","import { Schedule, Term } from \"./dataInterfaces\";\n\n// structure for the global app state\nexport interface AppState {\n  professors: string[];\n  rooms: string[];\n  schedule: Schedule;\n  selectedTerm: Term;\n  slotMaxTime: string;\n  slotMinTime: string;\n}\n\n// Defaults for the app state when it launches\nexport const initialAppState = {\n  professors: [],\n  rooms: [],\n  schedule: { courses: [] },\n  selectedTerm: Term.Fall,\n  slotMaxTime: \"22:00\",\n  slotMinTime: \"6:00\",\n};\n\n// structure of actions that can be sent to app dispatch\nexport interface AppAction {\n  payload: {\n    schedule?: Schedule;\n    term?: Term;\n  };\n  type: \"setScheduleData\" | \"setSelectedTerm\"; // add | to add more actions in the future\n}\n","/* eslint-disable typescript-sort-keys/string-enum */\n\nexport enum Day {\n  Monday = \"M\",\n  Tuesday = \"T\",\n  Wednesday = \"W\",\n  Thursday = \"TH\",\n  Friday = \"F\",\n  Saturday = \"S\",\n  Sunday = \"SU\",\n}\n\nexport enum Weekday {\n  Monday = Day.Monday,\n  Tuesday = Day.Tuesday,\n  Wednesday = Day.Wednesday,\n  Thursday = Day.Thursday,\n  Friday = Day.Friday,\n}\n","/* eslint-disable typescript-sort-keys/string-enum */\n\nexport enum Term {\n  Fall = \"FA\",\n  Interim = \"IN\", // TODO: Remove?\n  Spring = \"SP\",\n  Summer = \"SU\", // TODO: Is this a thing?\n}\n\nexport enum SemesterLength {\n  Full = \"Full\",\n  HalfFirst = \"First\",\n  HalfSecond = \"Second\",\n  IntensiveA = \"A\",\n  IntensiveB = \"B\",\n  IntensiveC = \"C\",\n  IntensiveD = \"D\",\n}\n\nexport enum Half {\n  First = SemesterLength.HalfFirst,\n  Second = SemesterLength.HalfSecond,\n}\n\nexport enum Intensive {\n  A = SemesterLength.IntensiveA,\n  B = SemesterLength.IntensiveB,\n  C = SemesterLength.IntensiveC,\n  D = SemesterLength.IntensiveD,\n}\n\nexport enum SemesterLengthOption {\n  FullSemester = \"Full\",\n  HalfSemester = \"Half\",\n  IntensiveSemester = \"Intensive\",\n  CustomSemester = \"Custom\",\n}\n","import { createContext, Dispatch, SetStateAction } from \"react\";\nimport { AppAction, AppState, initialAppState, voidFn } from \"utilities\";\n\ninterface AppContext {\n  appDispatch: Dispatch<AppAction> | (() => void);\n  appState: AppState;\n  isCSVLoading: boolean;\n  setIsCSVLoading: Dispatch<SetStateAction<AppContext[\"isCSVLoading\"]>> | (() => void);\n}\n\n/* Used for containing the global state of the app\n  and a dispatcher to perform updates against the\n  state of the app.\n*/\nexport const AppContext = createContext<AppContext>({\n  appDispatch: voidFn,\n  appState: initialAppState,\n  isCSVLoading: false,\n  setIsCSVLoading: voidFn,\n});\n","import { createContext, Dispatch, SetStateAction } from \"react\";\nimport { voidFn } from \"utilities\";\n\ninterface ScheduleContext {\n  isScheduleLoading: boolean;\n  setIsScheduleLoading:\n    | Dispatch<SetStateAction<ScheduleContext[\"isScheduleLoading\"]>>\n    | (() => void);\n}\n\n/* Provide a context for each Schedule (Faculty, Room, etc.) */\nexport const ScheduleContext = createContext<ScheduleContext>({\n  isScheduleLoading: false,\n  setIsScheduleLoading: voidFn,\n});\n","import { cloneDeep } from \"lodash\";\nimport moment from \"moment\";\nimport { emptyMeeting } from \"utilities/constants\";\nimport { Course, Day, Meeting, Section, SemesterLength, Term } from \"utilities/interfaces\";\n\nexport interface CaseCallbackParams {\n  course: Course;\n  meetings: Meeting[];\n  section: Section;\n}\n\nexport const MIN_HALF_LENGTH = 35;\nexport const MAX_HALF_LENGTH = 80;\n\n// Define regexes for parsing\n// const timeReg = RegExp(\"(?<![1-9])(1[0-9]|2[0-3]|[0-9]):([0-5][0-9])\");\n// const amReg = RegExp(\"[Aa][Mm]\");\n// const pmReg = RegExp(\"[Pp][Mm]\");\nconst fallReg = RegExp(\"[Ff]\");\nconst summerReg = RegExp(\"[Ss][Uu]|[Mm][Aa]\");\nconst springReg = RegExp(\"[Ss](?![Uu])\");\n// \"W\" represents interim in Pruim's system it seems\nconst interimReg = RegExp(\"[Ii]|[Ww]\");\nconst sunReg = RegExp(\"[Ss][Uu]|[Nn]\");\nconst monReg = RegExp(\"[Mm]\");\nconst tuesReg = RegExp(\"[Tt](?![Hh])\");\nconst wedReg = RegExp(\"[Ww]\");\nconst thursReg = RegExp(\"[Tt][Hh]|[Rr]\");\nconst friReg = RegExp(\"[Ff]\");\nconst satReg = RegExp(\"[Ss](?![Uu])\");\n\nconst createMeetings = (value: string, { meetings }: CaseCallbackParams): string[] => {\n  const valueParts = value.split(\"\\n\");\n  valueParts.forEach((_, i) => {\n    if (meetings.length <= i) {\n      // If there aren't enough meetings, create a new one\n      meetings.push(cloneDeep(emptyMeeting));\n    }\n  });\n  return valueParts;\n};\n\nconst assignWithMeetings = (\n  value: string,\n  params: CaseCallbackParams,\n  arrAssign: (value: string, i: number, arr: Meeting[]) => void,\n) => {\n  const valueParts = createMeetings(value, params);\n  const { meetings } = params;\n  valueParts.forEach((v, i) => {\n    arrAssign(v, i, meetings);\n  });\n};\n\nexport const startTimeCallback = (value: string, params: CaseCallbackParams) => {\n  assignWithMeetings(value, params, (startTime, i, meetings) => {\n    meetings[i].startTime = startTimeCase(startTime);\n  });\n};\n\nexport const locationCallback = (value: string, params: CaseCallbackParams) => {\n  assignWithMeetings(value, params, (location, i, meetings) => {\n    [meetings[i].location.building, meetings[i].location.roomNumber] = locationCase(location);\n  });\n};\n\nexport const termCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.term = termCase(value);\n};\n\nexport const semesterLengthCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.semesterLength = semesterLengthCase(value);\n};\n\nexport const daysCallback = (value: string, params: CaseCallbackParams) => {\n  assignWithMeetings(value, params, (days, i, meetings) => {\n    meetings[i].days = daysCase(days);\n  });\n};\n\nexport const instructorCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.instructors = instructorCase(value);\n};\n\nexport const prefixCallback = (value: string, { course }: CaseCallbackParams) => {\n  course.prefixes = prefixCase(value);\n};\n\nexport const nameCallback = (value: string, { course }: CaseCallbackParams) => {\n  course.name = value;\n};\n\nexport const numberCallback = (value: string, { course }: CaseCallbackParams) => {\n  course.number = value;\n};\n\nexport const letterCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.letter = value;\n};\n\nexport const globalMaxCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.globalMax = numberDefaultZeroCase(value);\n};\n\nexport const localMaxCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.localMax = numberDefaultZeroCase(value);\n};\n\nexport const anticipatedSizeCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.anticipatedSize = numberDefaultZeroCase(value);\n};\n\nexport const commentsCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.comments = value;\n};\n\nexport const yearCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.year = yearCase(value);\n};\n\nexport const studentHoursCallback = (value: string, { course }: CaseCallbackParams) => {\n  course.studentHours = numberDefaultZeroCase(value);\n};\n\nexport const facultyHoursCallback = (value: string, { course }: CaseCallbackParams) => {\n  course.facultyHours = numberDefaultZeroCase(value);\n};\n\nexport const durationCallback = (value: string, params: CaseCallbackParams) => {\n  assignWithMeetings(value, params, (duration, i, meetings) => {\n    meetings[i].duration = durationCase(duration);\n  });\n};\n\nexport const roomCapacityCallback = (value: string, params: CaseCallbackParams) => {\n  assignWithMeetings(value, params, (capacity, i, meetings) => {\n    meetings[i].location.roomCapacity = numberDefaultZeroCase(capacity);\n  });\n};\n\nexport const departmentCallback = (value: string, { course }: CaseCallbackParams) => {\n  course.department = value;\n};\n\nexport const termStartCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.termStart = value;\n};\n\nexport const usedCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.used = numberDefaultZeroCase(value);\n};\n\nexport const day10UsedCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.day10Used = numberDefaultZeroCase(value);\n};\n\nexport const startDateCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.startDate = value;\n};\n\nexport const endDateCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.endDate = value;\n  section.semesterLength = endDateCase(value, section.startDate);\n};\n\nexport const statusCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.status = value;\n};\n\nexport const instructionalMethodCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.instructionalMethod = value;\n};\n\nexport const startTimeCase = (value: string): string => {\n  const startMoment = moment(value, \"h:mm A\");\n  return startMoment.isValid() ? startMoment.format(\"h:mm A\") : \"\";\n};\n\nexport const locationCase = (value: string): string[] => {\n  const roomParts = value.trim().split(\" \");\n  if (roomParts.length === 1) {\n    // No room number given\n    return [roomParts[0], \"\"];\n  }\n  if (roomParts.length === 2) {\n    // Building and room number given\n    return roomParts;\n  }\n  // Too many room parts given, assume last part is room number and rest is building\n  return [roomParts.slice(0, -1).join(\" \"), roomParts.slice(-1)[0]];\n};\n\nexport const termCase = (value: string): Term => {\n  if (fallReg.test(value)) {\n    return Term.Fall;\n  }\n  if (summerReg.test(value)) {\n    return Term.Summer;\n  }\n  if (springReg.test(value)) {\n    return Term.Spring;\n  }\n  if (interimReg.test(value)) {\n    return Term.Interim;\n  }\n  // eslint-disable-next-line no-console\n  console.log(`Term of \"${value}\" is unreadable, defaulting to Fall`);\n  return Term.Fall;\n};\n\nexport const semesterLengthCase = (value: string): SemesterLength => {\n  const upperValue = value.toUpperCase();\n  const lowerValue = value.toLowerCase();\n  if (lowerValue === \"first\") {\n    return SemesterLength.HalfFirst;\n  }\n  if (lowerValue === \"second\") {\n    return SemesterLength.HalfSecond;\n  }\n  if (lowerValue === \"full\") {\n    return SemesterLength.Full;\n  }\n  if (upperValue === \"A\") {\n    return SemesterLength.IntensiveA;\n  }\n  if (upperValue === \"B\") {\n    return SemesterLength.IntensiveB;\n  }\n  if (upperValue === \"C\") {\n    return SemesterLength.IntensiveC;\n  }\n  if (upperValue === \"D\") {\n    return SemesterLength.IntensiveD;\n  }\n  // eslint-disable-next-line no-console\n  console.log(`Half of \"${value}\" is unreadable, defaulting to Full`);\n  return SemesterLength.Full;\n};\n\nexport const daysCase = (value: string) => {\n  const days: Day[] = [];\n  if (sunReg.test(value)) {\n    days.push(Day.Sunday);\n  }\n  if (monReg.test(value)) {\n    days.push(Day.Monday);\n  }\n  if (tuesReg.test(value)) {\n    days.push(Day.Tuesday);\n  }\n  if (wedReg.test(value)) {\n    days.push(Day.Wednesday);\n  }\n  if (thursReg.test(value)) {\n    days.push(Day.Thursday);\n  }\n  if (friReg.test(value)) {\n    days.push(Day.Friday);\n  }\n  if (satReg.test(value)) {\n    days.push(Day.Saturday);\n  }\n  return days;\n};\n\nexport const instructorCase = (value: string): string[] => {\n  const instructors = value.split(/[;,\\n]/);\n  return instructors.map((instructor) => {\n    return instructor.trim();\n  });\n};\n\nexport const endDateCase = (\n  value: string,\n  startSectionDate: string | undefined,\n): SemesterLength => {\n  const sectionStart = moment(startSectionDate, \"l\");\n  const sectionEnd = moment(value, \"l\");\n  const sectionLength = sectionEnd.diff(sectionStart, \"days\");\n  const startMonth = sectionStart.month();\n  const firstStartMonths = [0, 1, 7, 8]; // Jan, Feb, Aug, Sept\n  if (sectionLength > MAX_HALF_LENGTH) {\n    return SemesterLength.Full;\n  }\n  if (sectionLength > MIN_HALF_LENGTH && sectionLength <= MAX_HALF_LENGTH) {\n    return firstStartMonths.includes(startMonth)\n      ? SemesterLength.HalfFirst\n      : SemesterLength.HalfSecond;\n  }\n  // TODO: Figure out if intensive is A, B, C, or D\n  return SemesterLength.IntensiveA;\n};\n\nexport const prefixCase = (value: string): string[] => {\n  return value.replace(\" \", \"\").split(/[;,\\n]/);\n};\n\nexport const numberDefaultZeroCase = (value: string): number => {\n  return Number.isInteger(Number(value)) ? Number(value) : 0;\n};\n\nexport const durationCase = (value: string): number => {\n  if (Number.isInteger(Number(value))) {\n    return Number(value);\n  }\n  const [startTime, endTime] = value.split(\" \").join(\"\").split(\"-\");\n  const startTimeMoment = moment(startTime, \"h:mmA\");\n  const endTimeMoment = moment(endTime, \"h:mmA\");\n  return endTimeMoment.diff(startTimeMoment, \"minutes\");\n};\n\nexport const yearCase = (value: string): number | string => {\n  return Number.isInteger(Number(value)) ? Number(value) : value;\n};\n","import React, { ComponentProps, ElementType, FC, forwardRef, ReactNode } from \"react\";\nimport { getChildByName } from \"utilities\";\n\n/* Options props to pass when creating a component. */\ninterface ComponentOptions<T extends ElementType = \"div\"> {\n  Component?: T;\n  defaultProps?: Partial<ComponentProps<T>>;\n  displayName?: string;\n}\n\n/*\nThis function will create a \"pass-through\" component. It is used to create\n  sub-components that return its children so the parent component and arrange those children.\n  The parent affectively can employ \"middleware\" between the child component JSX and the JSX that is\n  rendered. This function was originally from from React-Bootstrap which has been modified under their\n  MIT license.\nRef: https://github.com/react-bootstrap/react-bootstrap/blob/072e7c5fb01b492735a9db2409909058a9976190/src/createWithBsPrefix.tsx#L16\n*/\nexport const createFC = <T extends ElementType = \"div\">(\n  prefix: string,\n  { displayName = prefix, Component, defaultProps }: ComponentOptions<T> = {},\n): FC<{}> => {\n  const subComponent = forwardRef(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ({ className, as: Tag = Component || \"div\", ...props }: any, ref) => {\n      return <Tag ref={ref} className={`${className}`} {...props} />;\n    },\n  );\n  subComponent.defaultProps = defaultProps;\n  subComponent.displayName = displayName;\n  return subComponent as FC<{}>;\n};\n\ntype Alternatives = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  alternatives?: any;\n};\n\n/*\nReturns an iterable from a \"runtypes\" union.\nRef: https://github.com/microsoft/TypeScript/issues/13542#issuecomment-282762530\n*/\nconst getUnionTypeIterable = <T extends Alternatives>(type: T): string[] => {\n  return type.alternatives.map((literal: { value: string }) => {\n    return literal.value;\n  });\n};\n\ntype Elements<T extends string> = { [key in T]?: JSX.Element };\n\n/* This gets the JSX.Elements from the children of a component and return them in an object\nRef: https://stackoverflow.com/questions/53813188/how-can-i-cast-custom-type-to-primitive-type\n*/\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const getElements = <T extends string>(children: ReactNode, type: any) => {\n  const elements: Elements<T> = {};\n  getUnionTypeIterable<T & Alternatives>(type).forEach((it: string) => {\n    // eslint-disable-next-line prefer-destructuring\n    elements[(it as unknown) as T] = getChildByName(children, it)[0];\n  });\n  return elements;\n};\n","import { cloneDeep } from \"lodash\";\nimport papa from \"papaparse\";\nimport { Course, emptyCourse, emptySection, Meeting, Schedule, Section } from \"utilities\";\nimport { getCourse, getSection } from \"utilities/services\";\nimport * as cf from \"./caseFunctions\";\n\ninterface ValidFields {\n  [key: string]: (value: string, data: cf.CaseCallbackParams) => void;\n}\n\nconst pruimSpreadsheetFields: ValidFields = {\n  anticipatedSize: cf.anticipatedSizeCallback,\n  comments: cf.commentsCallback,\n  days: cf.daysCallback,\n  duration: cf.durationCallback,\n  facultyHours: cf.facultyHoursCallback,\n  globalMax: cf.globalMaxCallback,\n  half: cf.semesterLengthCallback,\n  instructor: cf.instructorCallback,\n  instructors: cf.instructorCallback,\n  localMax: cf.localMaxCallback,\n  location: cf.locationCallback,\n  name: cf.nameCallback,\n  number: cf.numberCallback,\n  prefix: cf.prefixCallback,\n  prefixes: cf.prefixCallback,\n  roomCapacity: cf.roomCapacityCallback,\n  section: cf.letterCallback,\n  semesterLength: cf.semesterLengthCallback,\n  startTime: cf.startTimeCallback,\n  startTimeStr: cf.startTimeCallback,\n  studentHours: cf.studentHoursCallback,\n  term: cf.termCallback,\n  year: cf.yearCallback,\n};\n\nconst registrarSpreadsheetFields: ValidFields = {\n  AcademicYear: cf.yearCallback,\n  BuildingAndRoom: cf.locationCallback,\n  Comments: cf.commentsCallback,\n  CourseNum: cf.numberCallback,\n  Day10Used: cf.day10UsedCallback,\n  Department: cf.departmentCallback,\n  Faculty: cf.instructorCallback,\n  FacultyLoad: cf.facultyHoursCallback,\n  GlobalMax: cf.globalMaxCallback,\n  InstructionalMethod: cf.instructionalMethodCallback,\n  LocalMax: cf.localMaxCallback,\n  MeetingDays: cf.daysCallback,\n  MeetingDurationMinutes: cf.durationCallback,\n  MeetingStart: cf.startTimeCallback,\n  MeetingTime: cf.durationCallback,\n  MinimumCredits: cf.studentHoursCallback,\n  RoomCapacity: cf.roomCapacityCallback,\n  SectionCode: cf.letterCallback,\n  SectionEndDate: cf.endDateCallback,\n  SectionStartDate: cf.startDateCallback,\n  SectionStatus: cf.statusCallback,\n  ShortTitle: cf.nameCallback,\n  SubjectCode: cf.prefixCallback,\n  Term: cf.termCallback,\n  TermStart: cf.termStartCallback,\n  Used: cf.usedCallback,\n};\n\nconst callbacks: ValidFields = {\n  ...pruimSpreadsheetFields,\n  ...registrarSpreadsheetFields,\n};\n\nexport const csvStringToSchedule = (csvString: string): Schedule => {\n  const objects: papa.ParseResult<never> = papa.parse(csvString, {\n    header: true,\n    skipEmptyLines: true,\n  });\n\n  // Define variables for Schedule creation\n  const schedule: Schedule = {\n    courses: [],\n  };\n\n  // Get data and fields from the CSV\n  const { data, meta } = objects;\n  const { fields } = meta;\n\n  // Parse each row of the CSV as an object\n  data.forEach((object) => {\n    // Reset defaults\n    const section = cloneDeep(emptySection);\n    const meetings: Meeting[] = [];\n    const course: Course = cloneDeep(emptyCourse);\n\n    // Iterate through the fields of the CSV, and parse their values for this object\n    // TODO: Create a sense of priority for MeetingDurationMinutes over MeetingTime and SemesterLength over SemesterEndDate - SemesterStartDate\n    if (fields) {\n      fields.forEach((field) => {\n        const value = String(object[field]);\n        field = field.replace(/\\s/g, \"\").replace(\"ï»¿\", \"\");\n        if (field in callbacks) {\n          callbacks[field as keyof ValidFields](value, { course, meetings, section });\n        }\n      });\n\n      // Insert the Section to the Schedule, either as a new Course or to an existing Course\n      section.meetings = meetings;\n      insertSectionCourse(schedule, section, course);\n    }\n  });\n  return schedule;\n};\n\nexport const insertSectionCourse = (schedule: Schedule, section: Section, course: Course) => {\n  const { meetings } = section;\n\n  // Check if any meetings are empty, and should be removed\n  // TODO: What about TBA meetings where the location is specified but not the time\n  //       (currently allowing these causes the app to crash)\n  section.meetings = meetings.filter((meeting) => {\n    return meeting.days.length > 0 && meeting.duration > 0;\n  });\n\n  // Check if there is already a course in the schedule with the same prefix and number\n  const existingCourse = getCourse(schedule, course.prefixes, course.number);\n\n  // If there is, first check if there is already a section for that course with the same letter and term\n  if (existingCourse) {\n    const existingCourseIndex = schedule.courses.indexOf(existingCourse);\n    const existingSection = getSection(\n      schedule,\n      course.prefixes,\n      course.number,\n      section.letter,\n      section.term,\n    );\n\n    // If there is, add the new meeting(s) to the existing course\n    if (existingSection) {\n      const existingSectionIndex = schedule.courses[existingCourseIndex].sections.indexOf(\n        existingSection,\n      );\n      // TODO: Avoid duplicate meetings?\n      schedule.courses[existingCourseIndex].sections[\n        existingSectionIndex\n      ].meetings = schedule.courses[existingCourseIndex].sections[\n        existingSectionIndex\n      ].meetings.concat(section.meetings);\n    }\n    // Otherwise, add the new section to the existing course\n    else {\n      schedule.courses[existingCourseIndex].sections.push(section);\n    }\n  }\n  // Otherwise, add the new course to the schedule\n  else {\n    course.sections.push(section);\n    schedule.courses.push(course);\n  }\n};\n","export interface TeamMember {\n  bio: string;\n  name: string;\n  photo: string;\n  website: string;\n}\n\n/* Basic information about the project team members */\nexport const team: TeamMember[] = [\n  {\n    bio:\n      \"Computer Science Student at Calvin University. Jonathan is a hard worker, a faster runner, and has previous web development experience.\",\n    name: \"Jonathan Ellis\",\n    photo:\n      \"https://avatars3.githubusercontent.com/u/49655167?s=460&u=b81f525db7da58b19bc28588282b366cd8b748ab&v=4\",\n    website: \"https://github.com/Jonri2\",\n  },\n  {\n    bio:\n      \"Computer Science and Mathematics Student at Calvin University. Bryant is hoping to go into software development while keeping Mathematics as a lifelong hobby.\",\n    name: \"Bryant George\",\n    photo:\n      \"https://avatars1.githubusercontent.com/u/51130302?s=460&u=83737db9aeff2b377654a3e0a7cd3dc39f54f7ff&v=4\",\n    website: \"https://github.com/bryantgeorge\",\n  },\n  {\n    bio:\n      \"Computer Science Student at Calvin University. Charles plans to start his software career post-graduation with Tekton as an ecommerce developer.\",\n    name: \"Charles Kornoelje\",\n    photo:\n      \"https://avatars2.githubusercontent.com/u/33156025?s=460&u=fb61bdf55f17108f9687c334b4b4abc4b09c7259&v=4\",\n    website: \"https://github.com/charkour\",\n  },\n  {\n    bio:\n      \"Computer Science Professor and Department Chair at Calvin University. VanderLinden's research interests are in Natural Language Engineering and Human-Computer Interaction.\",\n    name: \"Professor Keith VanderLinden\",\n    photo:\n      \"https://avatars0.githubusercontent.com/u/4930536?s=460&u=216f27d175496fec82a87e0c1c1c1514f73997da&v=4\",\n    website: \"https://calvin.edu/directory/people/keith-vander-linden\",\n  },\n  {\n    bio:\n      \"Mathematics and Statistics Professor and Department Chair at Calvin University. Pruim's research interests are in Computational Statistics, Scientific Computing, and Statistics Education.\",\n    name: \"Professor Randall Pruim\",\n    photo: \"https://www.statistics.com/wp-content/uploads/2019/05/dr-randall-pruim.jpg\",\n    website: \"https://calvin.edu/directory/people/randall-pruim\",\n  },\n];\n","import { Children, ReactNode } from \"react\";\n\n/* Create an iterable from an enumeration */\nexport const enumArray = <T>(e: T) => {\n  return Object.keys(e).map((val) => {\n    return e[val as keyof typeof e];\n  });\n};\n\n/* a no-op fn used for default values */\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const voidFn = () => {};\n\n/* Method of getting a child component by their display name.\n  Used in sub-components.\n*/\nexport const getChildByName = (children: ReactNode, displayName: string) => {\n  return Children.map(children as JSX.Element[], (child: JSX.Element) => {\n    return child?.type.displayName === displayName ? child : null;\n  });\n};\n","import moment from \"moment\";\nimport { Day, Schedule, Term } from \"utilities/interfaces\";\n\nexport const scheduleToCSVString = (schedule: Schedule): string => {\n  const numericReg = RegExp(\"[0-9]\");\n  let csvStr =\n    \"Department,Term,TermStart,AcademicYear,SectionName,SubjectCode,CourseNum,SectionCode,CourseLevelCode,MinimumCredits,FacultyLoad,Used,Day10Used,LocalMax,Global Max,RoomCapacity,BuildingAndRoom,MeetingDays,MeetingTime,SectionStartDate,SectionEndDate,SemesterLength,Building,RoomNumber,MeetingStart,MeetingStartInternal,MeetingDurationMinutes,MeetingEnd,MeetingEndInternal,Monday,Tuesday,Wednesday,Thursday,Friday,ShortTitle,Faculty,SectionStatus,InstructionalMethod,Comments\\n\";\n  schedule.courses.forEach((course) => {\n    course.sections.forEach((section) => {\n      // Iterate through meetings to construct relevant strings\n      let startMoment;\n      let endMoment;\n      let meetingTimeStr = \"\";\n      let meetingStartStr = \"\";\n      let meetingStartInternalStr = \"\";\n      let meetingEndStr = \"\";\n      let meetingEndInternalStr = \"\";\n      let meetingDurationMinutesStr = \"\";\n      let buildingStr = \"\";\n      let roomNumberStr = \"\";\n      let buildingAndRoomStr = \"\";\n      let roomCapacityStr = \"\";\n      let daysStr = \"\";\n      let monStr = \"\";\n      let tuesStr = \"\";\n      let wedStr = \"\";\n      let thursStr = \"\";\n      let friStr = \"\";\n      section.meetings.forEach((meeting) => {\n        startMoment = moment(meeting.startTime, \"h:mm A\");\n        endMoment = startMoment.clone().add(meeting.duration, \"minutes\");\n        if (startMoment.isValid()) {\n          meetingTimeStr += `${startMoment.format(\"h:mmA\")} - ${endMoment.format(\"h:mmA\")}\\n`;\n          meetingStartStr += `${startMoment.format(\"h:mm A\")}\\n`;\n          meetingStartInternalStr += `${startMoment.format(\"H:mm:ss\")}\\n`;\n          meetingEndStr += `${endMoment.format(\"h:mm A\")}\\n`;\n          meetingEndInternalStr += `${endMoment.format(\"H:mm:ss\")}\\n`;\n        } else {\n          meetingTimeStr += \"\\n\";\n          meetingStartStr += \"\\n\";\n          meetingStartInternalStr += \"\\n\";\n          meetingEndStr += \"\\n\";\n          meetingEndInternalStr += \"\\n\";\n        }\n        meetingDurationMinutesStr += `${meeting.duration}\\n`;\n        buildingStr += `${meeting.location.building}\\n`;\n        roomNumberStr += `${meeting.location.roomNumber}\\n`;\n        buildingAndRoomStr += meeting.location.roomNumber\n          ? `${meeting.location.building} ${meeting.location.roomNumber}\\n`\n          : `${meeting.location.building}\\n`;\n        roomCapacityStr += `${meeting.location.roomCapacity}\\n`;\n        daysStr += `${meeting.days.join(\"\")}\\n`;\n        monStr += `${meeting.days.includes(Day.Monday) ? \"M\" : \"\"}\\n`;\n        tuesStr += `${meeting.days.includes(Day.Tuesday) ? \"T\" : \"\"}\\n`;\n        wedStr += `${meeting.days.includes(Day.Wednesday) ? \"W\" : \"\"}\\n`;\n        thursStr += `${meeting.days.includes(Day.Thursday) ? \"TH\" : \"\"}\\n`;\n        friStr += `${meeting.days.includes(Day.Friday) ? \"F\" : \"\"}\\n`;\n      });\n      // Remove trailing newlines\n      meetingTimeStr = meetingTimeStr.slice(0, -1);\n      meetingStartStr = meetingStartStr.slice(0, -1);\n      meetingStartInternalStr = meetingStartInternalStr.slice(0, -1);\n      meetingEndStr = meetingEndStr.slice(0, -1);\n      meetingEndInternalStr = meetingEndInternalStr.slice(0, -1);\n      meetingDurationMinutesStr = meetingDurationMinutesStr.slice(0, -1);\n      buildingStr = buildingStr.slice(0, -1);\n      roomNumberStr = roomNumberStr.slice(0, -1);\n      buildingAndRoomStr = buildingAndRoomStr.slice(0, -1);\n      roomCapacityStr = roomCapacityStr.slice(0, -1);\n      daysStr = daysStr.slice(0, -1);\n      monStr = monStr.slice(0, -1);\n      tuesStr = tuesStr.slice(0, -1);\n      wedStr = wedStr.slice(0, -1);\n      thursStr = thursStr.slice(0, -1);\n      friStr = friStr.slice(0, -1);\n      // Create strings for fields that need to be constructed\n      const termStr = `${\n        typeof section.year === \"number\"\n          ? section.term === Term.Fall\n            ? String(section.year).slice(-2)\n            : String(section.year + 1).slice(-2)\n          : section.term === Term.Fall\n          ? String(Number(section.year.slice(-2)) - 1)\n          : section.year.slice(-2)\n      }/${section.term}`;\n      const sectionNameStr = `${course.prefixes.length ? course.prefixes[0] : \"\"}-${\n        course.number\n      }-${section.letter}`;\n      const courseLevelCodeStr = numericReg.test(course.number[0])\n        ? `${course.number[0]}00`\n        : \"100\";\n\n      // Construct a row in the output CSV\n      csvStr += `\"${course.department}\",${termStr},${section.termStart},${\n        section.year\n      },\"${sectionNameStr}\",\"${course.prefixes.join(\"\\n\")}\",${course.number},${\n        section.letter\n      },${courseLevelCodeStr},${section.studentHours ?? course.studentHours},${\n        section.facultyHours ?? course.facultyHours\n      },${section.used},${section.day10Used},${section.localMax},${\n        section.globalMax\n      },\"${roomCapacityStr}\",\"${buildingAndRoomStr}\",\"${daysStr}\",\"${meetingTimeStr}\",${\n        section.startDate\n      },${section.endDate},${\n        section.semesterLength\n      },\"${buildingStr}\",\"${roomNumberStr}\",\"${meetingStartStr}\",\"${meetingStartInternalStr}\",\"${meetingDurationMinutesStr}\",\"${meetingEndStr}\",\"${meetingEndInternalStr}\",\"${monStr}\",\"${tuesStr}\",\"${wedStr}\",\"${thursStr}\",\"${friStr}\",\"${\n        course.name\n      }\",\"${section.instructors.join(\"\\n\")}\",\"${section.status}\",\"${\n        section.instructionalMethod\n      }\",\"${section.comments}\"\\n`;\n    });\n  });\n  return csvStr;\n};\n","import download from \"js-file-download\";\nimport moment from \"moment\";\nimport { useContext } from \"react\";\nimport { scheduleToCSVString } from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\n\n/* Hook that downloads the current schedule when onExportClick\n is executed. */\nexport const useExportCSV = () => {\n  const {\n    appState: { schedule },\n  } = useContext(AppContext);\n\n  const onExportClick = () => {\n    // TODO: maybe generate a cool title like schedule-fall-2020.csv\n    download(scheduleToCSVString(schedule), `schedule_${moment().format()}.csv`);\n  };\n  return onExportClick;\n};\n","import { isEqual } from \"lodash\";\nimport { ChangeEvent, useContext } from \"react\";\nimport { csvStringToSchedule } from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\n\n// A closure with statefulness. Used to handle changes to inputs\nexport const useImportFile = () => {\n  const {\n    appState: { schedule },\n    appDispatch,\n    setIsCSVLoading,\n  } = useContext(AppContext);\n\n  // TODO: this only runs when input changes, but if the same file\n  // is uploaded, this will not run.\n  // https://stackoverflow.com/questions/5201317/read-the-contents-of-a-file-object\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setIsCSVLoading(true);\n    const file: Blob | null = e.target.files && e.target.files[0];\n    const read = new FileReader();\n    file && read.readAsBinaryString(file);\n\n    read.onloadend = async () => {\n      const scheduleJSON = csvStringToSchedule(String(read.result));\n      // TODO: store in local storage incase prof navigates away while editing.\n      // currently a redundant check\n      if (!isEqual(schedule, scheduleJSON)) {\n        await appDispatch({ payload: { schedule: scheduleJSON }, type: \"setScheduleData\" });\n      }\n      setIsCSVLoading(false);\n    };\n  };\n\n  return onInputChange;\n};\n","import { AppAction, AppState, Term } from \"utilities/interfaces\";\nimport { getMinAndMaxTimes, getProfs, getRooms } from \"utilities/services\";\n\n/*\n  Provides a function to perform multiple setState updates\n  at once that depend on each other.\n*/\nexport const reducer = (state: AppState, action: AppAction): AppState => {\n  switch (action.type) {\n    case \"setScheduleData\": {\n      let { schedule } = action.payload;\n      schedule = schedule || { courses: [] };\n      const times = getMinAndMaxTimes(schedule);\n      return {\n        ...state,\n        professors: getProfs(schedule),\n        rooms: getRooms(schedule),\n        schedule,\n        slotMaxTime: times.maxTime,\n        slotMinTime: times.minTime,\n      };\n    }\n    case \"setSelectedTerm\": {\n      let { term } = action.payload;\n      term = term || Term.Fall;\n      return { ...state, selectedTerm: term };\n    }\n    default:\n      return state;\n  }\n};\n","module.exports = __webpack_public_path__ + \"static/media/CalvinUniv-vert-full-color-inverse.255efbf6.png\";","import { filter, indexOf, isEqual } from \"lodash\";\nimport {\n  Course,\n  Half,\n  insertSectionCourse,\n  instructorCase,\n  Intensive,\n  locationCase,\n  prefixCase,\n  Schedule,\n  Section,\n  SemesterLength,\n  SemesterLengthOption,\n  startTimeCase,\n} from \"utilities\";\nimport { Instructor, Location, Meeting, Prefix } from \"utilities/interfaces\";\nimport { array, object } from \"yup\";\n\n// Defines interface for the section popover input\nexport interface SectionInput {\n  anticipatedSize: Section[\"anticipatedSize\"];\n  comments: Section[\"comments\"];\n  days: Meeting[\"days\"];\n  duration: Meeting[\"duration\"];\n  facultyHours: Section[\"facultyHours\"];\n  globalMax: Section[\"globalMax\"];\n  half: Half;\n  instructor: Instructor;\n  intensive?: Intensive;\n  localMax: Section[\"localMax\"];\n  location: string;\n  name: Course[\"name\"];\n  number: Course[\"number\"];\n  prefix: Prefix;\n  roomCapacity: Location[\"roomCapacity\"];\n  section: Section[\"letter\"];\n  semesterLength: SemesterLengthOption;\n  startTime: Meeting[\"startTime\"];\n  studentHours: Section[\"studentHours\"];\n  term: Section[\"term\"];\n}\n\nexport const convertFromSemesterLength = (sl: SemesterLength | undefined): SemesterLengthOption => {\n  if (sl === SemesterLength.Full || !sl) {\n    return SemesterLengthOption.FullSemester;\n  }\n  if (sl === SemesterLength.HalfFirst || sl === SemesterLength.HalfSecond) {\n    return SemesterLengthOption.HalfSemester;\n  }\n\n  return SemesterLengthOption.IntensiveSemester;\n};\n\nexport const convertToSemesterLength = (\n  sl: Half | Intensive | SemesterLengthOption,\n): SemesterLength => {\n  switch (sl) {\n    case Half.First:\n      return SemesterLength.HalfFirst;\n    case Half.Second:\n      return SemesterLength.HalfSecond;\n    case Intensive.A:\n      return SemesterLength.IntensiveA;\n    case Intensive.B:\n      return SemesterLength.IntensiveB;\n    case Intensive.C:\n      return SemesterLength.IntensiveC;\n    case Intensive.D:\n      return SemesterLength.IntensiveD;\n    default:\n      return SemesterLength.Full;\n  }\n};\n\n// Remove false values from days array. Used by useForm()\nexport const schema = object().shape({\n  days: array().transform((d) => {\n    return d.filter((day: boolean | string) => {\n      return day;\n    });\n  }),\n});\n\nexport const getSectionName = (course: Course, section: Section) => {\n  return `${course.prefixes[0]}-${course.number}-${section.letter}`;\n};\n\nexport const getCourse = (\n  schedule: Schedule,\n  prefixes: Course[\"prefixes\"],\n  number: Course[\"number\"],\n) => {\n  const courses = filter(schedule.courses, (course) => {\n    return isEqual(course.prefixes, prefixes) && course.number === number;\n  });\n  return courses.length > 0 ? courses[0] : undefined;\n};\n\nexport const getSection = (\n  schedule: Schedule,\n  prefixes: Course[\"prefixes\"],\n  number: Course[\"number\"],\n  letter: Section[\"letter\"],\n  term: Section[\"term\"],\n) => {\n  const course = getCourse(schedule, prefixes, number);\n  const sections = filter(course?.sections, (section) => {\n    return section.letter === letter && section.term === term;\n  });\n  return sections.length > 0 ? sections[0] : undefined;\n};\n\nexport const removeSection = (\n  schedule: Schedule,\n  letter: Section[\"letter\"],\n  term: Section[\"term\"],\n  courseIndex: number,\n) => {\n  schedule.courses[courseIndex].sections = filter(\n    schedule.courses[courseIndex].sections,\n    (section) => {\n      return section.letter !== letter || section.term !== term;\n    },\n  );\n};\n\n/* Used to map the input from the popover form to the\n internal JSON object type.  */\nexport const mapInputToInternalTypes = (data: SectionInput) => {\n  const location = locationCase(data.location);\n  const semesterType = convertToSemesterLength(data.intensive || data.half || data.semesterLength);\n  const newSection: Section = {\n    anticipatedSize: Number(data.anticipatedSize),\n    comments: data.comments,\n    day10Used: 0,\n    endDate: \"\",\n    facultyHours: Number(data.facultyHours),\n    globalMax: Number(data.globalMax),\n    instructionalMethod: \"LEC\",\n    instructors: instructorCase(data.instructor),\n    letter: data.section,\n    localMax: Number(data.localMax),\n    meetings: [\n      {\n        days: data.days,\n        duration: Number(data.duration),\n        location: {\n          building: location[0],\n          roomCapacity: Number(data.roomCapacity),\n          roomNumber: location[1],\n        },\n        startTime: startTimeCase(data.startTime),\n      },\n    ],\n    semesterLength: semesterType,\n    startDate: \"\",\n    status: \"Active\",\n    studentHours: Number(data.studentHours),\n    term: data.term,\n    termStart: \"\",\n    used: 0,\n    year: \"2021-2022\",\n  };\n\n  const newCourse: Course = {\n    department: \"\",\n    facultyHours: Number(data.facultyHours),\n    name: data.name,\n    number: data.number,\n    prefixes: prefixCase(data.prefix),\n    // The newSection will be added later in insertSectionCourse()\n    sections: [],\n    studentHours: Number(data.studentHours),\n  };\n  return { newCourse, newSection };\n};\n\n// Update the schedule via pass by sharing.\nexport const updateScheduleWithNewSection = (data: SectionInput, schedule: Schedule) => {\n  const {\n    newSection,\n    newCourse,\n  }: { newCourse: Course; newSection: Section } = mapInputToInternalTypes(data);\n\n  // Remove the old version of the Section if there is one\n  const oldSection = getSection(\n    schedule,\n    newCourse.prefixes,\n    newCourse.number,\n    newSection.letter,\n    newSection.term,\n  );\n  if (oldSection) {\n    const oldCourse = getCourse(schedule, newCourse.prefixes, newCourse.number);\n    const courseIndex = indexOf(schedule.courses, oldCourse);\n    removeSection(schedule, newSection.letter, newSection.term, courseIndex);\n  }\n\n  // Insert the Section to the Schedule, either as a new Course or to an existing Course\n  insertSectionCourse(schedule, newSection, newCourse);\n};\n","import forEach from \"lodash/forEach\";\nimport { Schedule } from \"utilities\";\n\n// Get list of unique professors.\nexport const getProfs = (schedule: Schedule): string[] => {\n  const professorsSet = new Set<string>();\n  forEach(schedule.courses, (course) => {\n    forEach(course.sections, (section) => {\n      forEach(section.instructors, (prof) => {\n        professorsSet.add(prof);\n      });\n    });\n  });\n  return [...professorsSet];\n};\n","import forEach from \"lodash/forEach\";\nimport { Schedule } from \"utilities\";\n\n// Get list of unique rooms.\nexport const getRooms = (schedule: Schedule): string[] => {\n  const roomsSet = new Set<string>();\n  forEach(schedule.courses, (course) => {\n    forEach(course.sections, (section) => {\n      forEach(section.meetings, ({ location }) => {\n        roomsSet.add(`${location.building} ${location.roomNumber}`);\n      });\n    });\n  });\n  return [...roomsSet];\n};\n","import { EventInput } from \"@fullcalendar/react\";\nimport { filter, flatten, forEach, forOwn, map, maxBy, minBy, range } from \"lodash\";\nimport moment from \"moment\";\nimport { enumArray } from \"utilities\";\nimport { INITIAL_DATE } from \"utilities/constants\";\nimport { Day, Meeting, Schedule, Section, Term } from \"utilities/interfaces\";\n\n// Returns a list of hours to display on the Schedule\n// TODO: add better types for timing, maybe: https://stackoverflow.com/questions/51445767/how-to-define-a-regex-matched-string-type-in-typescript\nexport const getHoursArr = (min: string, max: string): number[] => {\n  const minHour = parseInt(min.split(\":\")[0]);\n  const maxHour = parseInt(max.split(\":\")[0]);\n  return range(minHour, maxHour);\n};\n\nexport interface GroupedEvents {\n  [key: string]: EventInput[];\n}\n\nconst eventExistsInEventList = (event: EventInput, eventList: EventInput[]): boolean => {\n  return eventList.some((e) => {\n    return e.title === event.title && e.start === event.start && e.end === event.end;\n  });\n};\n\n// TODO: Add events with no meeting times as all day\nexport const getEvents = (schedule: Schedule, groups: \"faculty\" | \"room\"): GroupedEvents => {\n  const events: GroupedEvents = {};\n  const days: Day[] = enumArray(Day);\n  forEach(schedule.courses, (course) => {\n    forEach(course.sections, (section) => {\n      const sectionName = `${course.prefixes[0]}-${course.number}-${section.letter}`;\n      forEach(section.instructors, (prof) => {\n        forEach(section.meetings, (meeting) => {\n          const room = `${meeting.location.building} ${meeting.location.roomNumber}`;\n          const group = groups === \"faculty\" ? prof : room;\n          const startTimeMoment = moment(meeting.startTime, \"h:mm A\");\n          const endTimeMoment = moment(startTimeMoment).add(meeting.duration, \"minutes\");\n          forEach(meeting.days, (day) => {\n            const dayOfWeek = moment(INITIAL_DATE)\n              .add(days.indexOf(day) + 1, \"days\")\n              .format(\"YYYY-MM-DD\");\n            const newEvent: EventInput = {\n              description: course.name,\n              end: `${dayOfWeek}T${endTimeMoment.format(\"HH:mm\")}`,\n              extendedProps: {\n                course,\n                meeting,\n                section,\n              },\n              start: `${dayOfWeek}T${startTimeMoment.format(\"HH:mm\")}`,\n              title: sectionName,\n            };\n            if (events[group]) {\n              // Only add the event if it hasn't already been added\n              if (!eventExistsInEventList(newEvent, events[group])) {\n                events[group].push(newEvent);\n              }\n            } else {\n              events[group] = [newEvent];\n            }\n          });\n        });\n      });\n    });\n  });\n  return events;\n};\n\nexport const getMinAndMaxTimes = (schedule: Schedule) => {\n  const sections: Section[] = flatten(map(schedule.courses, \"sections\"));\n  const meetings: Meeting[] = flatten(map(sections, \"meetings\"));\n  const startTimes = map(meetings, (meeting) => {\n    return moment(meeting.startTime, \"h:mm A\");\n  });\n  const endTimes = map(meetings, (meeting) => {\n    return moment(meeting.startTime, \"h:mm A\").add(meeting.duration, \"minutes\");\n  });\n  const minTime = (minBy(startTimes) || moment(\"06:00\", \"HH:mm\")).startOf(\"hour\").format(\"HH:mm\");\n  const maxTime = (maxBy(endTimes) || moment(\"22:00\", \"HH:mm\"))\n    .add(1, \"hours\")\n    .startOf(\"hour\")\n    .format(\"HH:mm\");\n  return {\n    maxTime,\n    minTime,\n  };\n};\n\nexport const filterEventsByTerm = (groupedEvents: GroupedEvents, term: Term) => {\n  const tempGroupedEvents: GroupedEvents = {};\n  forOwn(groupedEvents, (_, key) => {\n    tempGroupedEvents[key] = filter(groupedEvents[key], (e) => {\n      return e.extendedProps?.section.term === term;\n    });\n  });\n  return tempGroupedEvents;\n};\n\nexport const filterHeadersWithNoEvents = (filteredEvents: GroupedEvents, headers: string[]) => {\n  return filter(headers, (header) => {\n    const groupEvents = filteredEvents[header];\n    return groupEvents?.length > 0;\n  });\n};\n","import { Button, ButtonProps, IconButton, Popover } from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport { AddSectionPopover } from \"components\";\nimport { bindPopover, bindTrigger, usePopupState } from \"material-ui-popup-state/hooks\";\nimport React from \"react\";\nimport \"./AddSectionButton.scss\";\n\ninterface AddSectionButton extends ButtonProps {\n  isIcon?: boolean;\n}\n\nexport const AddSectionButton = (props: AddSectionButton) => {\n  const popupState = usePopupState({\n    popupId: \"addSection\",\n    variant: \"popover\",\n  });\n  const { isIcon, ...buttonProps } = props;\n\n  return (\n    <>\n      {isIcon ? (\n        <IconButton {...bindTrigger(popupState)}>\n          <Add />\n        </IconButton>\n      ) : (\n        <Button color=\"secondary\" variant=\"contained\" {...buttonProps} {...bindTrigger(popupState)}>\n          Add Section\n        </Button>\n      )}\n      <Popover\n        {...bindPopover(popupState)}\n        anchorOrigin={{\n          horizontal: \"left\",\n          vertical: \"bottom\",\n        }}\n        PaperProps={{ style: { minWidth: \"500px\" } }}\n        transformOrigin={{\n          horizontal: \"right\",\n          vertical: \"top\",\n        }}\n      >\n        <AddSectionPopover />\n      </Popover>\n    </>\n  );\n};\n\nAddSectionButton.defaultProps = {\n  isIcon: true,\n};\n","import { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Box, Button, Grid, InputAdornment, Typography } from \"@material-ui/core\";\nimport { GridItemCheckboxGroup, GridItemRadioGroup, GridItemTextField } from \"components\";\nimport moment from \"moment\";\nimport React, { ChangeEvent, useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  convertFromSemesterLength,\n  schema,\n  SectionInput,\n  updateScheduleWithNewSection,\n} from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\nimport {\n  CourseSectionMeeting,\n  Day,\n  Half,\n  Intensive,\n  SemesterLength,\n  SemesterLengthOption,\n  Term,\n  Weekday,\n} from \"utilities/interfaces\";\nimport \"./AddSectionPopover.scss\";\n\ninterface AddSectionPopover {\n  values?: CourseSectionMeeting;\n}\nconst SPACING = 2;\n\n/* A form to input information to add a schedule */\nexport const AddSectionPopover = ({ values }: AddSectionPopover) => {\n  const {\n    appState: { schedule },\n    appDispatch,\n    setIsCSVLoading,\n  } = useContext(AppContext);\n  const { register, handleSubmit, control } = useForm<SectionInput>({\n    resolver: yupResolver(schema),\n  });\n  const [semesterLength, setSemesterLength] = useState<SemesterLengthOption>(\n    convertFromSemesterLength(values?.section.semesterLength).toLowerCase() as SemesterLengthOption,\n  );\n\n  // handlers\n  const onSubmit = (data: SectionInput) => {\n    setIsCSVLoading(true);\n    updateScheduleWithNewSection(data, schedule);\n    appDispatch({ payload: { schedule }, type: \"setScheduleData\" });\n    setIsCSVLoading(false);\n  };\n  const onSemesterLengthChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSemesterLength(e.target.value as SemesterLengthOption);\n  };\n\n  const isHalfSemester = semesterLength === SemesterLengthOption.HalfSemester;\n  const isIntensiveSemester = semesterLength === SemesterLengthOption.IntensiveSemester;\n  const isCustomSemester = semesterLength === SemesterLengthOption.CustomSemester;\n\n  const locationValue =\n    (values && `${values?.meeting.location.building} ${values?.meeting.location.roomNumber}`) || \"\";\n\n  // TODO: Make fields for department, termStart, used, day10Used, startDate, endDate, status, and/or instructionalMethod?\n  return (\n    <form className=\"popover-container\">\n      <Box mb={SPACING}>\n        <Typography className=\"popover-title\" variant=\"h4\">\n          Add Section\n        </Typography>\n      </Box>\n      <Grid container spacing={SPACING}>\n        {/* TODO: Dropdown for courses already in system */}\n        <GridItemTextField\n          label=\"Prefix\"\n          register={register}\n          textFieldProps={{ autoFocus: true }}\n          value={values?.course.prefixes.join()}\n        />\n        <GridItemTextField label=\"Number\" register={register} value={values?.course.number} />\n        <GridItemTextField label=\"Section\" register={register} value={values?.section.letter} />\n        <GridItemTextField label=\"Name\" register={register} value={values?.course.name} />\n        <Grid item xs>\n          <span>{/* TODO: add error messages? */}</span>\n        </Grid>\n      </Grid>\n      <Grid container spacing={SPACING}>\n        {/* TODO: Dropdown for instructors with option to add new one */}\n        <GridItemTextField\n          label=\"Instructor\"\n          register={register}\n          value={values?.section.instructors.join()}\n        />\n        {/* TODO: Dropdown for rooms with option to add new one */}\n        <GridItemTextField label=\"Location\" register={register} value={locationValue} />\n        <GridItemTextField\n          label=\"Room Capacity\"\n          register={register}\n          textFieldProps={{ name: \"roomCapacity\" }}\n          value={(values?.meeting.location.roomCapacity || \"\").toString()}\n        />\n        <GridItemTextField\n          label=\"Faculty Hours\"\n          register={register}\n          textFieldProps={{ name: \"facultyHours\" }}\n          value={(values?.section.facultyHours || values?.course.facultyHours || \"\").toString()}\n        />\n        <GridItemTextField\n          label=\"Student Hours\"\n          register={register}\n          textFieldProps={{ name: \"studentHours\" }}\n          value={(values?.section.studentHours || values?.course.studentHours || \"\").toString()}\n        />\n      </Grid>\n      <Grid container spacing={SPACING}>\n        <GridItemTextField\n          label=\"Anticipated Size\"\n          register={register}\n          textFieldProps={{ name: \"anticipatedSize\" }}\n          value={(values?.section.anticipatedSize || \"\").toString()}\n        />\n        <GridItemTextField\n          label=\"Local Max\"\n          register={register}\n          textFieldProps={{ name: \"localMax\" }}\n          value={(values?.section.localMax || \"\").toString()}\n        />\n        <GridItemTextField\n          label=\"Global Max\"\n          register={register}\n          textFieldProps={{ name: \"globalMax\" }}\n          value={(values?.section.globalMax || \"\").toString()}\n        />\n        <GridItemTextField\n          label=\"Start Time\"\n          register={register}\n          textFieldProps={{ fullWidth: true, name: \"startTime\", type: \"time\" }}\n          value={\n            values?.meeting.startTime\n              ? moment(values?.meeting.startTime, \"h:mma\").format(\"HH:mm\")\n              : \"08:00\"\n          }\n        />\n        <GridItemTextField\n          label=\"Duration\"\n          register={register}\n          textFieldProps={{\n            InputProps: {\n              endAdornment: <InputAdornment position=\"end\">min</InputAdornment>,\n            },\n          }}\n          value={(values?.meeting.duration || \"\").toString()}\n        />\n      </Grid>\n      <Grid container spacing={SPACING}>\n        <GridItemCheckboxGroup\n          label=\"Days\"\n          options={Object.values(Day).filter((day) => {\n            return Object.values(Weekday).includes(day);\n          })}\n          register={register}\n          value={values?.meeting.days}\n        />\n        <GridItemRadioGroup\n          control={control}\n          defaultValue={values?.section.term || Term.Fall}\n          label=\"Term\"\n          options={Object.values(Term)}\n          register={register}\n        />\n        <GridItemRadioGroup\n          control={control}\n          defaultValue={convertFromSemesterLength(values?.section.semesterLength)}\n          label=\"Semester Length\"\n          onChange={onSemesterLengthChange}\n          options={Object.values(SemesterLengthOption)}\n          register={register}\n        />\n        <Grid item xs>\n          {isHalfSemester && (\n            <GridItemRadioGroup\n              control={control}\n              defaultValue={values?.section.semesterLength || SemesterLength.HalfFirst}\n              label=\"Half Semester\"\n              lowercase\n              name=\"half\"\n              options={Object.values(SemesterLength).filter((h) => {\n                return Object.values(Half).includes(h);\n              })}\n              register={register}\n            />\n          )}\n          {isIntensiveSemester && (\n            <GridItemRadioGroup\n              control={control}\n              defaultValue={values?.section.semesterLength || SemesterLength.IntensiveA}\n              label=\"Intensive Semester\"\n              name=\"intensive\"\n              options={Object.values(SemesterLength).filter((i) => {\n                return Object.values(Intensive).includes(i);\n              })}\n              register={register}\n            />\n          )}\n          {isCustomSemester && (\n            <Grid container direction=\"column\" spacing={SPACING}>\n              {/* TODO: add support for custom */}\n              <GridItemTextField\n                label=\"Start Date\"\n                register={register}\n                textFieldProps={{\n                  defaultValue: \"2020-20-20\",\n                  disabled: true,\n                  fullWidth: true,\n                  // type: \"date\",\n                }}\n              />\n              <GridItemTextField\n                label=\"End Date\"\n                register={register}\n                textFieldProps={{\n                  defaultValue: \"2020-20-20\",\n                  disabled: true,\n                  // type: \"date\",\n                }}\n              />\n              <Typography variant=\"caption\">\n                Custom semester lengths are not support yet.\n              </Typography>\n            </Grid>\n          )}\n        </Grid>\n        <GridItemTextField\n          label=\"Notes\"\n          register={register}\n          textFieldProps={{ multiline: true, name: \"comments\", rows: 4 }}\n          value={values?.section.comments}\n        />\n      </Grid>\n      <Grid alignItems=\"flex-end\" container justify=\"space-between\">\n        <Grid item>\n          <Typography variant=\"caption\">\n            Tip: use <b>tab</b> and <b>shift + tab</b> to navigate, <b>space bar</b> to select days,{\" \"}\n            <b>arrow keys</b> to select term and others, and <b>return</b> to submit.\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button color=\"primary\" onClick={handleSubmit(onSubmit)} variant=\"contained\">\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n\nAddSectionPopover.defaultProps = {\n  values: undefined,\n};\n","import { Grid } from \"@material-ui/core\";\nimport React, { PropsWithChildren, useCallback, useState } from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport ReactVisibilitySensor from \"react-visibility-sensor\";\nimport \"./AnimateShowAndHide.scss\";\n\ninterface AnimateShowAndHide {\n  /* complete the animation once */\n  once?: boolean;\n}\n\n/* A component that animates children vertically when it goes into scroll view.\n  References:\n  - https://codesandbox.io/embed/zn2q57vn13\n  - https://stackoverflow.com/questions/56928771/reactjs-react-countup-visible-only-once-in-visibility-sensor\n*/\nexport const AnimateShowAndHide = ({ children, once }: PropsWithChildren<AnimateShowAndHide>) => {\n  const [isActive, setIsActive] = useState(true);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const springProps = useSpring({\n    config: { friction: 200, mass: 5, tension: 2000 },\n    from: { height: 0, opacity: 0, x: 20 },\n    height: isVisible ? 110 : 0,\n    opacity: isVisible ? 1 : 0,\n    x: isVisible ? 0 : 20,\n  });\n\n  const onVisibilityChange = useCallback(\n    (isElemVisible: boolean) => {\n      /* Animate once */\n      if (once && isElemVisible) {\n        setIsVisible(true);\n        setIsActive(false);\n        /* Animate on every view */\n      } else {\n        setIsVisible(isElemVisible);\n      }\n    },\n    [once],\n  );\n\n  const { height } = springProps;\n\n  return (\n    <ReactVisibilitySensor active={isActive} onChange={onVisibilityChange}>\n      <Grid className=\"show-and-hide-main\" container justify=\"flex-start\">\n        <animated.div className=\"show-and-hide-text\" style={springProps}>\n          <animated.div style={{ height }}>{children}</animated.div>\n        </animated.div>\n      </Grid>\n    </ReactVisibilitySensor>\n  );\n};\n\nAnimateShowAndHide.defaultProps = {\n  once: true,\n};\n","import { NewTabLink } from \"components\";\nimport Image from \"material-ui-image\";\nimport React from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport { TeamMember } from \"utilities\";\nimport { calc, trans } from \".\";\nimport \"./Spring3DHover.scss\";\n\ninterface Spring3DCard {\n  member: TeamMember;\n}\n\n/* Transforms and Reanimates an image when a mouse is hovered.\n  Ref: https://codesandbox.io/embed/rj998k4vmm\n*/\nexport const Spring3DHover = ({ member }: Spring3DCard) => {\n  const [springProps, set] = useSpring(() => {\n    return { config: { friction: 40, mass: 5, tension: 350 }, xys: [0, 0, 1] };\n  });\n\n  const { xys } = springProps;\n  const { photo, website, name } = member;\n\n  return (\n    <div className=\"spring-3d-wrapper\">\n      <NewTabLink href={website}>\n        <animated.div\n          className=\"spring-3d-content\"\n          onMouseLeave={() => {\n            return set({ xys: [0, 0, 1] });\n          }}\n          onMouseMove={({ clientX: x, clientY: y }) => {\n            return set({ xys: calc(x, y) });\n          }}\n          style={{ transform: xys.interpolate(trans as never) }}\n        >\n          <Image\n            alt={`image of ${name}`}\n            className=\"spring-3d-image\"\n            src={photo}\n            style={{ borderRadius: \"100%\" }}\n          />\n        </animated.div>\n      </NewTabLink>\n    </div>\n  );\n};\n","/* Referenced: https://codesandbox.io/embed/rj998k4vmm */\n\n/* Calculates the y, x, and scale for the transformation. */\nexport const calc = (x: number, y: number) => {\n  // TODO: This makes only things in the center perfectly transform.\n  // I can't figure out the math to fix this yet\n  // Need to offset for where the div is placed on the screen.\n  return [-(y - window.innerHeight / 2) / 50, (x - window.innerWidth / 2) / 50, 1.1];\n};\n\n/* Transforms the image */\nexport const trans = (x: number, y: number, s: number): string => {\n  return `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n};\n","import React, { FC, PropsWithChildren } from \"react\";\nimport { Literal, Static, Union } from \"runtypes\";\nimport { createFC, getElements } from \"utilities\";\n\ninterface AsyncComponent {\n  isLoading: boolean;\n}\n\n// Define the runtype\nconst SubComponents = Union(Literal(\"Loading\"), Literal(\"Loaded\"));\n\n// Some boiler plate to get useable types.\ntype SubComponents = Static<typeof SubComponents>;\ntype AsyncSubComponents = { [key in SubComponents]: FC<{}> };\n\n/*\n  Show a loading state while waiting on a async function to finish.\n\n  Usage:\n  <AsyncComponent isLoading={boolean}>\n    <AsyncComponent.Loading>\n      content to display while loading\n    </AsyncComponent.Loading>\n    <AsyncComponent.Loaded>\n      content to display when loading is complete\n    </AsyncComponent.Loaded>\n  </AsyncComponent>\n\n  References:\n    - https://stackoverflow.com/a/56953600/9931154\n    - https://dev.to/shayanypn/buckle-with-react-sub-component-10ll\n*/\nexport const AsyncComponent: FC<AsyncComponent> & AsyncSubComponents = ({\n  children,\n  isLoading,\n}: PropsWithChildren<AsyncComponent>) => {\n  const { Loading, Loaded } = getElements(children, SubComponents);\n\n  return <>{isLoading ? <>{Loading}</> : <>{Loaded}</>}</>;\n};\n\n// Define sub-components.\nAsyncComponent.Loading = createFC(\"Loading\");\nAsyncComponent.Loaded = createFC(\"Loaded\");\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport FullCalendar from \"01/../@fullcalendar/react\";\nimport { CalendarOptions } from \"@fullcalendar/common\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport React from \"react\";\nimport { INITIAL_DATE } from \"utilities/constants\";\nimport \"./Calendar.scss\";\n\nexport const Calendar = (props: CalendarOptions) => {\n  return (\n    <>\n      <FullCalendar {...props} />\n    </>\n  );\n};\n\nCalendar.defaultProps = {\n  allDaySlot: false,\n  dayHeaderFormat: { weekday: \"short\" },\n  droppable: false,\n  editable: false, // TODO: Change to true if we can lock section meeting times\n  headerToolbar: false,\n  height: \"auto\",\n  initialDate: INITIAL_DATE,\n  initialView: \"timeGridWeek\",\n  nowIndicator: false,\n  plugins: [interactionPlugin, timeGridPlugin],\n  selectable: true,\n  slotMaxTime: \"22:00:00\",\n  slotMinTime: \"6:00:00\",\n  weekends: false,\n};\n","import { Checkbox, FormControlLabel, FormLabel, Grid } from \"@material-ui/core\";\nimport { camelCase } from \"lodash\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"./GridItemCheckboxGroup.scss\";\n\ninterface GridItemCheckboxGroup {\n  label: string;\n  name?: string;\n  options: string[];\n  register: ReturnType<typeof useForm>[\"register\"];\n  value?: string[];\n}\n\nexport const GridItemCheckboxGroup = ({\n  label,\n  name,\n  options,\n  register,\n  value,\n}: GridItemCheckboxGroup) => {\n  return (\n    <Grid item xs>\n      <FormLabel component=\"legend\">{label}</FormLabel>\n      <Grid container direction=\"column\">\n        {options.map((o, i) => {\n          return (\n            <Grid key={o.toLowerCase()} item>\n              <FormControlLabel\n                key={o.toLowerCase()}\n                control={<Checkbox defaultChecked={value?.includes(o)} />}\n                inputRef={register}\n                label={o}\n                name={`${name || camelCase(label)}[${i}]`}\n                value={o}\n              />\n            </Grid>\n          );\n        })}\n      </Grid>\n    </Grid>\n  );\n};\n\nGridItemCheckboxGroup.defaultProps = {\n  name: undefined,\n  value: [],\n};\n","import { FormControlLabel, FormLabel, Grid, Radio, RadioGroup } from \"@material-ui/core\";\nimport { camelCase } from \"lodash\";\nimport React, { ChangeEvent } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport \"./GridItemRadioGroup.scss\";\n\ninterface GridItemRadioGroup {\n  control: ReturnType<typeof useForm>[\"control\"];\n  defaultValue: string;\n  label: string;\n  lowercase?: boolean;\n  name?: string;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  options: string[];\n  register: ReturnType<typeof useForm>[\"register\"];\n}\n\nexport const GridItemRadioGroup = ({\n  control,\n  defaultValue,\n  label,\n  lowercase,\n  name,\n  onChange,\n  options,\n  register,\n}: GridItemRadioGroup) => {\n  return (\n    <Grid item xs>\n      <FormLabel component=\"legend\">{label}</FormLabel>\n      <Controller\n        ref={register}\n        as={RadioGroup}\n        control={control}\n        defaultValue={defaultValue}\n        name={name || camelCase(label)}\n      >\n        {options.map((o) => {\n          return (\n            <FormControlLabel key={o} control={<Radio onChange={onChange} />} label={o} value={o} />\n          );\n        })}\n      </Controller>\n    </Grid>\n  );\n};\n\nGridItemRadioGroup.defaultProps = {\n  lowercase: false,\n  name: undefined,\n  onChange: undefined,\n};\n","import { Grid, StandardTextFieldProps, TextField } from \"@material-ui/core\";\nimport { camelCase } from \"lodash\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"./GridItemTextField.scss\";\n\ninterface GridItemTextField {\n  label: string;\n  register: ReturnType<typeof useForm>[\"register\"];\n  textFieldProps?: StandardTextFieldProps;\n  value?: string;\n}\n\nexport const GridItemTextField = ({\n  label,\n  register,\n  textFieldProps,\n  value,\n}: GridItemTextField) => {\n  return (\n    <Grid item xs>\n      <TextField\n        defaultValue={value}\n        inputRef={register}\n        label={label}\n        name={camelCase(label)}\n        {...textFieldProps}\n        variant=\"outlined\"\n      />\n    </Grid>\n  );\n};\n\nGridItemTextField.defaultProps = {\n  textFieldProps: undefined,\n  value: \"\",\n};\n","import React, { PropsWithChildren } from \"react\";\nimport { useImportFile } from \"utilities\";\n\n/* Wraps whatever children in a label that will capture the click\non the children and open the file explorer to upload a file.\n*/\nexport const ImportInputWrapper = ({ children }: PropsWithChildren<{}>) => {\n  const onInputChange = useImportFile();\n\n  return (\n    <label htmlFor=\"import-button\">\n      <input\n        accept=\".csv\"\n        className=\"hidden\"\n        id=\"import-button\"\n        onChange={onInputChange}\n        type=\"file\"\n      />\n      {children}\n    </label>\n  );\n};\n","import { Link } from \"@material-ui/core\";\nimport React, { PropsWithChildren } from \"react\";\n\ntype NewTabLink = Pick<HTMLAnchorElement, \"href\">;\n\n/* Opens a link in a new tab. Useful for referencing pages outside of the app */\nexport const NewTabLink = ({ children, href }: PropsWithChildren<NewTabLink>) => {\n  return (\n    <Link href={href} rel=\"noopener noreferrer\" target=\"_blank\">\n      {children}\n    </Link>\n  );\n};\n","import { CalendarOptions, EventClickArg } from \"@fullcalendar/react\";\nimport { Popover } from \"@material-ui/core\";\nimport { AddSectionPopover, AsyncComponent, Calendar, ScheduleToolbar } from \"components\";\nimport { bindPopover, usePopupState } from \"material-ui-popup-state/hooks\";\nimport React, { useCallback, useContext, useMemo, useState } from \"react\";\nimport Stick from \"react-stick\";\nimport StickyNode from \"react-stickynode\";\nimport { CourseSectionMeeting } from \"utilities\";\nimport { AppContext, ScheduleContext } from \"utilities/contexts\";\nimport {\n  filterEventsByTerm,\n  filterHeadersWithNoEvents,\n  getHoursArr,\n  GroupedEvents,\n} from \"utilities/services\";\nimport \"./Schedule.scss\";\n\ninterface ScheduleBase extends CalendarOptions {\n  calendarHeaders: string[];\n  groupedEvents: GroupedEvents;\n}\n\n/* Provides a Schedule component to handle loading and async events and interfaces\n  with a BaseSchedule.\n*/\nexport const Schedule = (props: ScheduleBase) => {\n  const [isScheduleLoading, setIsScheduleLoading] = useState(false);\n\n  return (\n    <ScheduleContext.Provider value={{ isScheduleLoading, setIsScheduleLoading }}>\n      <AsyncComponent isLoading={isScheduleLoading}>\n        <AsyncComponent.Loading>Updating Schedule...</AsyncComponent.Loading>\n        <AsyncComponent.Loaded>\n          <ScheduleBase {...props} />\n        </AsyncComponent.Loaded>\n      </AsyncComponent>\n    </ScheduleContext.Provider>\n  );\n};\n\n/* Creates a list of Calendars to create a Schedule\n  <Stick> is used to stick the Schedule Header to the Schedule\n  to track horizontal scrolling.\n*/\nconst ScheduleBase = ({ calendarHeaders, groupedEvents, ...calendarOptions }: ScheduleBase) => {\n  const {\n    appState: { selectedTerm, slotMaxTime, slotMinTime },\n  } = useContext(AppContext);\n  const [popupData, setPopupData] = useState<CourseSectionMeeting>();\n\n  const popupState = usePopupState({\n    popupId: \"addSection\",\n    variant: \"popover\",\n  });\n\n  const handleEventClick = useCallback(\n    (arg: EventClickArg) => {\n      setPopupData(arg.event.extendedProps as CourseSectionMeeting);\n      popupState.open(arg.el);\n    },\n    [popupState],\n  );\n\n  const times = {\n    slotMaxTime,\n    slotMinTime,\n  };\n\n  // Add context times to the existing calendarOptions\n  calendarOptions = {\n    ...calendarOptions,\n    ...times,\n  };\n\n  // Filter out events from other terms\n  const filteredEvents = useMemo(() => {\n    return filterEventsByTerm(groupedEvents, selectedTerm);\n  }, [groupedEvents, selectedTerm]);\n\n  // Filter out headers with no events\n  const calenderHeadersNoEmptyInTerm = useMemo(() => {\n    return filterHeadersWithNoEvents(filteredEvents, calendarHeaders);\n  }, [filteredEvents, calendarHeaders]);\n\n  return (\n    <>\n      <ScheduleToolbar />\n      <div className=\"schedule-time-axis-wrapper\">\n        <LeftTimeAxis {...times} />\n        <div className=\"schedule-wrapper\">\n          <Stick\n            node={<ScheduleHeader headers={calenderHeadersNoEmptyInTerm} />}\n            position=\"top left\"\n          >\n            <div className=\"adjacent\">\n              {calenderHeadersNoEmptyInTerm.map((header) => {\n                return (\n                  <div key={header} className=\"calendar-width hide-axis\">\n                    <Calendar\n                      {...calendarOptions}\n                      key={header}\n                      eventClick={handleEventClick}\n                      events={filteredEvents[header]}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          </Stick>\n        </div>\n      </div>\n      <Popover\n        {...bindPopover(popupState)}\n        anchorOrigin={{\n          horizontal: \"left\",\n          vertical: \"bottom\",\n        }}\n        PaperProps={{ style: { maxWidth: \"50%\", minWidth: \"500px\" } }}\n        transformOrigin={{\n          horizontal: \"right\",\n          vertical: \"top\",\n        }}\n      >\n        <AddSectionPopover values={popupData} />\n      </Popover>\n    </>\n  );\n};\n\ninterface LeftTimeAxis {\n  slotMaxTime: string;\n  slotMinTime: string;\n}\n\n/* Display the hours on the left axis of the schedule\n */\nconst LeftTimeAxis = ({ slotMinTime: min, slotMaxTime: max }: LeftTimeAxis) => {\n  return (\n    <div className=\"left-time-axis\">\n      {getHoursArr(min, max).map((time) => {\n        return (\n          <div key={time} className=\"time-slot\">\n            <span>{`${time}:00`}</span>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\ninterface ScheduleHeader {\n  headers: ScheduleBase[\"calendarHeaders\"];\n}\n\nconst tenVH = window.innerHeight / 10;\n\n/*\n  StickyHeader is used to keep the Schedule header sticky to the\n  top of the view port.\n*/\nconst ScheduleHeader = ({ headers }: ScheduleHeader) => {\n  return (\n    <StickyNode top={tenVH}>\n      <div className=\"adjacent schedule-header-row\">\n        {headers.map((header) => {\n          return (\n            <div key={header} className=\"calendar-width calendar-title\">\n              {header}\n            </div>\n          );\n        })}\n      </div>\n    </StickyNode>\n  );\n};\n","import { Box, Grid, Typography } from \"@material-ui/core\";\nimport { NewTabLink } from \"components/reuseables\";\nimport React from \"react\";\nimport { team, TeamMember } from \"utilities\";\nimport { TeamMemberProfile, TextSection } from \".\";\nimport \"./AboutPage.scss\";\n\n/* A page with information about the project\n  with references */\nexport const AboutPage = () => {\n  return (\n    <Grid container justify=\"center\">\n      <Typography align=\"left\">\n        <Box maxWidth={900} mb={3} p={4}>\n          <AboutVision />\n          <AboutTeam />\n          <AboutCode />\n          <AboutReport />\n          <AboutResources />\n        </Box>\n      </Typography>\n    </Grid>\n  );\n};\n\nconst AboutVision = () => {\n  return (\n    <TextSection\n      body={\n        <>\n          Every year, all department chairs at Calvin must develop a schedule for their department’s\n          classes based on a spreadsheet provided to them by the Registrar. The schedule must\n          contain the times, professors, and rooms for every class section in the department and the\n          schedule must satisfy the following constraints:\n          <ul>\n            <li>Only one section can be in a room at a time</li>\n            <li>A professor can only teach one section at a time</li>\n            <li>\n              Two sections taken together cannot be offered at the same time (e.g. CS 212 is often\n              taken together with MATH 251 and ENGR 220)\n            </li>\n            <li>Professors can only teach courses when they are available</li>\n            <li>Professors can only teach courses they are qualified to teach</li>\n            <li>Professors must/cannot teach consecutive classes depending on their preferences</li>\n            <li>A room’s capacity cannot be exceeded by the expected enrollment in the class</li>\n            <li>Faculty teaching loads cannot be “too high” or “too low”</li>\n          </ul>\n          These constraints make it extremely difficult for the department chair to create a\n          schedule without a tool to help them. We propose building a web application, named the\n          Course Schedulizer, that will allow department chairs to visualize and manipulate their\n          department course schedules. It will provide:\n          <ul>\n            <li>The ability to upload and export department schedules via CSV</li>\n            <li>Integration with the spreadsheets provided and required by the Registrar</li>\n            <li>Two views to visualize the schedule data (by location and by instructor)</li>\n            <li>Options to color the data by level, instructor, location, or prefix</li>\n            <li>Functionality to create, read, update, and delete class sections</li>\n            <li>A load summary for each instructor in the department</li>\n            <li>Schedule conflict detection and resolution suggestions (for honors portion)</li>\n            <li>An optimized user interface with an efficient use of screen space</li>\n            <li>An extensible interface to integrate with future systems (e.g. Workday)</li>\n          </ul>\n          By offering these features and improvements on the functionality previously implemented by\n          Professor Pruim and Professor VanderLinden, the Course Schedulizer will allow department\n          chairs to easily create their schedules.\n          <br />\n          <br />\n          For an Honors Project, Charles is completing a second project relating to constraint\n          problem satisfaction alongside the Course Schedulizer. By employing constraint\n          satisfaction techniques, Charles hopes to allow department chairs the ability to upload a\n          list of classes, professors, rooms, and times to the Course Schedulizer web application\n          and have the system create a schedule with no conflicts.\n        </>\n      }\n      title=\"Vision\"\n    />\n  );\n};\n\nconst AboutTeam = () => {\n  return (\n    <TextSection\n      body={\n        <Grid container direction=\"column\" justify=\"flex-start\" spacing={2}>\n          {team.map((member: TeamMember) => {\n            return <TeamMemberProfile key={member.name} member={member} />;\n          })}\n        </Grid>\n      }\n      title=\"Team\"\n    />\n  );\n};\n\nconst AboutCode = () => {\n  return (\n    <TextSection\n      body={\n        <>\n          This website is our code built and deployed. Feel free to play around with the site. Our\n          code repository is{\" \"}\n          <NewTabLink href=\"https://github.com/senior-knights/course-schedulizer\">\n            hosted on GitHub\n          </NewTabLink>\n          . We have two persistent branches: <code>production</code> and <code>develop</code>.{\" \"}\n          <code>production</code> is the working, stable build of the web application and{\" \"}\n          <code>develop</code> is the less-stable, bleeding-edge build of our Course Schedulizer\n          app. Please feel free to look around the code and interact with us on the discussion board\n          or by posting issues. The honors constraint satisfaction package is also{\" \"}\n          <NewTabLink href=\"https://github.com/senior-knights/aima-typescript-csp\">\n            hosted on GitHub\n          </NewTabLink>\n          . For details on the development process, please view the respective ReadMes on GitHub.\n        </>\n      }\n      title=\"Code\"\n    />\n  );\n};\n\nconst AboutReport = () => {\n  return (\n    <TextSection\n      body={\n        <ul>\n          <li>\n            <NewTabLink href=\"https://docs.google.com/document/d/e/2PACX-1vQPQ1Qhu0jCVThVbNsUFxV8fB56fHgVf4Dnhfkf6EU_7627iMVuSHntW8VxF0j0Aw/pub\">\n              Updated Proposal\n            </NewTabLink>{\" \"}\n            - 12.15.2020\n          </li>\n          <li>\n            <NewTabLink href=\"https://docs.google.com/document/d/e/2PACX-1vQTy2A83LmPKrZhQ5_LCN6a3ow4UHxknIq4OjgimPU-Brfyl6fAhb9aQmxjNvg5tA/pub\">\n              Original Proposal\n            </NewTabLink>{\" \"}\n            - 10.15.2020\n          </li>\n        </ul>\n      }\n      title=\"Report\"\n    />\n  );\n};\n\nconst AboutResources = () => {\n  return (\n    <TextSection\n      body={\n        <ul>\n          <li>\n            <NewTabLink href=\"https://computing.calvin.edu/\">\n              Computing@Calvin Department Website\n            </NewTabLink>\n          </li>\n          <li>\n            <NewTabLink href=\"https://web.microsoftstream.com/video/cee6b774-a010-4220-a0d8-c6a6c5240d84?st=2456\">\n              Status Report 1\n            </NewTabLink>{\" \"}\n            - 12.01.2020\n          </li>\n          <li>\n            <NewTabLink href=\"https://docs.google.com/document/d/e/2PACX-1vS8sc8-Vs1qkfyGpelPXsuwvSQif3IFlnsZNoak3P7DbBmSYxWDgXL2ig-OJk8VJVHny2lCUZxCyCfJ/pub\">\n              Honors Status Report 1\n            </NewTabLink>{\" \"}\n            - 12.01.2020\n          </li>\n          <li>\n            <NewTabLink href=\"https://docs.google.com/presentation/d/e/2PACX-1vQrjMY5c-gnlvX5AAD1zIqRY0P5BLppQFT5y-3fxeR0TzuEvzUpDADYUGY_3J4TBe1PL3sq9rEqUdRA/pub?start=false&loop=false&delayms=3000\">\n              Presentation 1\n            </NewTabLink>{\" \"}\n            - 12.01.2020\n          </li>\n        </ul>\n      }\n      title=\"Resources\"\n    />\n  );\n};\n","import { Grid } from \"@material-ui/core\";\nimport { Spring3DHover } from \"components\";\nimport React from \"react\";\nimport { TeamMember } from \"utilities\";\n\ninterface TeamMemberProfile {\n  member: TeamMember;\n}\n\n/* Display information about the Team Member */\nexport const TeamMemberProfile = ({ member }: TeamMemberProfile) => {\n  const { name, bio } = member;\n\n  return (\n    <Grid alignItems=\"center\" container item>\n      <Grid alignItems=\"center\" container direction=\"column\" item xs={4}>\n        <Spring3DHover member={member} />\n        <h3>{name}</h3>\n      </Grid>\n      <Grid container item xs={8}>\n        {bio}\n      </Grid>\n    </Grid>\n  );\n};\n","import { Box } from \"@material-ui/core\";\nimport { AnimateShowAndHide } from \"components\";\nimport React, { ReactNode } from \"react\";\n\ninterface TextSection {\n  body?: ReactNode;\n  title?: ReactNode;\n}\n\n/* Display a header with content. Used on About Page */\nexport const TextSection = ({ title, body }: TextSection) => {\n  return (\n    <Box mb={9} mt={3}>\n      <AnimateShowAndHide>{title}</AnimateShowAndHide>\n      <>{body}</>\n    </Box>\n  );\n};\n\nTextSection.defaultProps = {\n  body: undefined,\n  title: undefined,\n};\n","import React from \"react\";\n\nexport const HelpPage = () => {\n  return <>Help</>;\n};\n","import { InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport React, { ChangeEvent, useState } from \"react\";\nimport \"./ColorSelector.scss\";\n\nenum ColorBy {\n  Level,\n  Room,\n  Instructor,\n  Prefix,\n}\n\nexport const ColorSelector = () => {\n  const [colorValue, setColorValue] = useState(ColorBy.Level);\n\n  const handleColorChange = (event: ChangeEvent<{ value: unknown }>) => {\n    setColorValue(event.target.value as ColorBy);\n  };\n\n  return (\n    <div>\n      <InputLabel id=\"label\">Color By</InputLabel>\n      <Select id=\"color-select\" onChange={handleColorChange} value={colorValue}>\n        <MenuItem value={ColorBy.Level}>Level</MenuItem>\n        <MenuItem value={ColorBy.Room}>Room</MenuItem>\n        <MenuItem value={ColorBy.Instructor}>Instructor</MenuItem>\n        <MenuItem value={ColorBy.Prefix}>Prefix</MenuItem>\n      </Select>\n    </div>\n  );\n};\n","import { Tabs } from \"components\";\nimport React from \"react\";\n\nexport const SchedulizerPage = () => {\n  return (\n    <>\n      <Tabs />\n    </>\n  );\n};\n","import { Footer, Header } from \"components\";\nimport { AboutPage, HelpPage, SchedulizerPage } from \"components/pages\";\nimport React, { useReducer, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { initialAppState, reducer } from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\nimport \"./App.scss\";\n\nexport const App = () => {\n  const [isCSVLoading, setIsCSVLoading] = useState(false);\n  const [appState, appDispatch] = useReducer(reducer, initialAppState);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <AppContext.Provider value={{ appDispatch, appState, isCSVLoading, setIsCSVLoading }}>\n          <div className=\"content-container\">\n            <Switch>\n              <Route path=\"/about\">\n                <AboutPage />\n              </Route>\n              <Route path=\"/help\">\n                <HelpPage />\n              </Route>\n              <Route path=\"/\">\n                <SchedulizerPage />\n              </Route>\n            </Switch>\n          </div>\n        </AppContext.Provider>\n        <Footer />\n      </Router>\n    </div>\n  );\n};\n","import { AppBar, Box, Grid } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport \"./Footer.scss\";\n\n/* Provides a footer that is always at the bottom of the page: no matter what.\n    Always provides the proper year. To get this working correctly, CSS-Tricks\n    was referenced for the flex-box version.\n  Ref: https://css-tricks.com/couple-takes-sticky-footer/#there-is-flexbox\n*/\nexport const Footer = () => {\n  return (\n    <AppBar className=\"app-footer\" elevation={0} position=\"static\">\n      <Grid container justify=\"flex-start\">\n        <Box p={2}>© {moment().year()} Senior Knights</Box>\n      </Grid>\n    </AppBar>\n  );\n};\n","import CalvinLogo from \"./CalvinUniv-vert-full-color-inverse.png\";\n\nexport const logo = CalvinLogo;\n","import { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport { logo } from \"assets\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport \"./Header.scss\";\n\n/* Header is the top bar that persists across the app */\nexport const Header = () => {\n  return (\n    <AppBar elevation={0} position=\"static\">\n      <Toolbar className=\"toolbar\">\n        <RouterLink className=\"toolbar-group title\" to=\"/\">\n          <img alt=\"Org Logo\" className=\"org-logo\" src={logo} />\n          <Typography variant=\"h6\">Course Schedulizer</Typography>\n        </RouterLink>\n        <Typography className=\"toolbar-group links\">\n          <Link component={RouterLink} to=\"/\">\n            Schedulizer\n          </Link>\n          <Link component={RouterLink} to=\"/about\">\n            About\n          </Link>\n          <Link component={RouterLink} to=\"/help\">\n            Help\n          </Link>\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","/* eslint-disable react/jsx-key */\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow as FacultyRow,\n} from \"@material-ui/core\";\nimport React, { useContext, useMemo } from \"react\";\nimport { Column, useTable } from \"react-table\";\nimport { Course, getSectionName, Schedule, Section, Term } from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\n\ntype hourKeys = \"fallHours\" | \"springHours\" | \"summerHours\" | \"totalHours\" | \"otherHours\";\ntype sectionKeys = \"fallCourseSections\" | \"springCourseSections\" | \"summerCourseSections\";\n\ntype FacultyRow = {\n  [key in hourKeys]?: number;\n} &\n  {\n    [key in sectionKeys]?: string;\n  } & {\n    faculty: string;\n    loadNotes?: string;\n    otherDuties?: string;\n  };\n\ninterface UpdateRowParams {\n  course: Course;\n  newRow: FacultyRow;\n  prevRow: FacultyRow;\n  section: Section;\n  sectionName: string;\n  termName?: \"fall\" | \"spring\" | \"summer\";\n}\n\nconst updateRow = ({\n  course,\n  newRow,\n  prevRow,\n  section,\n  sectionName,\n  termName,\n}: UpdateRowParams) => {\n  const termCourseSectionProp = `${termName}CourseSections` as sectionKeys;\n  const termHoursProp = `${termName}Hours` as hourKeys;\n  if (prevRow) {\n    prevRow[termCourseSectionProp] = prevRow[termCourseSectionProp]\n      ? (prevRow[termCourseSectionProp] = `${prevRow[termCourseSectionProp]}, ${sectionName}`)\n      : (prevRow[termCourseSectionProp] = sectionName);\n\n    prevRow[termHoursProp] = prevRow[termHoursProp]\n      ? (Number(prevRow[termHoursProp]) + (section.facultyHours || course.facultyHours)) /\n        section.instructors.length\n      : (section.facultyHours || course.facultyHours) / section.instructors.length;\n  } else {\n    newRow[termCourseSectionProp] = sectionName;\n    newRow[termHoursProp] =\n      (section.facultyHours || course.facultyHours) / section.instructors.length;\n  }\n};\n\nconst createTable = (schedule: Schedule): FacultyRow[] => {\n  const newTableData: FacultyRow[] = [];\n  schedule.courses.forEach((course) => {\n    course.sections.forEach((section) => {\n      const sectionName = getSectionName(course, section);\n      section.instructors.forEach((instructor) => {\n        const newFacultyRow: FacultyRow = {\n          faculty: instructor,\n        };\n        const [prevAddedFacultyRow] = newTableData.filter((data) => {\n          return data.faculty === instructor;\n        });\n        const updateArgs = {\n          course,\n          newRow: newFacultyRow,\n          prevRow: prevAddedFacultyRow,\n          section,\n          sectionName,\n        };\n        switch (section.term) {\n          case Term.Fall:\n            updateRow({ ...updateArgs, termName: \"fall\" });\n            break;\n          case Term.Spring:\n            updateRow({ ...updateArgs, termName: \"spring\" });\n            break;\n          case Term.Summer:\n          case Term.Interim:\n            updateRow({ ...updateArgs, termName: \"summer\" });\n            break;\n          default:\n            // eslint-disable-next-line no-console\n            console.log(`Fell through case statement with value ${section.term}`);\n            break;\n        }\n        if (prevAddedFacultyRow) {\n          newTableData[newTableData.indexOf(prevAddedFacultyRow)] = prevAddedFacultyRow;\n        } else {\n          newTableData.push(newFacultyRow);\n        }\n      });\n    });\n  });\n  return newTableData\n    .map((row) => {\n      return {\n        ...row,\n        totalHours: (row.fallHours || 0) + (row.springHours || 0) + (row.summerHours || 0),\n      };\n    })\n    .sort((a, b) => {\n      return b.totalHours - a.totalHours;\n    });\n};\n\nexport const FacultyLoads = () => {\n  const {\n    appState: { schedule },\n  } = useContext(AppContext);\n\n  const data = useMemo<FacultyRow[]>(() => {\n    return createTable(schedule);\n  }, [schedule]);\n\n  // TODO: Add Other Duties/Hours and Load Notes\n  const columns = useMemo<Column<FacultyRow>[]>(() => {\n    return [\n      { Header: \"Faculty\", accessor: \"faculty\" },\n      { Header: \"Fall Course Sections\", accessor: \"fallCourseSections\" },\n      { Header: \"Fall Hours\", accessor: \"fallHours\" },\n      { Header: \"Spring Course Sections\", accessor: \"springCourseSections\" },\n      { Header: \"Spring Hours\", accessor: \"springHours\" },\n      { Header: \"Summer Course Sections\", accessor: \"summerCourseSections\" },\n      { Header: \"Summer Hours\", accessor: \"summerHours\" },\n      { Header: \"Total Hours\", accessor: \"totalHours\" },\n    ];\n  }, []);\n  const tableInstance = useTable({ columns, data });\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = tableInstance;\n\n  // https://react-table.tanstack.com/docs/quick-start\n  return (\n    // apply the table props\n    <TableContainer component={Paper}>\n      <Table {...getTableProps()}>\n        <TableHead>\n          {\n            // Loop over the header rows\n            headerGroups.map((headerGroup) => {\n              return (\n                // Apply the header row props\n                <FacultyRow {...headerGroup.getHeaderGroupProps()}>\n                  {\n                    // Loop over the headers in each row\n                    headerGroup.headers.map((column) => {\n                      return (\n                        // Apply the header cell props\n                        <TableCell {...column.getHeaderProps()}>\n                          {\n                            // Render the header\n                            column.render(\"Header\")\n                          }\n                        </TableCell>\n                      );\n                    })\n                  }\n                </FacultyRow>\n              );\n            })\n          }\n        </TableHead>\n        {/* Apply the table body props */}\n        <TableBody {...getTableBodyProps()}>\n          {\n            // Loop over the table rows\n            rows.map((row) => {\n              // Prepare the row for display\n              prepareRow(row);\n              return (\n                // Apply the row props\n                <FacultyRow {...row.getRowProps()}>\n                  {\n                    // Loop over the rows cells\n                    row.cells.map((cell) => {\n                      // Apply the cell props\n                      return (\n                        <TableCell {...cell.getCellProps()}>\n                          {\n                            // Render the cell contents\n                            cell.render(\"Cell\")\n                          }\n                        </TableCell>\n                      );\n                    })\n                  }\n                </FacultyRow>\n              );\n            })\n          }\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { Schedule } from \"components\";\nimport React, { useContext } from \"react\";\nimport { getEvents } from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\nimport \"./FacultySchedule.scss\";\n\n/* Creates a list of Calendars to create the Faculty Schedule\n */\nexport const FacultySchedule = () => {\n  const {\n    appState: { professors, schedule },\n  } = useContext(AppContext);\n\n  return (\n    <>\n      <Schedule calendarHeaders={professors} groupedEvents={getEvents(schedule, \"faculty\")} />\n    </>\n  );\n};\n","import { Schedule } from \"components\";\nimport React, { useContext } from \"react\";\nimport { getEvents } from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\n\nexport const RoomsSchedule = () => {\n  const {\n    appState: { schedule, rooms },\n  } = useContext(AppContext);\n\n  return (\n    <>\n      <Schedule calendarHeaders={rooms} groupedEvents={getEvents(schedule, \"room\")} />\n    </>\n  );\n};\n","import { IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\nimport { ImportInputWrapper } from \"components\";\nimport { bindMenu, bindTrigger, usePopupState } from \"material-ui-popup-state/hooks\";\nimport React from \"react\";\nimport { useExportCSV } from \"utilities\";\nimport \"./CSVActions.scss\";\n\n/* Hamburger with options for the CSV */\nexport const CSVActions = () => {\n  const popupState = usePopupState({ popupId: \"menu\", variant: \"popover\" });\n  const onExportClick = useExportCSV();\n\n  return (\n    <>\n      <IconButton color=\"inherit\" edge=\"start\" {...bindTrigger(popupState)}>\n        <MenuIcon />\n      </IconButton>\n      <Menu // Anchoring from: https://codesandbox.io/s/3rmgv?file=/demo.js:603-812\n        anchorOrigin={{\n          horizontal: \"right\",\n          vertical: \"top\",\n        }}\n        getContentAnchorEl={null}\n        transformOrigin={{\n          horizontal: \"left\",\n          vertical: \"top\",\n        }}\n        {...bindMenu(popupState)}\n      >\n        <MenuItem button className=\"MuiButton-textPrimary\">\n          <ImportInputWrapper>IMPORT CSV</ImportInputWrapper>\n        </MenuItem>\n        <MenuItem button className=\"MuiButton-textSecondary\" onClick={onExportClick}>\n          EXPORT CSV\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n","import { Button, ButtonProps } from \"@material-ui/core\";\nimport { ImportInputWrapper } from \"components\";\nimport React from \"react\";\nimport \"./ImportButton.scss\";\n\n/* An import button that is stylable using the Mat UI props. */\nexport const ImportButton = (btnProps: ButtonProps) => {\n  return (\n    <ImportInputWrapper>\n      <Button color=\"primary\" component=\"span\" {...btnProps}>\n        Import CSV\n      </Button>\n    </ImportInputWrapper>\n  );\n};\n","import { Box } from \"@material-ui/core\";\nimport { AddSectionButton, ImportButton } from \"components\";\nimport React from \"react\";\nimport \"./NoCoursesHeader.scss\";\n\n/* Display information when schedule has no courses. */\nexport const NoCoursesHeader = () => {\n  return (\n    <>\n      <h2>No schedule data.</h2>\n      <p>\n        Please import a CSV of an existing schedule or start building the schedule from scratch by\n        adding your first section.\n      </p>\n      <Box component=\"span\" marginRight={1}>\n        <ImportButton variant=\"contained\" />\n      </Box>\n      <AddSectionButton isIcon={false} />\n    </>\n  );\n};\n","import { Box, Typography } from \"@material-ui/core\";\nimport React, { PropsWithChildren } from \"react\";\n\ninterface TabPanelProps {\n  index: number;\n  value: number;\n}\n\n/* TabPanel displays the content of a selected tab */\nexport const TabPanel = (props: PropsWithChildren<TabPanelProps>) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      aria-labelledby={`simple-tab-${index}`}\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      role=\"tabpanel\"\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography component=\"div\">{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n};\n","import { Container, Tab, Tabs as MUITabs } from \"@material-ui/core\";\nimport { AsyncComponent } from \"components\";\nimport { FacultyLoads, FacultySchedule, RoomsSchedule } from \"components/Tabs\";\nimport React, { ChangeEvent, useContext, useState } from \"react\";\nimport { AppContext } from \"utilities/contexts\";\nimport { CSVActions, NoCoursesHeader, TabPanel } from \"./tabComponents\";\nimport \"./Tabs.scss\";\n\nconst DEFAULT_TAB = 0;\n\n/* A navigator between the different features of the app */\nexport const Tabs = () => {\n  const [tabValue, setTabValue] = useState(DEFAULT_TAB);\n  const {\n    appState: { schedule },\n    isCSVLoading,\n  } = useContext(AppContext);\n\n  const handleTabChange = (event: ChangeEvent<{}>, newValue: number) => {\n    setTabValue(newValue);\n  };\n\n  const scheduleHasCourses = schedule.courses.length > 0;\n\n  return (\n    <AsyncComponent isLoading={isCSVLoading}>\n      <AsyncComponent.Loading>Parsing CSV...</AsyncComponent.Loading>\n      <AsyncComponent.Loaded>\n        {scheduleHasCourses ? (\n          <>\n            <Container className=\"schedulizer-header\" maxWidth={false}>\n              <CSVActions />\n\n              <MUITabs\n                centered\n                indicatorColor=\"primary\"\n                onChange={handleTabChange}\n                textColor=\"primary\"\n                value={tabValue}\n              >\n                <Tab label=\"Faculty Schedule\" />\n                <Tab label=\"Room Schedule\" />\n                <Tab label=\"Teaching Loads\" />\n                <Tab label=\"Conflicts\" />\n              </MUITabs>\n              <span>{/* Empty */}</span>\n            </Container>\n            <TabPanel index={0} value={tabValue}>\n              <FacultySchedule />\n            </TabPanel>\n            <TabPanel index={1} value={tabValue}>\n              <RoomsSchedule />\n            </TabPanel>\n            <TabPanel index={2} value={tabValue}>\n              <FacultyLoads />\n            </TabPanel>\n            <TabPanel index={3} value={tabValue}>\n              Item Four\n            </TabPanel>\n          </>\n        ) : (\n          <NoCoursesHeader />\n        )}\n      </AsyncComponent.Loaded>\n    </AsyncComponent>\n  );\n};\n","import { AddSectionButton, ColorSelector, Searchbar, SemesterSelector } from \"components\";\nimport React from \"react\";\nimport \"./ScheduleToolbar.scss\";\n\nexport const ScheduleToolbar = () => {\n  return (\n    <div className=\"schedule-toolbar\">\n      <div className=\"toolbar-left\">\n        <Searchbar />\n        <ColorSelector />\n      </div>\n      <div className=\"toolbar-right\">\n        <SemesterSelector />\n        <AddSectionButton />\n      </div>\n    </div>\n  );\n};\n","import { TextField } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport React from \"react\";\nimport \"./Searchbar.scss\";\n\nexport const Searchbar = () => {\n  return (\n    <Autocomplete\n      className=\"searchbar\"\n      getOptionLabel={(option) => {\n        return `${option.name}-${option.section}`;\n      }}\n      id=\"combo-box-demo\"\n      options={classes}\n      renderInput={(params) => {\n        return <TextField {...params} label=\"Search\" variant=\"outlined\" />;\n      }}\n    />\n  );\n};\n\nconst classes = [\n  { instructor: \"Victor T. Norman\", name: \"CS-108\", section: \"A\" },\n  { instructor: \"Victor T. Norman\", name: \"CS-108\", section: \"B\" },\n  { instructor: \"Joel Adams\", name: \"CS-112\", section: \"A\" },\n];\n","import { IconButton, Typography } from \"@material-ui/core\";\nimport { ChevronLeft, ChevronRight } from \"@material-ui/icons\";\nimport React, { useContext } from \"react\";\nimport { enumArray, Term } from \"utilities\";\nimport { AppContext, ScheduleContext } from \"utilities/contexts\";\nimport \"./SemesterSelector.scss\";\n\nexport const SemesterSelector = () => {\n  const terms: Term[] = enumArray(Term);\n  const {\n    appState: { selectedTerm },\n    appDispatch,\n  } = useContext(AppContext);\n  const { setIsScheduleLoading } = useContext(ScheduleContext);\n\n  const handleOnClick = (index: number) => {\n    return async () => {\n      setIsScheduleLoading(true);\n      const newTerm = terms[index];\n      // This action takes so long it affectively makes this\n      //  synchronous function asynchronous.\n      await appDispatch({\n        payload: { term: newTerm },\n        type: \"setSelectedTerm\",\n      });\n      setIsScheduleLoading(false);\n    };\n  };\n\n  return (\n    <div className=\"semester-selector\">\n      <IconButton\n        disabled={selectedTerm === terms[0]}\n        onClick={handleOnClick(terms.indexOf(selectedTerm) - 1)}\n      >\n        <ChevronLeft />\n      </IconButton>\n      <Typography variant=\"h6\">{selectedTerm}</Typography>\n      <IconButton\n        disabled={selectedTerm === terms[terms.length - 1]}\n        onClick={handleOnClick(terms.indexOf(selectedTerm) + 1)}\n      >\n        <ChevronRight />\n      </IconButton>\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { App } from \"components\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"serviceWorker\";\nimport \"styles/index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { Course, Meeting, Section, SemesterLength, Term } from \"./interfaces\";\n\nexport const INITIAL_DATE = \"2000-01-02\";\n\nexport const emptyCourse: Course = {\n  department: \"\",\n  facultyHours: 0,\n  name: \"\",\n  number: \"\",\n  prefixes: [],\n  sections: [],\n  studentHours: 0,\n};\n\nexport const emptyMeeting: Meeting = {\n  days: [],\n  duration: 0,\n  location: { building: \"\", roomCapacity: 0, roomNumber: \"\" },\n  startTime: \"\",\n};\n\nexport const emptySection: Section = {\n  anticipatedSize: 0,\n  comments: \"\",\n  day10Used: 0,\n  endDate: \"\",\n  globalMax: 0,\n  instructionalMethod: \"\",\n  instructors: [],\n  letter: \"\",\n  localMax: 0,\n  meetings: [],\n  semesterLength: SemesterLength.Full,\n  startDate: \"\",\n  status: \"\",\n  term: Term.Fall,\n  termStart: \"\",\n  used: 0,\n  year: new Date().getFullYear(),\n};\n","export * from \"./constants\";\n// export * from \"./contexts\";\nexport * from \"./helpers\";\nexport * from \"./hooks\";\nexport * from \"./interfaces\";\nexport * from \"./reducers\";\nexport * from \"./services\";\n","export * from \"./appInterfaces\";\nexport * from \"./dataInterfaces\";\n"],"sourceRoot":""}