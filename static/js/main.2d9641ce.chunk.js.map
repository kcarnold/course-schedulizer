{"version":3,"sources":["utilities/hooks/useLocal.ts","utilities/services/addNonTeachingLoadService.ts","utilities/contexts/appContext.ts","utilities/contexts/scheduleContext.ts","utilities/hooks/importRemoteFileHook.ts","utilities/hooks/useHarmonyFormsStore.ts","utilities/interfaces/dataInterfaces/dayInterfaces.ts","utilities/interfaces/dataInterfaces/scheduleInterfaces.ts","utilities/interfaces/dataInterfaces/termInterfaces.ts","utilities/interfaces/appInterfaces.ts","utilities/services/conflictsService.ts","utilities/services/scheduleService.ts","utilities/services/addSectionService.ts","utilities/services/facultyLoadsService.ts","utilities/services/facultyScheduleService.ts","utilities/services/harmoniouslyService.ts","utilities/services/roomsScheduleService.ts","utilities/services/validation/popover.ts","utilities/reducers/appReducer.ts","assets/CalvinUniv-vert-full-color-inverse.png","utilities/index.ts","utilities/constants.ts","components/reuseables/AddNonTeachingLoadPopover/AddNonTeachingLoadPopover.tsx","components/reuseables/PopoverButton/PopoverButton.tsx","components/reuseables/AddSectionButton/AddSectionButton.tsx","components/reuseables/AddSectionPopover/AddSectionPopover.tsx","components/reuseables/animated/AnimateShowAndHide/AnimateShowAndHide.tsx","components/reuseables/animated/Spring3DHover/Spring3DHover.tsx","components/reuseables/animated/Spring3DHover/spring3DHoverService.ts","components/reuseables/AsyncComponent/AsyncComponent.tsx","components/reuseables/Calendar/Calendar.tsx","components/reuseables/FieldArrayForm/DeleteFieldButton/DeleteFieldButton.tsx","components/reuseables/FieldArrayForm/FieldArrayField/FieldArrayField.tsx","components/reuseables/FieldArrayForm/FieldArrayFields/FieldArrayFields.tsx","components/reuseables/FieldArrayForm/FieldArrayFormActionButtons/FieldArrayFormActionButtons.tsx","components/reuseables/FieldArrayForm/FieldArrayForm.tsx","components/reuseables/GridItem/GridItemAutocomplete/GridItemAutocomplete.tsx","components/reuseables/GridItem/GridItemCheckboxGroup/GridItemCheckboxGroup.tsx","components/reuseables/GridItem/GridItemRadioGroup/GridItemRadioGroup.tsx","components/reuseables/GridItem/GridItemTextField/GridItemTextField.tsx","components/reuseables/ImportInputWrapper/ImportInputWrapper.tsx","components/reuseables/ModalPagination/ModalPagination.tsx","components/reuseables/NewTabLink/NewTabLink.tsx","components/reuseables/Schedule/Schedule.tsx","components/reuseables/Schedule/ScheduleHeader.tsx","components/reuseables/Schedule/ScheduleLeftTimeAxis.tsx","components/reuseables/Schedule/ScheduleBase.tsx","components/pages/AboutPage/AboutPage.tsx","components/pages/AboutPage/TeamMemberProfile/TeamMemberProfile.tsx","components/pages/AboutPage/TextSection/TextSection.tsx","components/pages/HarmonyPage/Harmony/Harmony.tsx","components/pages/HarmonyPage/Harmony/HarmonyCheckbox.tsx","components/pages/HarmonyPage/Harmony/HarmonyCheckboxList.tsx","components/pages/HarmonyPage/Harmony/HarmonyCourseCheckboxes.tsx","components/pages/HarmonyPage/Harmony/HarmonyAddAssignments.tsx","components/pages/HarmonyPage/Harmony/HarmonyFieldArrayForm.tsx","components/pages/HarmonyPage/Harmony/HarmonySchedule.tsx","components/pages/HarmonyPage/HarmonyPage.tsx","components/pages/HelpPage/HelpPage.tsx","components/pages/SchedulizerPage/SchedulizerPage.tsx","components/App/App.tsx","components/Footer/Footer.tsx","assets/logo.ts","components/Header/Header.tsx","components/Tabs/DepartmentSchedule/DepartmentSchedule.tsx","components/Tabs/FacultyLoads/FacultyLoads.tsx","components/Tabs/FacultyLoads/UpdateNonTeachingLoadModalPagination/UpdateNonTeachingLoadModalPagination.tsx","components/Tabs/FacultyLoads/UpdateSectionModalPagination/UpdateSectionModalPagination.tsx","components/Tabs/FacultySchedule/FacultySchedule.tsx","components/Tabs/RoomsSchedule/RoomsSchedule.tsx","components/Tabs/tabComponents/CSVActions/CSVActions.tsx","components/Tabs/tabComponents/CSVActions/ImportButton/ImportButton.tsx","components/Tabs/tabComponents/NoCoursesHeader/NoCoursesHeader.tsx","components/Tabs/tabComponents/TabPanel/TabPanel.tsx","components/Tabs/Tabs.tsx","components/Toolbar/ColorSelector/ColorSelector.tsx","components/Toolbar/ScheduleToolbar/ScheduleToolbar.tsx","components/Toolbar/Searchbar/Searchbar.tsx","components/Toolbar/SemesterSelector/SemesterSelector.tsx","serviceWorker.ts","index.tsx","utilities/hooks/addSectionHooks.ts","utilities/hooks/deleteMeetingHooks.ts","utilities/hooks/useAppContext.ts","utilities/hooks/useExportCSV.ts","utilities/hooks/useExportFullCSV.ts","utilities/hooks/useFieldArrayFormContext.tsx","utilities/hooks/useHarmonyAssignmentsStore.ts","utilities/hooks/useHarmonyResultStore.ts","utilities/hooks/useImportFile.ts","utilities/hooks/useRedirect.ts","utilities/interfaces/index.ts","utilities/helpers/caseFunctions.ts","utilities/helpers/immer.ts","utilities/helpers/makeFC.tsx","utilities/helpers/readCSV.ts","utilities/helpers/teamMembers.ts","utilities/helpers/utils.ts","utilities/helpers/writeFullCSV.ts","utilities/helpers/writeLoadsCSV.ts"],"names":["loadLocal","key","item","localStorage","getItem","JSON","parse","undefined","useLocal","load","remove","removeItem","removeLocal","save","setItem","stringify","saveLocal","mapNonTeachingLoadValuesToInput","data","terms","addFalseToTermsCheckboxList","section","term","activity","instructionalMethod","facultyHours","instructor","instructors","mapNonTeachingLoadInput","newSection","cloneDeep","emptySection","newCourse","emptyCourse","isNonTeaching","termValues","Object","values","Term","map","t","includes","Array","length","fill","AppContext","createContext","appDispatch","voidFn","appState","initialAppState","isCSVLoading","setIsCSVLoading","displayName","ScheduleContext","isScheduleLoading","setIsScheduleLoading","useImportRemoteFile","useContext","schedule","fileUrl","importRemoteFile","url","location","href","csvIndex","indexOf","xlsxIndex","csvUrl","slice","fetch","then","response","status","text","result","a","payload","type","newSchedule","csvStringToSchedule","updateScheduleInContext","clearSearchParams","xlsxUrl","arrayBuffer","getCSVFromXLSXData","useHarmonyFormsStore","create","persist","set","get","courses","professors","rooms","times","update","name","Day","Weekday","Monday","Tuesday","Wednesday","Thursday","Friday","SemesterLength","Half","Intensive","SemesterLengthOption","updateNonIdentifyingCourseInfo","oldCourse","department","updateIdentifyingCourseInfo","prefixes","number","updateNonIdentifyingSectionInfo","oldSection","anticipatedSize","comments","day10Used","endDate","globalMax","localMax","semesterLength","startDate","studentHours","termStart","used","year","updateIdentifyingSectionInfo","letter","HalfFirst","HalfSecond","IntensiveA","IntensiveB","IntensiveC","IntensiveD","ColorBy","SchedulizerTab","classes","colorBy","departments","schedulizerTab","selectedTerm","Fall","slotMaxTime","slotMinTime","range","extendMoment","AllMoment","findConflicts","dataToCheck","forEach","course","courseIndex","sections","sectionIndex","meetings","meeting","meetingIndex","isConflict","startTimeMoment","moment","startTime","push","days","endTime","add","duration","indexes","room","getLocationString","sectionName","getSectionName","meeting1","i","meeting2","j","range1","range2","overlaps","some","day","ci1","si1","mi1","ci2","si2","mi2","getHoursArr","min","max","minHour","parseInt","split","maxHour","getEvents","groups","events","enumArray","scheduleWithConflicts","dept","prof","className","createEventClassName","group","endTimeMoment","format","event","dayOfWeek","INITIAL_DATE","newEvent","classNames","description","end","extendedProps","start","title","e","replace","getMinAndMaxTimes","flatten","startTimes","endTimes","filter","minTime","minBy","startOf","maxTime","maxBy","filterEventsByTerm","groupedEvents","tempGroupedEvents","forOwn","_","filterHeadersWithNoEvents","filteredEvents","headers","header","groupEvents","colorConflictBorders","borderColor","colorEventsByFeature","Room","building","roomNum","roomNumber","roomStr","color","randomColor","luminosity","seed","hash","textColor","Instructor","instructorStr","Prefix","prefixStr","prefix","levelStr","String","getPrefixes","sort","getNumbers","numbers","getCourseNames","names","getSectionLetters","letters","getInstructionalMethods","instructionalMethods","getDepts","deptStr","getCalendarClassName","scheduleType","convertFromSemesterLength","sl","Full","HalfSemester","IntensiveSemester","FullSemester","getCourse","courseNumber","isEqual","getSection","mapInputToInternalTypes","createNewSectionFromInput","createNewCourseFromInput","mapInternalTypesToInput","locationValue","trim","defaultTerm","isArray","addFalseToDaysCheckboxList","halfSemester","intensiveSemester","roomCapacity","toString","locationCase","semesterType","First","Second","A","B","C","D","convertToSemesterLength","Number","startTimeCase","yearCase","weekdays","wd","handleOldMeeting","oldData","removeOldMeeting","oldMeeting","removeMeetingFromSchedule","hardDelete","oldSectionHadMeetings","removeMeeting","splice","loadHoursRegEx","updateRow","newRow","prevRow","termName","termCourseSectionProp","termHoursProp","sectionNameWithHours","createTable","newTableData","newFacultyRow","faculty","prevAddedFacultyRow","updateArgs","Spring","Summer","Interim","console","log","sortedTableData","row","totalHours","fallHours","springHours","summerHours","otherHours","b","sumBy","findSection","c","s","emptyMeeting","getCourseSectionMeetingFromCell","cellValue","cellHeader","sectionStrList","join","courseSectionMeeting","csm","iterable","findNonTeachingLoad","nonTeachingActivity","nonTeachingLoadsArray","nonTeachingLoads","nonTeachingLoadArray","nonTeachingLoad","getNonTeachingLoadsFromCell","nonTeachingLoadStrList","getProfs","professorsSet","Set","getClasses","coursesSet","firstPrefix","getRooms","roomsSet","emptyStringToNull","value","originalValue","removeUncheckedValues","valueArr","decimalRegex","Boolean","match","addSectionSchema","object","shape","typeError","integer","transform","nullable","array","string","required","test","of","uppercase","positive","addNonTeachingLoadSchema","reducer","actionCallback","state","action","newState","Level","Faculty","module","exports","AddNonTeachingLoadPopover","removeOldActivity","addNonTeachingLoadToSchedule","useAddSectionToSchedule","methods","useForm","criteriaMode","resolver","yupResolver","deleteMeetingFromSchedule","useDeleteMeetingFromSchedule","reset","getValues","useEffect","inputValues","formValues","Box","Typography","variant","Grid","container","spacing","label","defaultValue","multiple","options","initialValue","Button","onClick","handleSubmit","timestamp","defaultProps","PopoverButton","props","isIcon","popupId","buttonTitle","minWidth","children","buttonProps","popupState","usePopupState","IconButton","bindTrigger","Add","Popover","bindPopover","anchorOrigin","horizontal","vertical","PaperProps","style","transformOrigin","AddSectionButton","transformDataToTrueSectionInput","dataCourseSection","newMeeting","AddSectionPopover","defaultValues","useState","setSemesterLength","addSectionToSchedule","onSubmit","dataTransformed","omitBy","isNil","isHalfSemester","isIntensiveSemester","isCustomSemester","CustomSemester","mb","textFieldProps","autoFocus","fullWidth","InputProps","endAdornment","InputAdornment","position","xs","onChange","target","h","direction","disabled","multiline","rows","alignItems","justify","addTitle","buttons","AnimateShowAndHide","once","isActive","setIsActive","isVisible","setIsVisible","springProps","useSpring","config","friction","mass","tension","from","height","opacity","x","onVisibilityChange","useCallback","isElemVisible","active","div","Spring3DHover","member","xys","photo","website","onMouseLeave","onMouseMove","clientX","y","clientY","calc","interpolate","trans","alt","src","borderRadius","window","innerHeight","innerWidth","SubComponents","Union","Literal","AsyncComponent","isLoading","getElements","Loading","Loaded","createFC","Calendar","allDaySlot","dayHeaderFormat","weekday","droppable","editable","headerToolbar","initialDate","initialView","nowIndicator","plugins","interactionPlugin","timeGridPlugin","selectable","weekends","DeleteFieldButton","index","useFieldArrayFormContext","Tooltip","aria-label","FieldArrayField","fieldIndex","control","titleCaseName","m","as","TextField","FieldArrayFields","fields","field","id","keys","f","FieldArrayFormActionButtons","append","margin","FieldArrayForm","fieldsName","startCase","toLower","formMethods","fieldArrayMethods","useFieldArray","GridItemAutocomplete","useFormContext","errors","useInput","nameFallback","errorMessage","render","controllerProps","cPropSet","propsCopy","has","Autocomplete","autoSelect","freeSolo","openOnFocus","renderInput","params","error","helperText","GridItemCheckboxGroup","register","onValueChange","onCheckboxChange","opt","valueCopy","FormControl","component","FormLabel","FormGroup","FormControlLabel","Checkbox","checked","inputRef","FormHelperText","GridItemRadioGroup","RadioGroup","Radio","camelCase","GridItemTextField","ImportInputWrapper","isAdditiveImport","onInputChange","useImportFile","htmlFor","accept","ModalPagination","forwardRef","ref","findCourseSectionMeeting","PopoverComponent","open","setOpen","modalValues","setModalValues","iterableKeyMap","setIterableKeyMap","page","setPage","handleModalOpen","useImperativeHandle","Modal","onClose","Paper","Pagination","count","NewTabLink","Link","rel","Schedule","Provider","tenVH","ScheduleHeader","top","ScheduleLeftTimeAxis","time","ScheduleBase","readonly","calendarHeaders","calendarOptions","useAppContext","popupData","setPopupData","handleEventClick","arg","el","useMemo","calenderHeadersNoEmptyInTerm","Stick","node","eventClick","maxHeight","maxWidth","AboutPage","align","p","AboutVision","body","AboutTeam","team","AboutCode","AboutReport","AboutResources","TeamMemberProfile","bio","TextSection","mt","Harmony","assignments","useHarmonyAssignmentsStore","selector","setResult","useHarmonyResultStore","resultSelector","res","setRes","HarmonyCheckbox","setList","setChecked","handleChange","clickedItem","isChecked","prevState","HarmonyCheckboxList","list","customLabel","itemObj","HarmonyCourseCheckboxes","setClass","profList","setProfList","timeList","setTimeList","roomList","setRoomList","profObj","Last","HarmonyAddAssignments","courseObj","Course","HarmonyFieldArrayForm","onSubmitCallback","React","HarmonySchedule","redirectTo","useRedirect","HarmonyPage","Time","HelpPage","SchedulizerPage","App","useReducer","basename","path","Footer","AppBar","elevation","logo","CalvinLogo","Header","Toolbar","to","RouterLink","DepartmentSchedule","FacultyLoads","updateSectionModalRef","useRef","updateNonTeachingLoadModalRef","columns","accessor","tableInstance","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","prepareRow","TableContainer","Table","TableHead","headerGroup","TableRow","getHeaderGroupProps","column","TableCell","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","TableBody","rowId","getIdFromFaculty","original","getRowProps","cells","cell","cellClass","getCellProps","isNonTeachingLoad","cellData","current","handleCellClick","UpdateNonTeachingLoadModalPagination","UpdateSectionModalPagination","FacultySchedule","RoomsSchedule","CSVActions","onFullExportClick","useExportFullCSV","edge","Menu","getContentAnchorEl","bindMenu","MenuItem","button","ImportButton","btnProps","NoCoursesHeader","marginRight","TabPanel","other","aria-labelledby","hidden","role","Tabs","tabValue","setTabValue","scheduleHasCourses","Container","centered","indicatorColor","newValue","Tab","ColorSelector","InputLabel","Select","selectedColorBy","ScheduleToolbar","Searchbar","getOptionLabel","option","notSupported","SemesterSelector","handleOnClick","newTerm","ChevronLeft","ChevronRight","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","addToSchedule","switchToCorrectTerm","scrollToUpdatedSection","Loads","scrollToUpdatedFacultyRow","insertSectionCourse","currentTerm","newElement","newSectionName","newElements","getElementsByClassName","parentElement","scrollIntoView","behavior","block","useExportCSV","download","scheduleToCSVString","nonTeachingCSV","scheduleToNonTeachingCSVString","scheduleToFullCSVString","FieldArrayFormContext","FieldArrayFormProvider","immer","attributes","convertToSchedule","courseObject","professor","scheduleJSON","file","files","fileNameTokens","fileType","reader","FileReader","readAsArrayBuffer","readAsBinaryString","Error","onloadend","scheduleString","currentSchedule","newScheduleData","combineSchedules","xlsxData","Uint8Array","workBook","read","firstSheet","Sheets","SheetNames","utils","sheet_to_csv","history","useHistory","SEPARATORS","fallReg","RegExp","summerReg","springReg","interimReg","sunReg","monReg","tuesReg","wedReg","thursReg","friReg","satReg","assignWithMeetings","arrAssign","valueParts","createMeetings","v","startTimeCallback","locationCallback","termCallback","separator","termsArr","termCase","semesterLengthCallback","semesterLengthCase","daysCallback","daysCase","instructorCallback","instructorCase","prefixCallback","prefixCase","nameCallback","numberCallback","letterCallback","globalMaxCallback","integerDefaultZeroCase","localMaxCallback","commentsCallback","yearCallback","studentHoursCallback","startsWith","substr","facultyHoursCallback","durationCallback","durationCase","roomCapacityCallback","capacity","instructionalMethodCallback","startMoment","isValid","roomParts","upperValue","toUpperCase","lowerValue","toLowerCase","Sunday","Saturday","endDateCase","startSectionDate","sectionStart","sectionLength","diff","startMonth","month","isInteger","api","fn","produce","Component","subComponent","Tag","elements","alternatives","literal","getUnionTypeIterable","it","getChildByName","pruimSpreadsheetFields","cf","half","startTimeStr","registrarSpreadsheetFields","AcademicYear","BuildingAndRoom","Comments","CourseNum","Day10Used","Department","FacultyLoad","GlobalMax","InstructionalMethod","LastEditTimestamp","LocalMax","MeetingDays","MeetingDurationMinutes","MeetingStart","MeetingTime","MinimumCredits","RoomCapacity","SectionCode","SectionEndDate","SectionStartDate","SectionStatus","ShortTitle","SubjectCode","TermStart","Used","templateSpreadsheetFields","Days","FacLoad","NonTeachingActivity","SectionName","sectionParts","StuCred","Terms","callbacks","csvString","objects","papa","skipEmptyLines","meta","existingCourse","existingCourseIndex","existingSection","existingSectionIndex","newMeetings","meetingExists","concat","val","Children","child","numericReg","csvStr","endMoment","meetingTimeStr","meetingStartStr","meetingStartInternalStr","meetingEndStr","meetingEndInternalStr","meetingDurationMinutesStr","buildingStr","roomNumberStr","buildingAndRoomStr","roomCapacityStr","daysStr","monStr","tuesStr","wedStr","thursStr","friStr","clone","getMeetingTimeStr","termStr","getTermsStr","sectionNameStr","courseLevelCodeStr","termsStr","getTermStr","csvHeader","toFixed"],"mappings":"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","file":"static/js/main.2d9641ce.chunk.js","sourcesContent":["// Note: Shout-out to CQL/Benchmark which was referenced while writing this\n\n/**\n * Get value from localStorage\n * @param key id for localStorage\n * @returns item with \"key\"\n */\nexport const loadLocal = <T>(key: string) => {\n  const item: string | null = localStorage.getItem(key);\n  return item ? (JSON.parse(item) as T) : undefined;\n};\n\n/**\n * Save item to localStorage\n * @param key id for localStorage\n * @param item value for key\n */\nexport const saveLocal = <T>(key: string, item: T | undefined) => {\n  if (item === undefined) localStorage.removeItem(key);\n  else localStorage.setItem(key, JSON.stringify(item));\n};\n\n/**\n * Delete item from localStorage\n * @param key id for localStorage\n */\nexport const removeLocal = (key: string) => {\n  localStorage.removeItem(key);\n};\n\n/** Hook provides callback functions to load, remove, and save\n *   values in localStorage.\n */\nexport const useLocal = <T>(key: string) => {\n  const load = () => {\n    return loadLocal<T>(key);\n  };\n  const save = (item: T) => {\n    saveLocal(key, item);\n  };\n  const remove = () => {\n    removeLocal(key);\n  };\n  return { load, remove, save };\n};\n","import { cloneDeep, map } from \"lodash\";\nimport { Course, CourseSectionMeeting, NonTeachingLoadInput, Section, Term } from \"utilities\";\nimport { emptyCourse, emptySection } from \"utilities/constants\";\n\nexport type CheckboxTerms = (Term | boolean)[];\n\nexport const mapNonTeachingLoadValuesToInput = (\n  data?: CourseSectionMeeting,\n): NonTeachingLoadInput => {\n  const terms = addFalseToTermsCheckboxList(data?.section.term as Term[]);\n\n  return {\n    activity: data?.section.instructionalMethod ?? \"\",\n    facultyHours:\n      data?.section.facultyHours !== undefined && data.section.facultyHours > -1\n        ? data.section.facultyHours\n        : undefined,\n    instructor: data?.section.instructors ?? [],\n    terms,\n  };\n};\n\nexport const mapNonTeachingLoadInput = (data: NonTeachingLoadInput) => {\n  const newSection: Section = cloneDeep(emptySection);\n  const newCourse: Course = cloneDeep(emptyCourse);\n  newSection.instructionalMethod = data.activity;\n  newSection.facultyHours = data.facultyHours ?? 0;\n  newSection.instructors = data.instructor;\n  newSection.isNonTeaching = true;\n  newSection.term = data.terms as Term[];\n  return { newCourse, newSection };\n};\n\nexport const addFalseToTermsCheckboxList = (terms?: Term[]): CheckboxTerms => {\n  const termValues = Object.values(Term);\n  if (!terms) {\n    return new Array(termValues.length).fill(false);\n  }\n  return map(termValues, (t) => {\n    return terms.includes(t) ? t : false;\n  });\n};\n","import { createContext, Dispatch, SetStateAction } from \"react\";\nimport { AppAction, AppState, initialAppState, voidFn } from \"utilities\";\n\nexport interface AppContext {\n  appDispatch: Dispatch<AppAction> | (() => void);\n  appState: AppState;\n  isCSVLoading: boolean;\n  setIsCSVLoading: Dispatch<SetStateAction<AppContext[\"isCSVLoading\"]>> | (() => void);\n}\n\n/* Used for containing the global state of the app\n  and a dispatcher to perform updates against the\n  state of the app.\n*/\nexport const AppContext = createContext<AppContext>({\n  appDispatch: voidFn,\n  appState: initialAppState,\n  isCSVLoading: false,\n  setIsCSVLoading: voidFn,\n});\nAppContext.displayName = \"AppContext\";\n","import { createContext, Dispatch, SetStateAction } from \"react\";\nimport { voidFn } from \"utilities\";\n\ninterface ScheduleContext {\n  isScheduleLoading: boolean;\n  setIsScheduleLoading:\n    | Dispatch<SetStateAction<ScheduleContext[\"isScheduleLoading\"]>>\n    | (() => void);\n}\n\n/* Provide a context for each Schedule (Faculty, Room, etc.) */\nexport const ScheduleContext = createContext<ScheduleContext>({\n  isScheduleLoading: false,\n  setIsScheduleLoading: voidFn,\n});\n","import { useContext } from \"react\";\nimport { csvStringToSchedule, getCSVFromXLSXData, updateScheduleInContext } from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\n\nexport const useImportRemoteFile = () => {\n  const {\n    appState: { schedule, fileUrl },\n    appDispatch,\n    setIsCSVLoading,\n  } = useContext(AppContext);\n\n  // Load a file from the GET parameters (either ?csv= or ?xlsx=)\n  // only do this once for each page refresh, then redirect to the page without the GET params\n  // this will erase existing work!\n  // Ref: https://stackoverflow.com/questions/56663785/invalid-hook-call-hooks-can-only-be-called-inside-of-the-body-of-a-function-com\n  // Ref: https://www.gitmemory.com/issue/SheetJS/js-xlsx/1110/531003740\n  const importRemoteFile = () => {\n    // eslint-disable-next-line no-restricted-globals\n    const url = location.href;\n    // TODO: We'll need to be more careful about this if we end up using more GET params\n    const getCSVStr = \"?csv=\";\n    const getXLSXStr = \"?xlsx=\";\n    const csvIndex = url.indexOf(getCSVStr);\n    const xlsxIndex = url.indexOf(getXLSXStr);\n    if (csvIndex !== -1) {\n      const csvUrl = url.slice(csvIndex + getCSVStr.length);\n      if (csvUrl !== \"\" && csvUrl !== fileUrl) {\n        setIsCSVLoading(true);\n        fetch(csvUrl)\n          .then((response) => {\n            if (response.status === 404) {\n              return null;\n            }\n            return response.text();\n          })\n          .then(async (result) => {\n            appDispatch({ payload: { fileUrl: csvUrl }, type: \"setFileUrl\" });\n            if (result) {\n              const newSchedule = csvStringToSchedule(result);\n              await updateScheduleInContext(schedule, newSchedule, appDispatch);\n            }\n            clearSearchParams();\n            setIsCSVLoading(false);\n          });\n      } else {\n        clearSearchParams();\n      }\n    } else if (xlsxIndex !== -1) {\n      const xlsxUrl = url.slice(xlsxIndex + getXLSXStr.length);\n      if (xlsxUrl !== \"\" && xlsxUrl !== fileUrl) {\n        setIsCSVLoading(true);\n        fetch(xlsxUrl)\n          .then((response) => {\n            if (response.status === 404) {\n              return null;\n            }\n            return response.arrayBuffer();\n          })\n          .then(async (result) => {\n            appDispatch({ payload: { fileUrl: xlsxUrl }, type: \"setFileUrl\" });\n            if (result) {\n              const newSchedule = csvStringToSchedule(\n                getCSVFromXLSXData(result as ArrayBufferLike),\n              );\n              await updateScheduleInContext(schedule, newSchedule, appDispatch);\n            }\n            clearSearchParams();\n            setIsCSVLoading(false);\n          });\n      } else {\n        clearSearchParams();\n      }\n    }\n  };\n\n  return { importRemoteFile };\n};\n\nconst clearSearchParams = () => {\n  // eslint-disable-next-line no-restricted-globals\n  location.href = \"\";\n};\n","import create, { GetState, SetState, State } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\n\n/**\n * A hook to get access to a global store storing all values related to the\n *   forms on the Harmony page. Replacement for Context Providers and Reducers.\n * Persists the value in localStorage\n *\n * ref: https://dev.to/karanpratapsingh/simplify-your-store-a-brief-introduction-to-zustand-250h\n */\nexport const useHarmonyFormsStore = create<HarmonyFormsState>(\n  persist<HarmonyFormsState>(\n    (set: SetState<HarmonyFormsState>, get: GetState<HarmonyFormsState>) => {\n      return {\n        courses: [],\n        professors: [],\n        rooms: [],\n        times: [],\n        update: (key: string, data: string[]) => {\n          return set(() => {\n            return { [key as keyof HarmonyFormsAccessors]: data };\n          });\n        },\n      };\n    },\n    {\n      name: \"harmonyFormsState\",\n    },\n  ),\n);\n\n/** Adds functions to accessors */\nexport interface HarmonyFormsState extends HarmonyFormsAccessors {\n  update: (key: string, data: string[]) => void;\n}\n\n/** labels to retrieve data */\nexport interface HarmonyFormsAccessors extends State {\n  courses: SingularAccessors[\"course\"][];\n  professors: SingularAccessors[\"professor\"][];\n  rooms: SingularAccessors[\"room\"][];\n  times: SingularAccessors[\"time\"][];\n}\n\n/** Helper types */\nexport interface SingularAccessors {\n  course: { Course: string };\n  professor: { First: string; Last: string };\n  room: { Room: string };\n  time: { Time: string };\n}\n","/* eslint-disable typescript-sort-keys/string-enum */\n\nexport enum Day {\n  Monday = \"M\",\n  Tuesday = \"T\",\n  Wednesday = \"W\",\n  Thursday = \"TH\",\n  Friday = \"F\",\n  Saturday = \"S\",\n  Sunday = \"SU\",\n}\n\nexport enum Weekday {\n  Monday = Day.Monday,\n  Tuesday = Day.Tuesday,\n  Wednesday = Day.Wednesday,\n  Thursday = Day.Thursday,\n  Friday = Day.Friday,\n}\n","/* eslint-disable typescript-sort-keys/string-enum */\nimport { Day, SemesterLength, Term } from \".\";\n\nexport interface Location {\n  building: string;\n  roomCapacity?: number;\n  roomNumber: string;\n}\n\nexport interface Meeting {\n  // All days on which the given Meeting time and room is applicable\n  days: Day[];\n  // In minutes (usually 50)\n  duration: number;\n  isConflict?: boolean;\n  location: Location;\n  // Like \"8:00 AM\" or \"12:30 PM\"\n  startTime: string;\n}\n\nexport type Prefix = string;\n\n// If new non-identifying fields are added to this interface, must update updateNonIdentifyingCourseInfo()\n// If new identifying fields are added to this interface, must update updateIdentifyingCourseInfo()\nexport interface Course {\n  department?: string;\n  name: string;\n  number: string;\n  prefixes: Prefix[];\n  sections: Section[];\n}\n\n// Updates all Course fields except for:\n// - Identifying Fields: used for finding a Course in getCourse()\n//                       includes: prefixes, number\n// - Sections: if this field is changed, new sections are added and/or old ones deleted\n// - Name: this is handled on the Section level instead\nexport const updateNonIdentifyingCourseInfo = (oldCourse: Course, newCourse: Course): Course => {\n  oldCourse.department = newCourse.department;\n  return oldCourse;\n};\n\n// Updates all identifying Course fields\n//  includes: prefixes, number\nexport const updateIdentifyingCourseInfo = (oldCourse: Course, newCourse: Course): Course => {\n  oldCourse.prefixes = newCourse.prefixes;\n  oldCourse.number = newCourse.number;\n  return oldCourse;\n};\n\nexport type Instructor = string;\n\n// If new non-identifying fields are added to this interface, must update updateNonIdentifyingSectionInfo()\n// If new identifying fields are added to this interface, must update updateIdentifyingSectionInfo()\nexport interface Section {\n  anticipatedSize?: number;\n  comments?: string;\n  // Number of students enrolled in this section 10 days into the course\n  day10Used?: number;\n  // Like 2/3/2020\n  endDate?: string;\n  facultyHours: number;\n  globalMax?: number;\n  instructionalMethod?: string;\n  instructors: Instructor[];\n  isNonTeaching?: boolean;\n  letter: string;\n  localMax?: number;\n  // Multiple Meetings possible if time/room differs on different days\n  // Asynchronous classes should have an empty array of meeting times\n  meetings: Meeting[];\n  name?: string;\n  semesterLength?: SemesterLength;\n  // Like 5/21/2020\n  startDate?: string;\n  status?: string;\n  studentHours: number;\n  term: Term | Term[];\n  // Like 9/3/2019\n  termStart?: string;\n  timestamp?: string;\n  // Number of students enrolled in this section at the end of the course\n  used?: number;\n  year?: number | string;\n}\n\n// Updates all Section fields except for:\n// - Identifying Fields: used for finding a Section in getSection()\n//                       includes: letter, term, instructors, instructionalMethod\n// - Meetings: if this field is changed, new meetings are added and/or old ones deleted\nexport const updateNonIdentifyingSectionInfo = (\n  oldSection: Section,\n  newSection: Section,\n): Section => {\n  oldSection.anticipatedSize = newSection.anticipatedSize;\n  oldSection.comments = newSection.comments;\n  oldSection.day10Used = newSection.day10Used;\n  oldSection.endDate = newSection.endDate;\n  oldSection.facultyHours = newSection.facultyHours;\n  oldSection.globalMax = newSection.globalMax;\n  oldSection.isNonTeaching = newSection.isNonTeaching;\n  oldSection.localMax = newSection.localMax;\n  oldSection.name = newSection.name;\n  oldSection.semesterLength = newSection.semesterLength;\n  oldSection.startDate = newSection.startDate;\n  oldSection.status = newSection.status;\n  oldSection.studentHours = newSection.studentHours;\n  oldSection.termStart = newSection.termStart;\n  oldSection.used = newSection.used;\n  oldSection.year = newSection.year;\n  return oldSection;\n};\n\n// Updates all identifying Section fields\n//  includes: letter, term, instructors, instructionalMethod\nexport const updateIdentifyingSectionInfo = (oldSection: Section, newSection: Section): Section => {\n  oldSection.letter = newSection.letter;\n  oldSection.term = newSection.term;\n  oldSection.instructors = newSection.instructors;\n  oldSection.instructionalMethod = newSection.instructionalMethod;\n  return oldSection;\n};\n\nexport interface Schedule {\n  courses: Course[];\n}\n\nexport interface CourseSectionMeeting {\n  course: Course;\n  meeting: Meeting;\n  section: Section;\n}\n","/* eslint-disable typescript-sort-keys/string-enum */\n\nexport enum Term {\n  Fall = \"FA\",\n  Interim = \"IN\", // TODO: Remove?\n  Spring = \"SP\",\n  Summer = \"SU\", // TODO: Is this a thing?\n}\n\nexport enum SemesterLength {\n  Full = \"Full\",\n  HalfFirst = \"First\",\n  HalfSecond = \"Second\",\n  IntensiveA = \"A\",\n  IntensiveB = \"B\",\n  IntensiveC = \"C\",\n  IntensiveD = \"D\",\n}\n\nexport enum Half {\n  First = SemesterLength.HalfFirst,\n  Second = SemesterLength.HalfSecond,\n}\n\nexport enum Intensive {\n  A = SemesterLength.IntensiveA,\n  B = SemesterLength.IntensiveB,\n  C = SemesterLength.IntensiveC,\n  D = SemesterLength.IntensiveD,\n}\n\nexport enum SemesterLengthOption {\n  FullSemester = \"Full\",\n  HalfSemester = \"Half\",\n  IntensiveSemester = \"Intensive\",\n  CustomSemester = \"Custom\",\n}\n","import { loadLocal } from \"utilities/hooks/useLocal\";\nimport { Schedule, Term } from \"./dataInterfaces\";\n\nexport enum ColorBy {\n  Level,\n  Room,\n  Instructor,\n  Prefix,\n}\n\nexport enum SchedulizerTab {\n  Faculty = 0,\n  Room,\n  Loads,\n  Conflicts,\n}\n\n// structure for the global app state\nexport interface AppState {\n  classes: string[];\n  colorBy: ColorBy;\n  departments: string[];\n  fileUrl: string;\n  professors: string[];\n  rooms: string[];\n  schedule: Schedule;\n  schedulizerTab: SchedulizerTab;\n  selectedTerm: Term;\n  slotMaxTime: string;\n  slotMinTime: string;\n}\n\n// Defaults for the app state when it launches, will try to load\n//  previous appState to launch app from.\n//  If no previous state saved, will default to the object below.\nexport const initialAppState: AppState = loadLocal(\"appState\") || {\n  classes: [],\n  colorBy: 0,\n  departments: [],\n  fileUrl: \"\",\n  professors: [],\n  rooms: [],\n  schedule: { courses: [] },\n  schedulizerTab: 0,\n  selectedTerm: Term.Fall,\n  slotMaxTime: \"22:00\",\n  slotMinTime: \"6:00\",\n};\n\n// Ensure that these aren't undefined if they didn't exist in the previous app state\nif (!initialAppState.classes) {\n  initialAppState.departments = [];\n}\nif (!initialAppState.departments) {\n  initialAppState.departments = [];\n}\nif (!initialAppState.professors) {\n  initialAppState.departments = [];\n}\nif (!initialAppState.rooms) {\n  initialAppState.departments = [];\n}\n\n// structure of actions that can be sent to app dispatch\nexport interface AppAction {\n  payload: Partial<AppState>;\n  type: \"setScheduleData\" | \"setSelectedTerm\" | \"setFileUrl\" | \"setColorBy\" | \"setSchedulizerTab\"; // add | to add more actions in the future\n}\n","import { forEach } from \"lodash\";\nimport * as AllMoment from \"moment\";\nimport moment, { Moment } from \"moment\";\nimport { extendMoment } from \"moment-range\";\nimport { Day, getLocationString, getSectionName, Schedule, Section } from \"utilities\";\nimport { Instructor } from \"utilities/interfaces\";\n\nconst { range } = extendMoment(AllMoment);\n\ninterface ConflictData {\n  days: Day[];\n  endTime: Moment;\n  indexes: number[];\n  instructors: Section[\"instructors\"];\n  room: string;\n  sectionName: string;\n  startTime: Moment;\n  term: Section[\"term\"];\n}\n\nexport const findConflicts = (schedule: Schedule): Schedule => {\n  // flatten the schedule into a single array with just the data being checked for conflicts\n  const dataToCheck: ConflictData[] = [];\n  forEach(schedule.courses, (course, courseIndex) => {\n    forEach(course.sections, (section, sectionIndex) => {\n      forEach(section.meetings, (meeting, meetingIndex) => {\n        meeting.isConflict = false;\n        const startTimeMoment = moment(meeting.startTime, \"h:mm A\");\n        dataToCheck.push({\n          days: meeting.days,\n          endTime: moment(startTimeMoment).add(meeting.duration, \"minutes\"),\n          indexes: [courseIndex, sectionIndex, meetingIndex],\n          instructors: section.instructors,\n          room: getLocationString(meeting.location),\n          sectionName: getSectionName(course, section),\n          startTime: startTimeMoment,\n          term: section.term,\n        });\n      });\n    });\n  });\n\n  // loop through each pair of meetings and mark conflicts\n  forEach(dataToCheck, (meeting1, i) => {\n    forEach(dataToCheck, (meeting2, j) => {\n      const range1 = range(meeting1.startTime, meeting1.endTime);\n      const range2 = range(meeting2.startTime, meeting2.endTime);\n      const meeting2IncludesDay = (day: Day) => {\n        return meeting2.days.includes(day);\n      };\n      const meeting2IncludesInstructor = (instructor: Instructor) => {\n        return meeting2.instructors.includes(instructor);\n      };\n\n      if (\n        i !== j &&\n        range1.overlaps(range2) &&\n        meeting1.term === meeting2.term &&\n        meeting1.days.some(meeting2IncludesDay) &&\n        (meeting1.instructors.some(meeting2IncludesInstructor) ||\n          meeting1.room === meeting2.room) &&\n        meeting1.sectionName !== meeting2.sectionName\n      ) {\n        const [ci1, si1, mi1] = meeting1.indexes;\n        const [ci2, si2, mi2] = meeting2.indexes;\n        schedule.courses[ci1].sections[si1].meetings[mi1].isConflict = true;\n        schedule.courses[ci2].sections[si2].meetings[mi2].isConflict = true;\n      }\n    });\n  });\n  return schedule;\n};\n","import { EventInput } from \"@fullcalendar/react\";\nimport { ScheduleBaseProps } from \"components\";\nimport { filter, flatten, forEach, forOwn, map, maxBy, minBy, range } from \"lodash\";\nimport moment from \"moment\";\nimport hash from \"object-hash\";\nimport randomColor from \"randomcolor\";\nimport { enumArray } from \"utilities\";\nimport { INITIAL_DATE } from \"utilities/constants\";\nimport { ColorBy, Day, Location, Meeting, Schedule, Section, Term } from \"utilities/interfaces\";\nimport { findConflicts } from \"./conflictsService\";\n\n// Returns a list of hours to display on the Schedule\n// TODO: add better types for timing, maybe: https://stackoverflow.com/questions/51445767/how-to-define-a-regex-matched-string-type-in-typescript\nexport const getHoursArr = (min: string, max: string): number[] => {\n  const minHour = parseInt(min.split(\":\")[0]);\n  const maxHour = parseInt(max.split(\":\")[0]);\n  return range(minHour, maxHour);\n};\n\nexport interface GroupedEvents {\n  [key: string]: EventInput[];\n}\n\nconst eventExistsInEventList = (event: EventInput, eventList: EventInput[]): boolean => {\n  return eventList.some((e) => {\n    return (\n      e.title === event.title &&\n      e.start === event.start &&\n      e.end === event.end &&\n      e.term === event.term\n    );\n  });\n};\n\n// TODO: Add events with no meeting times as all day\nexport const getEvents = (\n  schedule: Schedule,\n  groups: \"faculty\" | \"room\" | \"department\",\n): GroupedEvents => {\n  const events: GroupedEvents = {};\n  const days: Day[] = enumArray(Day);\n  const scheduleWithConflicts = findConflicts(schedule);\n  forEach(scheduleWithConflicts.courses, (course) => {\n    const dept = course.department ? course.department : \"No Department\";\n    forEach(course.sections, (section) => {\n      const sectionName = `${course.prefixes[0]}-${course.number}-${section.letter}`;\n      forEach(section.instructors, (prof) => {\n        forEach(section.meetings, (meeting) => {\n          const room = getLocationString(meeting.location);\n          const className = createEventClassName(sectionName, room, prof);\n          let group = \"\";\n          if (groups === \"faculty\") {\n            group = prof;\n          } else if (groups === \"room\") {\n            group = room;\n          } else {\n            group = dept;\n          }\n          const startTimeMoment = moment(meeting.startTime, \"h:mm A\");\n          const endTimeMoment = moment(startTimeMoment).add(meeting.duration, \"minutes\");\n          // Don't display meetings which span more than one day\n          if (startTimeMoment.format(\"YYYY-MM-DD\") === endTimeMoment.format(\"YYYY-MM-DD\")) {\n            forEach(meeting.days, (day) => {\n              const dayOfWeek = moment(INITIAL_DATE)\n                .add(days.indexOf(day) + 1, \"days\")\n                .format(\"YYYY-MM-DD\");\n              const newEvent: EventInput = {\n                classNames: [className],\n                description: course.name,\n                end: `${dayOfWeek}T${endTimeMoment.format(\"HH:mm\")}`,\n                extendedProps: {\n                  course,\n                  meeting,\n                  section,\n                },\n                start: `${dayOfWeek}T${startTimeMoment.format(\"HH:mm\")}`,\n                term: section.term,\n                title: sectionName,\n              };\n              if (events[group]) {\n                // Only add the event if it hasn't already been added\n                // TODO: Will this conceal conflicts (specifically duplicated courses/sections/meetings)?\n                if (!eventExistsInEventList(newEvent, events[group])) {\n                  events[group].push(newEvent);\n                }\n              } else {\n                events[group] = [newEvent];\n              }\n            });\n          }\n        });\n      });\n    });\n  });\n  return events;\n};\n\nexport const createEventClassName = (sectionName: string, room: string, prof: string): string => {\n  const identifier = `${sectionName}_${prof}_${room}`;\n  return identifier.replace(/ /g, \"_\");\n};\n\nexport const getMinAndMaxTimes = (schedule: Schedule) => {\n  findConflicts(schedule);\n  const sections: Section[] = flatten(map(schedule.courses, \"sections\"));\n  const meetings: Meeting[] = flatten(map(sections, \"meetings\"));\n  let startDate = \"\";\n  const startTimes = map(meetings, (meeting) => {\n    return moment(meeting.startTime, \"h:mm A\");\n  });\n  if (startTimes.length) {\n    startDate = startTimes[0].format(\"YYYY-MM-DD\");\n  }\n  let endTimes = map(meetings, (meeting) => {\n    return moment(meeting.startTime, \"h:mm A\").add(meeting.duration, \"minutes\");\n  });\n  // If the meeting ends on a different day than it started, don't include it\n  endTimes = endTimes.filter((endTime) => {\n    return endTime.format(\"YYYY-MM-DD\") === startDate;\n  });\n  const minTime = (minBy(startTimes) || moment(\"06:00\", \"HH:mm\")).startOf(\"hour\").format(\"HH:mm\");\n  let maxTime = (maxBy(endTimes) || moment(\"22:00\", \"HH:mm\"))\n    .add(1, \"hours\")\n    .startOf(\"hour\")\n    .format(\"HH:mm\");\n  maxTime = maxTime === \"00:00\" ? \"24:00\" : maxTime;\n  return {\n    maxTime,\n    minTime,\n  };\n};\n\nexport const filterEventsByTerm = (groupedEvents: GroupedEvents, term: Term) => {\n  const tempGroupedEvents: GroupedEvents = {};\n  forOwn(groupedEvents, (_, key) => {\n    tempGroupedEvents[key] = filter(groupedEvents[key], (e) => {\n      return e.extendedProps?.section.term === term;\n    });\n  });\n  return tempGroupedEvents;\n};\n\nexport const filterHeadersWithNoEvents = (filteredEvents: GroupedEvents, headers: string[]) => {\n  return filter(headers, (header) => {\n    const groupEvents = filteredEvents[header];\n    return groupEvents?.length > 0;\n  });\n};\n\nexport const colorConflictBorders = (groupedEvents: GroupedEvents) => {\n  forOwn(groupedEvents, (_, key) => {\n    forEach(groupedEvents[key], (event) => {\n      if (event.extendedProps?.meeting?.isConflict) {\n        event.borderColor = \"red\";\n      }\n    });\n  });\n};\n\nexport const colorEventsByFeature = (groupedEvents: GroupedEvents, colorBy: ColorBy) => {\n  // TODO: Multiple colors for multiple instructors/prefixes?\n  // TODO: Pre-hashing strings too slow?\n  // Hash the strings before seeding the random color because it seemed that similar strings gave similar colors\n  switch (colorBy) {\n    case ColorBy.Room:\n      forOwn(groupedEvents, (_, key) => {\n        forEach(groupedEvents[key], (event) => {\n          const building = event.extendedProps?.meeting?.location?.building;\n          const roomNum = event.extendedProps?.meeting?.location?.roomNumber;\n          const roomStr = `${building} ${roomNum}`;\n          event.color = randomColor({ luminosity: \"light\", seed: hash(roomStr) });\n          event.textColor = \"black\";\n        });\n      });\n      break;\n    case ColorBy.Instructor:\n      forOwn(groupedEvents, (_, key) => {\n        forEach(groupedEvents[key], (event) => {\n          let instructorStr = \"\";\n          forEach(event.extendedProps?.section?.instructors, (instructor) => {\n            instructorStr += `${instructor}, `;\n          });\n          event.color = randomColor({\n            luminosity: \"light\",\n            seed: hash(instructorStr),\n          });\n          event.textColor = \"black\";\n        });\n      });\n      break;\n    case ColorBy.Prefix:\n      forOwn(groupedEvents, (_, key) => {\n        forEach(groupedEvents[key], (event) => {\n          let prefixStr = \"\";\n          forEach(event.extendedProps?.course?.prefixes, (prefix) => {\n            prefixStr += `${prefix}, `;\n          });\n          event.color = randomColor({ luminosity: \"light\", seed: hash(prefixStr) });\n          event.textColor = \"black\";\n        });\n      });\n      break;\n    default:\n      forOwn(groupedEvents, (_, key) => {\n        forEach(groupedEvents[key], (event) => {\n          const levelStr = String(event.extendedProps?.course?.number)[0];\n          switch (levelStr) {\n            case \"1\":\n              // Pastel green (suggests easy difficulty)\n              event.color = \"#c2ffc4\";\n              break;\n            case \"2\":\n              // Pastel yellow (suggests medium difficulty)\n              event.color = \"#fffec2\";\n              break;\n            case \"3\":\n              // Pastel red (suggests hard difficulty)\n              event.color = \"#ffc2c2\";\n              break;\n            default:\n              event.color = randomColor({ luminosity: \"light\", seed: hash(levelStr) });\n          }\n          event.textColor = \"black\";\n        });\n      });\n  }\n  return groupedEvents;\n};\n\nexport const getPrefixes = (schedule: Schedule) => {\n  const prefixes: string[] = [];\n  forEach(schedule.courses, (course) => {\n    forEach(course.prefixes, (prefix) => {\n      if (!prefixes.includes(prefix)) {\n        prefixes.push(prefix);\n      }\n    });\n  });\n  return prefixes.sort();\n};\n\nexport const getNumbers = (schedule: Schedule) => {\n  const numbers: string[] = [];\n  forEach(schedule.courses, (course) => {\n    if (!numbers.includes(course.number)) {\n      numbers.push(course.number);\n    }\n  });\n  return numbers.sort();\n};\n\nexport const getCourseNames = (schedule: Schedule) => {\n  const names: string[] = [];\n  forEach(schedule.courses, (course) => {\n    if (!names.includes(course.name)) {\n      names.push(course.name);\n    }\n  });\n  return names.sort();\n};\n\nexport const getSectionLetters = (schedule: Schedule) => {\n  const letters: string[] = [];\n  forEach(schedule.courses, (course) => {\n    forEach(course.sections, (section) => {\n      if (!letters.includes(section.letter)) {\n        letters.push(section.letter);\n      }\n    });\n  });\n  return letters.sort();\n};\n\nexport const getInstructionalMethods = (schedule: Schedule) => {\n  const instructionalMethods: string[] = [];\n  forEach(schedule.courses, (course) => {\n    forEach(course.sections, (section) => {\n      if (\n        section.instructionalMethod &&\n        !instructionalMethods.includes(section.instructionalMethod) &&\n        !section.isNonTeaching\n      ) {\n        instructionalMethods.push(section.instructionalMethod);\n      }\n    });\n  });\n  return instructionalMethods.sort();\n};\n\nexport const getDepts = (schedule: Schedule) => {\n  const departments: string[] = [];\n  forEach(schedule.courses, (course) => {\n    const deptStr = course.department ? course.department : \"No Department\";\n    if (!departments.includes(deptStr)) {\n      departments.push(deptStr);\n    }\n  });\n  return departments.sort();\n};\n\nexport const getLocationString = (location: Location): string => {\n  return `${location.building} ${location.roomNumber}`;\n};\n\n/* Generate a css class name. apply additional styles\n * specifically for the department tab view\n */\nexport const getCalendarClassName = (scheduleType: ScheduleBaseProps[\"scheduleType\"]) => {\n  let className = \"calendar-width calendar-title\";\n  if (scheduleType === \"department\") {\n    className += \" department-calendar-width\";\n  }\n  return className;\n};\n","import { filter, indexOf, isEqual, map } from \"lodash\";\nimport moment from \"moment\";\nimport { CheckboxTerms } from \"utilities\";\nimport { locationCase, startTimeCase, yearCase } from \"utilities/helpers\";\nimport {\n  Course,\n  CourseSectionMeeting,\n  Day,\n  Half,\n  Instructor,\n  Intensive,\n  Location,\n  Meeting,\n  Prefix,\n  Schedule,\n  Section,\n  SemesterLength,\n  SemesterLengthOption,\n  Term,\n  updateIdentifyingCourseInfo,\n  updateIdentifyingSectionInfo,\n  Weekday,\n} from \"utilities/interfaces\";\nimport { getLocationString } from \"./scheduleService\";\n\ntype CheckboxDays = (Day | boolean)[];\n\n// Defines interface for the section popover input\nexport interface SectionInput {\n  anticipatedSize?: Section[\"anticipatedSize\"];\n  comments?: Section[\"comments\"];\n  day10Used?: Section[\"day10Used\"];\n  days: CheckboxDays;\n  department?: Course[\"department\"];\n  duration?: Meeting[\"duration\"];\n  facultyHours?: Section[\"facultyHours\"];\n  globalMax?: Section[\"globalMax\"];\n  halfSemester?: Half;\n  instructionalMethod?: Section[\"instructionalMethod\"];\n  instructor: Instructor[];\n  intensiveSemester?: Intensive;\n  localMax?: Section[\"localMax\"];\n  location: string;\n  name: Course[\"name\"];\n  number: Course[\"number\"];\n  prefix: Prefix[];\n  roomCapacity?: Location[\"roomCapacity\"];\n  section: Section[\"letter\"];\n  semesterLength: SemesterLengthOption;\n  startTime: Meeting[\"startTime\"];\n  status?: Section[\"status\"];\n  studentHours?: Section[\"studentHours\"];\n  term: Section[\"term\"];\n  used?: Section[\"used\"];\n  year: string; // Assume string till yearCase() decides\n}\n\nexport interface NonTeachingLoadInput {\n  activity: Section[\"instructionalMethod\"];\n  facultyHours?: Section[\"facultyHours\"];\n  instructor: Instructor[];\n  terms: CheckboxTerms;\n}\n\nexport const convertFromSemesterLength = (sl: SemesterLength | undefined): SemesterLengthOption => {\n  if (sl === SemesterLength.Full || !sl) {\n    return SemesterLengthOption.FullSemester;\n  }\n  if (sl === SemesterLength.HalfFirst || sl === SemesterLength.HalfSecond) {\n    return SemesterLengthOption.HalfSemester;\n  }\n\n  return SemesterLengthOption.IntensiveSemester;\n};\n\nconst convertToSemesterLength = (sl: Half | Intensive | SemesterLengthOption): SemesterLength => {\n  switch (sl) {\n    case Half.First:\n      return SemesterLength.HalfFirst;\n    case Half.Second:\n      return SemesterLength.HalfSecond;\n    case Intensive.A:\n      return SemesterLength.IntensiveA;\n    case Intensive.B:\n      return SemesterLength.IntensiveB;\n    case Intensive.C:\n      return SemesterLength.IntensiveC;\n    case Intensive.D:\n      return SemesterLength.IntensiveD;\n    default:\n      return SemesterLength.Full;\n  }\n};\n\nexport const getSectionName = (course: Course, section: Section) => {\n  return `${course.prefixes[0]}-${course.number}-${section.letter}`;\n};\n\nexport const getCourse = (\n  schedule: Schedule,\n  prefixes: Course[\"prefixes\"],\n  courseNumber: Course[\"number\"],\n) => {\n  const courses = filter(schedule.courses, (course) => {\n    return isEqual(course.prefixes, prefixes) && course.number === courseNumber;\n  });\n  return courses.length > 0 ? courses[0] : undefined;\n};\n\nexport const getSection = (\n  schedule: Schedule,\n  prefixes: Course[\"prefixes\"],\n  courseNumber: Course[\"number\"],\n  letter: Section[\"letter\"],\n  term: Section[\"term\"],\n  instructors: Section[\"instructors\"],\n  instructionalMethod: Section[\"instructionalMethod\"],\n) => {\n  const course = getCourse(schedule, prefixes, courseNumber);\n  const sections = filter(course?.sections, (section) => {\n    return (\n      section.letter === letter &&\n      section.term === term &&\n      isEqual(section.instructors, instructors) &&\n      section.instructionalMethod === instructionalMethod\n    );\n  });\n  return sections.length > 0 ? sections[0] : undefined;\n};\n\n// Deprecated, replaced by removeMeeting\n// TODO: Remove?\nconst removeSection = (\n  schedule: Schedule,\n  letter: Section[\"letter\"],\n  term: Section[\"term\"],\n  instructors: Section[\"instructors\"],\n  courseIndex: number,\n) => {\n  schedule.courses[courseIndex].sections = filter(\n    schedule.courses[courseIndex].sections,\n    (section) => {\n      return (\n        section.letter !== letter || section.term !== term || section.instructors !== instructors\n      );\n    },\n  );\n  // TODO: Delete course if no sections left?\n};\n\n/* Used to map the input from the popover form to the\n internal JSON object type.  */\nexport const mapInputToInternalTypes = (data: SectionInput) => {\n  const newSection: Section = createNewSectionFromInput(data);\n  const newCourse: Course = createNewCourseFromInput(data);\n\n  return { newCourse, newSection };\n};\n\nexport const mapInternalTypesToInput = (data?: CourseSectionMeeting): SectionInput => {\n  const locationValue = (\n    (data &&\n      data.meeting &&\n      data.meeting.location.building &&\n      getLocationString(data.meeting.location)) ||\n    \"\"\n  ).trim();\n  let defaultTerm = data?.section.term;\n  if (Array.isArray(defaultTerm)) {\n    [defaultTerm] = defaultTerm;\n  }\n\n  const days = addFalseToDaysCheckboxList(data?.meeting?.days);\n\n  return {\n    anticipatedSize: data?.section.anticipatedSize,\n    comments: data?.section.comments?.trim() === \"\" ? undefined : data?.section.comments,\n    day10Used: data?.section.day10Used,\n    days,\n    department: data?.course.department,\n    duration: data?.meeting?.duration,\n    facultyHours:\n      data?.section.facultyHours !== undefined && data.section.facultyHours > -1\n        ? data.section.facultyHours\n        : undefined,\n    globalMax: data?.section.globalMax,\n    halfSemester: ((data?.section.semesterLength &&\n    convertFromSemesterLength(data?.section.semesterLength) === SemesterLengthOption.HalfSemester\n      ? data?.section.semesterLength\n      : SemesterLength.HalfFirst) as unknown) as Half,\n    instructionalMethod: data?.section.instructionalMethod ?? \"LEC\",\n    instructor: data?.section.instructors ?? [],\n    intensiveSemester: ((data?.section.semesterLength &&\n    convertFromSemesterLength(data?.section.semesterLength) ===\n      SemesterLengthOption.IntensiveSemester\n      ? data?.section.semesterLength\n      : SemesterLength.IntensiveA) as unknown) as Intensive,\n    localMax: data?.section.localMax,\n    location: locationValue,\n    name: data?.section.name ?? data?.course.name ?? \"\",\n    number: data?.course.number ?? \"\",\n    prefix: data?.course.prefixes ?? [],\n    roomCapacity: data?.meeting?.location.roomCapacity,\n    section: data?.section.letter ?? \"\",\n    semesterLength: convertFromSemesterLength(data?.section.semesterLength),\n    startTime: data?.meeting?.startTime\n      ? moment(data?.meeting?.startTime, \"h:mm A\").format(\"HH:mm\")\n      : \"08:00\",\n    status: data?.section.status ?? \"Active\",\n    studentHours:\n      data?.section.studentHours !== undefined && data.section.studentHours > -1\n        ? data.section.studentHours\n        : undefined,\n    term: defaultTerm || Term.Fall,\n    used: data?.section.used,\n    year: data?.section.year?.toString() ?? \"\",\n  };\n};\n\nconst createNewSectionFromInput = (data: SectionInput): Section => {\n  const location = locationCase(data.location);\n  const semesterType = convertToSemesterLength(\n    data.intensiveSemester || data.halfSemester || data.semesterLength,\n  );\n\n  const building = location ? location[0] : \"\";\n  const roomNumber = location ? location[1] : \"\";\n\n  return {\n    anticipatedSize: data.anticipatedSize,\n    comments: data.comments,\n    day10Used: data.day10Used,\n    endDate: \"\",\n    facultyHours: Number(data.facultyHours),\n    globalMax: data.globalMax,\n    instructionalMethod: data.instructionalMethod,\n    instructors: data.instructor,\n    letter: data.section,\n    localMax: data.localMax,\n    meetings: [\n      {\n        days: data.days as Day[],\n        duration: Number(data.duration),\n        location: {\n          building,\n          roomCapacity: data.roomCapacity,\n          roomNumber,\n        },\n        startTime: startTimeCase(data.startTime),\n      },\n    ],\n    semesterLength: semesterType,\n    startDate: \"\",\n    status: data.status,\n    studentHours: Number(data.studentHours),\n    term: data.term,\n    termStart: \"\",\n    used: data.used,\n    year: yearCase(data.year),\n  };\n};\n\nconst createNewCourseFromInput = (data: SectionInput): Course => {\n  return {\n    department: data.department,\n    name: data.name,\n    number: data.number,\n    prefixes: data.prefix,\n    // The newSection will be added later in insertSectionCourse()\n    sections: [],\n  };\n};\n\n// Deprecated, replaced by handleOldMeeting\n// TODO: Remove?\nexport const handleOldSection = (\n  oldData: CourseSectionMeeting | undefined,\n  newSection: Section,\n  removeOldSection: boolean,\n  schedule: Schedule,\n) => {\n  const oldSection = oldData?.section;\n  if (oldSection) {\n    // If the year, term, and semester length haven't changed...\n    if (\n      String(newSection.year) === String(oldSection.year) &&\n      newSection.term === oldSection.term &&\n      newSection.semesterLength === oldSection.semesterLength\n    ) {\n      // Update the new Section to match the date fields of the old Section\n      newSection.termStart = oldSection.termStart;\n      newSection.startDate = oldSection.startDate;\n      newSection.endDate = oldSection.endDate;\n    }\n\n    // Remove the old version of the Section\n    if (removeOldSection) {\n      removeSectionFromSchedule(oldData, schedule, oldSection);\n    }\n  }\n};\n\n// Deprecated, replaced by removeMeetingFromSchedule\n// TODO: Remove?\nexport const removeSectionFromSchedule = (\n  data: CourseSectionMeeting | undefined,\n  schedule: Schedule,\n  section: Section,\n) => {\n  const oldCourse = data?.course;\n  const courseIndex = indexOf(schedule.courses, oldCourse);\n  removeSection(schedule, section.letter, section.term, section.instructors, courseIndex);\n};\n\nexport const addFalseToDaysCheckboxList = (days?: Day[]): CheckboxDays => {\n  const weekdays = Object.values(Day).filter((day) => {\n    return Object.values(Weekday).includes(day);\n  });\n\n  if (!days) {\n    return new Array(weekdays.length).fill(false);\n  }\n\n  return map(weekdays, (wd: Day) => {\n    return days.includes(wd) ? wd : false;\n  });\n};\n\nexport const handleOldMeeting = (\n  oldData: CourseSectionMeeting | undefined,\n  newSection: Section,\n  newCourse: Course,\n  removeOldMeeting: boolean,\n  schedule: Schedule,\n) => {\n  const oldMeeting = oldData?.meeting;\n  let oldSection = oldData?.section;\n  let oldCourse = oldData?.course;\n  const courseIndex = indexOf(schedule.courses, oldCourse);\n  const sectionIndex = indexOf(oldCourse?.sections, oldSection);\n  if (oldSection) {\n    // If the year, term, and semester length haven't changed...\n    if (\n      String(newSection.year) === String(oldSection.year) &&\n      newSection.term === oldSection.term &&\n      newSection.semesterLength === oldSection.semesterLength\n    ) {\n      // Update the new Section to match the date fields of the old Section\n      newSection.termStart = oldSection.termStart;\n      newSection.startDate = oldSection.startDate;\n      newSection.endDate = oldSection.endDate;\n    }\n  }\n  // If the user pressed 'update' rather than 'add'...\n  if (removeOldMeeting && oldData) {\n    if (oldCourse) {\n      // Update identifying Course fields which were changed\n      oldCourse = updateIdentifyingCourseInfo(oldCourse, newCourse);\n      schedule.courses[courseIndex] = oldCourse;\n    }\n    if (oldSection) {\n      // Update identifying Section fields which were changed\n      oldSection = updateIdentifyingSectionInfo(oldSection, newSection);\n      schedule.courses[courseIndex].sections[sectionIndex] = oldSection;\n    }\n    if (oldMeeting) {\n      // Remove the old version of the Meeting\n      removeMeetingFromSchedule(\n        oldData,\n        schedule,\n        oldMeeting,\n        oldSection,\n        oldCourse,\n        newSection.isNonTeaching,\n      );\n    }\n  }\n};\n\nexport const removeMeetingFromSchedule = (\n  data: CourseSectionMeeting | undefined,\n  schedule: Schedule,\n  oldMeeting: Meeting | undefined,\n  oldSection: Section | undefined,\n  oldCourse: Course | undefined,\n  hardDelete = true,\n) => {\n  const courseIndex = indexOf(schedule.courses, oldCourse);\n  const sectionIndex = indexOf(schedule.courses[courseIndex].sections, oldSection);\n  const meetingIndex = indexOf(\n    schedule.courses[courseIndex].sections[sectionIndex].meetings,\n    oldMeeting,\n  );\n  const oldSectionHadMeetings = !!(oldSection && oldSection.meetings.length);\n  removeMeeting(\n    schedule,\n    meetingIndex,\n    sectionIndex,\n    courseIndex,\n    hardDelete,\n    oldSectionHadMeetings,\n  );\n};\n\nconst removeMeeting = (\n  schedule: Schedule,\n  meetingIndex: number,\n  sectionIndex: number,\n  courseIndex: number,\n  hardDelete: boolean,\n  oldSectionHadMeetings: boolean,\n) => {\n  // Remove the oldMeeting from the sections meetings\n  if (meetingIndex >= 0) {\n    schedule.courses[courseIndex].sections[sectionIndex].meetings.splice(meetingIndex, 1);\n  }\n  // If user pressed delete button and/or the old section had meetings before, delete section if no meetings left\n  if (\n    (hardDelete || oldSectionHadMeetings) &&\n    courseIndex >= 0 &&\n    sectionIndex >= 0 &&\n    !schedule.courses[courseIndex].sections[sectionIndex].meetings.length\n  ) {\n    schedule.courses[courseIndex].sections.splice(sectionIndex, 1);\n    // Delete course if no sections left\n    if (!schedule.courses[courseIndex].sections.length) {\n      schedule.courses.splice(courseIndex, 1);\n    }\n  }\n};\n","import { filter, forEach, sumBy } from \"lodash\";\nimport {\n  CourseSectionMeeting,\n  emptyMeeting,\n  getSectionName,\n  Schedule,\n  Section,\n  Term,\n} from \"utilities\";\nimport { Instructor } from \"utilities/interfaces\";\n\ntype hourKeys = \"fallHours\" | \"springHours\" | \"summerHours\" | \"totalHours\" | \"otherHours\";\ntype sectionKeys =\n  | \"fallCourseSections\"\n  | \"springCourseSections\"\n  | \"summerCourseSections\"\n  | \"otherDuties\";\n\n// Define a regex for the faculty load hours specifications added to the\n// Teaching Load tab's course/duty strings. See the test cases.\nexport const loadHoursRegEx = / \\(\\d+.?\\d*\\)(,|$)/;\n\nexport type FacultyRow = {\n  [key in hourKeys]?: number;\n} &\n  {\n    [key in sectionKeys]?: string;\n  } & {\n    faculty: string;\n    loadNotes?: string;\n    otherDuties?: string;\n  };\n\ninterface UpdateRowParams {\n  newRow: FacultyRow;\n  prevRow: FacultyRow;\n  section: Section;\n  sectionName: string;\n  termName?: \"fall\" | \"spring\" | \"summer\" | \"other\";\n}\n\nconst updateRow = ({ newRow, prevRow, section, sectionName, termName }: UpdateRowParams) => {\n  const termCourseSectionProp =\n    termName === \"other\" ? \"otherDuties\" : (`${termName}CourseSections` as sectionKeys);\n  const termHoursProp = `${termName}Hours` as hourKeys;\n  const facultyHours = section.facultyHours / section.instructors.length;\n  // Add faculty load hours using the format specified by loadHoursRegEx.\n  const sectionNameWithHours = `${sectionName} (${facultyHours})`;\n  if (prevRow) {\n    prevRow[termCourseSectionProp] = prevRow[termCourseSectionProp]\n      ? (prevRow[\n          termCourseSectionProp\n        ] = `${prevRow[termCourseSectionProp]}, ${sectionNameWithHours}`)\n      : (prevRow[termCourseSectionProp] = sectionNameWithHours);\n\n    prevRow[termHoursProp] = prevRow[termHoursProp]\n      ? Number(prevRow[termHoursProp]) + facultyHours\n      : facultyHours;\n  } else {\n    newRow[termCourseSectionProp] = sectionNameWithHours;\n    newRow[termHoursProp] = facultyHours;\n  }\n};\n\nexport const createTable = (schedule: Schedule): FacultyRow[] => {\n  const newTableData: FacultyRow[] = [];\n  forEach(schedule.courses, (course) => {\n    forEach(course.sections, (section) => {\n      const sectionName = getSectionName(course, section);\n      forEach(section.instructors, (instructor) => {\n        const newFacultyRow: FacultyRow = {\n          faculty: instructor,\n        };\n        const [prevAddedFacultyRow] = filter(newTableData, (data) => {\n          return data.faculty === instructor;\n        });\n        const updateArgs = {\n          newRow: newFacultyRow,\n          prevRow: prevAddedFacultyRow,\n          section,\n          sectionName,\n        };\n        if (section.isNonTeaching) {\n          updateRow({\n            ...updateArgs,\n            sectionName: section.instructionalMethod ?? \"\",\n            termName: \"other\",\n          });\n        } else {\n          switch (section.term) {\n            case Term.Fall:\n              updateRow({ ...updateArgs, termName: \"fall\" });\n              break;\n            case Term.Spring:\n              updateRow({ ...updateArgs, termName: \"spring\" });\n              break;\n            case Term.Summer:\n            case Term.Interim:\n              updateRow({ ...updateArgs, termName: \"summer\" });\n              break;\n            default:\n              // eslint-disable-next-line no-console\n              console.log(`Fell through case statement with value ${section.term}`);\n              break;\n          }\n        }\n        if (prevAddedFacultyRow) {\n          newTableData[newTableData.indexOf(prevAddedFacultyRow)] = prevAddedFacultyRow;\n        } else {\n          newTableData.push(newFacultyRow);\n        }\n      });\n    });\n  });\n  const sortedTableData = newTableData\n    .map((row) => {\n      return {\n        ...row,\n        totalHours:\n          (row.fallHours || 0) +\n          (row.springHours || 0) +\n          (row.summerHours || 0) +\n          (row.otherHours || 0),\n      };\n    })\n    .sort((a, b) => {\n      return b.totalHours - a.totalHours;\n    });\n  sortedTableData.push({\n    faculty: \"Total\",\n    fallHours: sumBy(sortedTableData, \"fallHours\"),\n    otherHours: sumBy(sortedTableData, \"otherHours\"),\n    springHours: sumBy(sortedTableData, \"springHours\"),\n    summerHours: sumBy(sortedTableData, \"summerHours\"),\n    totalHours: sumBy(sortedTableData, \"totalHours\"),\n  });\n  return sortedTableData;\n};\n\nexport const findSection = (\n  schedule: Schedule,\n  sectionName: string,\n  term: Term,\n): CourseSectionMeeting | null => {\n  if (!sectionName) {\n    return null;\n  }\n  const [prefix, number, letter] = sectionName.split(\"-\");\n\n  // Find the course with the prefix and number from the schedule courses array\n  const courses = filter(schedule.courses, (c) => {\n    return c.prefixes.includes(prefix) && c.number === number;\n  });\n  if (!courses.length) {\n    return null;\n  }\n  // Extract the course from the array\n  const [course] = courses;\n\n  // Find the section with the letter and term from the course sections array\n  const sections = filter(course.sections, (s) => {\n    return s.letter === letter && s.term === term;\n  });\n  if (!sections.length) {\n    return null;\n  }\n  // Extract the section from the array\n  const [section] = sections;\n\n  return {\n    course,\n    meeting: section.meetings ? section.meetings[0] : emptyMeeting,\n    section,\n  };\n};\n\nexport const getCourseSectionMeetingFromCell = (\n  schedule: Schedule,\n  cellValue: string,\n  cellHeader: string,\n): CSMIterableKeyMap => {\n  // Remove the load hours spec from the string before splitting on comma.\n  const sectionStrList = cellValue.split(loadHoursRegEx).join(\"\").split(\", \");\n  const courseSectionHeaders = [\n    \"Fall Course Sections\",\n    \"Spring Course Sections\",\n    \"Summer Course Sections\",\n  ];\n  if (courseSectionHeaders.includes(cellHeader)) {\n    let term: Term = Term.Fall;\n    switch (cellHeader) {\n      case \"Fall Course Sections\":\n        term = Term.Fall;\n        break;\n      case \"Spring Course Sections\":\n        term = Term.Spring;\n        break;\n      case \"Summer Course Sections\":\n        term = Term.Summer;\n        break;\n      default:\n        break;\n    }\n    let courseSectionMeeting = findSection(schedule, sectionStrList[0], term);\n    if (courseSectionMeeting === null) {\n      term = Term.Interim;\n      courseSectionMeeting = findSection(schedule, sectionStrList[0], Term.Interim);\n    }\n    return {\n      csm: courseSectionMeeting,\n      iterable: sectionStrList,\n      key: term,\n    };\n  }\n  return {\n    csm: null,\n    iterable: sectionStrList,\n    key: Term.Fall,\n  };\n};\n\nexport const findNonTeachingLoad = (\n  schedule: Schedule,\n  nonTeachingActivity: string,\n  instructor: Instructor,\n): CourseSectionMeeting | null => {\n  if (!nonTeachingActivity) {\n    return null;\n  }\n\n  const nonTeachingLoadsArray = filter(schedule.courses, (c) => {\n    return c.prefixes.length === 0 && c.number === \"\";\n  });\n  if (!nonTeachingLoadsArray.length) {\n    return null;\n  }\n  const [nonTeachingLoads] = nonTeachingLoadsArray;\n\n  const nonTeachingLoadArray = filter(nonTeachingLoads.sections, (s) => {\n    return (\n      s.isNonTeaching === true &&\n      s.instructionalMethod === nonTeachingActivity &&\n      s.instructors.includes(instructor)\n    );\n  });\n  if (!nonTeachingLoadArray.length) {\n    return null;\n  }\n  const [nonTeachingLoad] = nonTeachingLoadArray;\n\n  return {\n    course: nonTeachingLoads,\n    meeting: emptyMeeting,\n    section: nonTeachingLoad,\n  };\n};\n\n/**\n * A specific CSM with with corresponding iterable\n *   and key.\n *\n * @export\n * @interface CSMIterableKeyMap\n */\nexport interface CSMIterableKeyMap {\n  csm: CourseSectionMeeting | null;\n  iterable: string[];\n  key: string;\n}\n\nexport const getNonTeachingLoadsFromCell = (\n  schedule: Schedule,\n  cellValue: string,\n  instructor: Instructor,\n): CSMIterableKeyMap => {\n  // Remove the load hours spec from the string before splitting on comma.\n  const nonTeachingLoadStrList = cellValue.split(loadHoursRegEx).join(\"\").split(\", \");\n  const courseSectionMeeting = findNonTeachingLoad(schedule, nonTeachingLoadStrList[0], instructor);\n\n  return {\n    csm: courseSectionMeeting,\n    iterable: nonTeachingLoadStrList,\n    key: instructor,\n  };\n};\n\n/**\n * Components with this reference will have a function handleModalOpen which\n *   can be called.\n *\n * @export\n * @type\n */\nexport type UpdateModalPaginationRef = {\n  handleModalOpen: ({ csm, iterable, key }: CSMIterableKeyMap) => void;\n};\n","import forEach from \"lodash/forEach\";\nimport { Schedule } from \"utilities\";\n\n// Get list of unique professors.\nexport const getProfs = (schedule: Schedule): string[] => {\n  const professorsSet = new Set<string>();\n  forEach(schedule.courses, (course) => {\n    forEach(course.sections, (section) => {\n      forEach(section.instructors, (prof) => {\n        professorsSet.add(prof);\n      });\n    });\n  });\n  return [...professorsSet];\n};\n","import { Schedule } from \"utilities\";\n\n// get list of unique classes\nexport const getClasses = (schedule: Schedule): string[] => {\n  const coursesSet = new Set<string>();\n  schedule.courses.forEach((course) => {\n    const {\n      number,\n      prefixes: [firstPrefix],\n      sections,\n    } = course;\n    sections.forEach((section) => {\n      const { letter } = section;\n      coursesSet.add(`${firstPrefix}${number}${letter}`);\n    });\n  });\n  return [...coursesSet];\n};\n","import forEach from \"lodash/forEach\";\nimport { Schedule } from \"utilities\";\nimport { getLocationString } from \"./scheduleService\";\n\n// Get list of unique rooms.\nexport const getRooms = (schedule: Schedule): string[] => {\n  const roomsSet = new Set<string>();\n  forEach(schedule.courses, (course) => {\n    forEach(course.sections, (section) => {\n      forEach(section.meetings, ({ location }) => {\n        roomsSet.add(getLocationString(location));\n      });\n    });\n  });\n  return [...roomsSet];\n};\n","import { array, number, object, string } from \"yup\";\n\n/*\nhelper for yup transform function\nRef: https://github.com/jquense/yup/issues/298#issuecomment-559017330\n */\nconst emptyStringToNull = <T>(value: T, originalValue: T) => {\n  if (typeof originalValue === \"string\" && originalValue === \"\") {\n    return null;\n  }\n  return value;\n};\n\n/*\n  Removes unchecked days from the list. Helper for yup\n*/\nexport const removeUncheckedValues = (valueArr: string[]) => {\n  return valueArr.filter((value: boolean | string) => {\n    return value;\n  });\n};\n\n/*\n  Tests that a number is an integer or a decimal.\n  Ref: https://stackoverflow.com/questions/59269772/formik-yup-how-to-check-is-decimal-number\n*/\nconst decimalRegex = (value: number | null | undefined): boolean => {\n  return Boolean(`${value || \"\"}`.match(/^\\d*\\.?\\d*$/)) || false;\n};\n\n/* A schema to provide form validation for the AddSectionPopover.\nNOTE: fields with default values are not check: semester and time. */\nexport const addSectionSchema = object().shape({\n  anticipatedSize: number()\n    .typeError(\"global max must be a number\")\n    .integer()\n    .min(0)\n    .transform(emptyStringToNull)\n    .nullable(),\n  day10Used: number()\n    .typeError(\"day 10 used must be a number\")\n    .integer()\n    .min(0)\n    .transform(emptyStringToNull)\n    .nullable(),\n  days: array().transform(removeUncheckedValues),\n  department: string().nullable(),\n  duration: number()\n    .typeError(\"duration must be a number\")\n    .integer()\n    .min(0)\n    .transform(emptyStringToNull)\n    .nullable(),\n  facultyHours: number()\n    .required()\n    .typeError(\"faculty hours must be a number\")\n    .min(0)\n    .test(\"is-decimal\", \"invalid decimal\", decimalRegex),\n  globalMax: number()\n    .typeError(\"global max must be a number\")\n    .integer()\n    .min(0)\n    .transform(emptyStringToNull)\n    .nullable(),\n  instructionalMethod: string().nullable(),\n  instructor: array().of(string()).required(),\n  localMax: number()\n    .typeError(\"global max must be a number\")\n    .integer()\n    .min(0)\n    .transform(emptyStringToNull)\n    .nullable(),\n  location: string().nullable(),\n  name: string().nullable(),\n  number: string().required().typeError(\"number is a required field\"),\n  prefix: array().of(string().uppercase()).required().typeError(\"prefix is a required field\"),\n  roomCapacity: number()\n    .typeError(\"room capacity must be a number\")\n    .positive()\n    .integer()\n    .min(0)\n    .transform(emptyStringToNull)\n    .nullable(),\n  section: string().required().uppercase().typeError(\"section is a required field\"),\n  status: string().nullable(),\n  studentHours: number()\n    .required()\n    .typeError(\"student hours must be a number\")\n    .min(0)\n    .test(\"is-decimal\", \"invalid decimal\", decimalRegex),\n  used: number()\n    .typeError(\"used must be a number\")\n    .integer()\n    .min(0)\n    .transform(emptyStringToNull)\n    .nullable(),\n  year: number()\n    .typeError(\"year must be a number\")\n    .positive()\n    .integer()\n    .min(1970)\n    .transform(emptyStringToNull)\n    .nullable(),\n});\n\nexport const addNonTeachingLoadSchema = object().shape({\n  activity: string().required(),\n  facultyHours: number()\n    .required()\n    .typeError(\"faculty hours must be a number\")\n    .positive()\n    .test(\"is-decimal\", \"invalid decimal\", decimalRegex)\n    .transform(emptyStringToNull)\n    .nullable(),\n  instructor: array().of(string()).required(),\n  terms: array().transform(removeUncheckedValues),\n});\n","import { voidFn } from \"utilities\";\nimport { AppAction, AppState, ColorBy, SchedulizerTab, Term } from \"utilities/interfaces\";\nimport { getClasses, getDepts, getMinAndMaxTimes, getProfs, getRooms } from \"utilities/services\";\n\n/*\n  Provides a function to perform multiple setState updates\n  at once that depend on each other.\n  Can be initialized with a callback to be performed on\n  any completed action.\n*/\nexport const reducer = (actionCallback: (item: AppState) => void = voidFn) => {\n  return (state: AppState, action: AppAction): AppState => {\n    let newState: AppState;\n    switch (action.type) {\n      case \"setScheduleData\": {\n        let { schedule } = action.payload;\n        schedule = schedule || { courses: [] };\n        const times = getMinAndMaxTimes(schedule);\n        newState = {\n          ...state,\n          classes: getClasses(schedule),\n          departments: getDepts(schedule),\n          professors: getProfs(schedule),\n          rooms: getRooms(schedule),\n          schedule,\n          slotMaxTime: times.maxTime,\n          slotMinTime: times.minTime,\n        };\n        break;\n      }\n      case \"setSelectedTerm\": {\n        let { selectedTerm } = action.payload;\n        selectedTerm = selectedTerm || Term.Fall;\n        newState = { ...state, selectedTerm };\n        break;\n      }\n      case \"setFileUrl\": {\n        let { fileUrl } = action.payload;\n        fileUrl = fileUrl || \"\";\n        newState = { ...state, fileUrl };\n        break;\n      }\n      case \"setColorBy\": {\n        let { colorBy } = action.payload;\n        colorBy = colorBy || ColorBy.Level;\n        newState = { ...state, colorBy };\n        break;\n      }\n      case \"setSchedulizerTab\": {\n        let { schedulizerTab } = action.payload;\n        schedulizerTab = schedulizerTab || SchedulizerTab.Faculty;\n        newState = { ...state, schedulizerTab };\n        break;\n      }\n      default:\n        return state;\n    }\n    actionCallback(newState);\n    return newState;\n  };\n};\n","module.exports = __webpack_public_path__ + \"static/media/CalvinUniv-vert-full-color-inverse.255efbf6.png\";","export * from \"./constants\";\n// export * from \"./contexts\";\nexport * from \"./helpers\";\nexport * from \"./hooks\";\nexport * from \"./interfaces\";\nexport * from \"./reducers\";\nexport * from \"./services\";\n","import { Course, Meeting, Section, Term } from \"./interfaces\";\n\nexport const INITIAL_DATE = \"2000-01-02\";\n\nexport const emptyCourse: Course = {\n  name: \"\",\n  number: \"\",\n  prefixes: [],\n  sections: [],\n};\n\nexport const emptyMeeting: Meeting = {\n  days: [],\n  duration: 0,\n  isConflict: false,\n  location: { building: \"\", roomNumber: \"\" },\n  startTime: \"\",\n};\n\nexport const emptySection: Section = {\n  facultyHours: -1,\n  instructors: [],\n  letter: \"\",\n  meetings: [],\n  studentHours: -1,\n  term: Term.Fall,\n};\n","import { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Box, Button, Grid, Typography } from \"@material-ui/core\";\nimport { GridItemAutocomplete, GridItemCheckboxGroup, GridItemTextField } from \"components\";\nimport { isEqual } from \"lodash\";\nimport moment from \"moment\";\nimport React, { useContext, useEffect } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport {\n  addFalseToTermsCheckboxList,\n  addNonTeachingLoadSchema,\n  mapNonTeachingLoadValuesToInput,\n  NonTeachingLoadInput,\n  PopoverValueProps,\n  removeUncheckedValues,\n  Term,\n  useAddSectionToSchedule,\n  useDeleteMeetingFromSchedule,\n} from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\nimport \"./AddNonTeachingLoadPopover.scss\";\n\nconst SPACING = 2;\n\nexport const AddNonTeachingLoadPopover = ({ values }: PopoverValueProps) => {\n  const { addNonTeachingLoadToSchedule } = useAddSectionToSchedule();\n  const {\n    appState: { professors },\n  } = useContext(AppContext);\n\n  const onSubmit = (removeOldActivity: boolean) => {\n    return (data: NonTeachingLoadInput) => {\n      addNonTeachingLoadToSchedule(data, values, removeOldActivity);\n    };\n  };\n\n  const methods = useForm<NonTeachingLoadInput>({\n    criteriaMode: \"all\",\n    resolver: yupResolver(addNonTeachingLoadSchema),\n  });\n\n  const { deleteMeetingFromSchedule } = useDeleteMeetingFromSchedule();\n\n  const deleteMeeting = () => {\n    return () => {\n      deleteMeetingFromSchedule(values);\n    };\n  };\n\n  const { reset, getValues } = methods;\n\n  useEffect(() => {\n    const inputValues = mapNonTeachingLoadValuesToInput(values);\n    const formValues = getValues();\n    inputValues.terms = removeUncheckedValues(inputValues.terms as string[]) as Term[];\n\n    // Update the form values if they have changed\n    if (!isEqual(inputValues, formValues)) {\n      reset(inputValues);\n    }\n  }, [reset, getValues, values]);\n\n  return (\n    <FormProvider {...methods}>\n      <form className=\"popover-container\">\n        <Box>\n          <Typography className=\"popover-title\" variant=\"h4\">\n            {values ? \"Update Non-Teaching Activity\" : \"Add Non-Teaching Activity\"}\n          </Typography>\n        </Box>\n        <Grid container spacing={SPACING}>\n          <GridItemTextField label=\"Activity\" />\n        </Grid>\n        <Grid container spacing={SPACING}>\n          <GridItemAutocomplete\n            defaultValue={values?.section.instructors}\n            label=\"Instructor\"\n            multiple\n            options={[...professors].sort()}\n          />\n        </Grid>\n        <Grid container spacing={SPACING}>\n          <GridItemTextField label=\"Faculty Hours\" />\n        </Grid>\n        <Grid container spacing={SPACING}>\n          <GridItemCheckboxGroup\n            initialValue={addFalseToTermsCheckboxList(values?.section.term as Term[]) as string[]}\n            label=\"Terms\"\n            options={Object.values(Term)}\n          />\n        </Grid>\n        <Grid className=\"popover-buttons\" item>\n          <Button\n            color=\"primary\"\n            onClick={methods.handleSubmit(onSubmit(values !== undefined))}\n            variant=\"contained\"\n          >\n            {values ? \"Update Activity\" : \"Add Activity\"}\n          </Button>\n          {values && (\n            <Button\n              color=\"secondary\"\n              onClick={methods.handleSubmit(deleteMeeting())}\n              variant=\"contained\"\n            >\n              Delete Activity\n            </Button>\n          )}\n          {values?.section.timestamp && (\n            <Typography variant=\"caption\">\n              Last Edited: {moment(values?.section.timestamp).format(\"MMMM Do YYYY, h:mm:ss a\")}\n            </Typography>\n          )}\n        </Grid>\n      </form>\n    </FormProvider>\n  );\n};\n\nAddNonTeachingLoadPopover.defaultProps = {\n  values: undefined,\n};\n","import { Button, ButtonProps, IconButton, Popover } from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport { bindPopover, bindTrigger, usePopupState } from \"material-ui-popup-state/hooks\";\nimport React from \"react\";\nimport \"./PopoverButton.scss\";\n\ninterface PopoverButton extends ButtonProps {\n  buttonTitle?: string;\n  isIcon?: boolean;\n  minWidth?: string;\n  popupId?: string;\n}\n\nexport const PopoverButton = (props: PopoverButton) => {\n  const { isIcon, popupId, buttonTitle, minWidth, children, ...buttonProps } = props;\n  const popupState = usePopupState({\n    popupId,\n    variant: \"popover\",\n  });\n\n  return (\n    <>\n      {isIcon ? (\n        <IconButton {...bindTrigger(popupState)}>\n          <Add />\n        </IconButton>\n      ) : (\n        <Button color=\"secondary\" variant=\"contained\" {...buttonProps} {...bindTrigger(popupState)}>\n          {buttonTitle}\n        </Button>\n      )}\n      <Popover\n        {...bindPopover(popupState)}\n        anchorOrigin={{\n          horizontal: \"left\",\n          vertical: \"bottom\",\n        }}\n        PaperProps={{ style: { minWidth } }}\n        transformOrigin={{\n          horizontal: \"right\",\n          vertical: \"top\",\n        }}\n      >\n        {children}\n      </Popover>\n    </>\n  );\n};\n\nPopoverButton.defaultProps = {\n  buttonTitle: \"Add Section\",\n  isIcon: true,\n  minWidth: \"500px\",\n  popupId: \"addSection\",\n};\n","import { ButtonProps } from \"@material-ui/core\";\nimport { AddSectionPopover } from \"components\";\nimport React from \"react\";\nimport { PopoverButton } from \"../PopoverButton\";\nimport \"./AddSectionButton.scss\";\n\ninterface AddSectionButton extends ButtonProps {\n  isIcon?: boolean;\n}\n\nexport const AddSectionButton = (props: AddSectionButton) => {\n  const { isIcon } = props;\n\n  return (\n    <PopoverButton isIcon={isIcon}>\n      <AddSectionPopover />\n    </PopoverButton>\n  );\n};\n\nAddSectionButton.defaultProps = {\n  isIcon: true,\n};\n","import { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Box, Button, Grid, InputAdornment, Typography } from \"@material-ui/core\";\nimport {\n  GridItemAutocomplete,\n  GridItemCheckboxGroup,\n  GridItemRadioGroup,\n  GridItemTextField,\n} from \"components\";\nimport { isEqual, isNil, omitBy } from \"lodash\";\nimport moment from \"moment\";\nimport React, { ChangeEvent, useContext, useEffect, useState } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport {\n  addFalseToDaysCheckboxList,\n  addSectionSchema,\n  convertFromSemesterLength,\n  emptyMeeting,\n  getCourseNames,\n  getInstructionalMethods,\n  getNumbers,\n  getPrefixes,\n  getSectionLetters,\n  mapInputToInternalTypes,\n  mapInternalTypesToInput,\n  SectionInput,\n  useAddSectionToSchedule,\n  useDeleteMeetingFromSchedule,\n} from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\nimport {\n  Day,\n  Half,\n  Intensive,\n  PopoverValueProps,\n  SemesterLength,\n  SemesterLengthOption,\n  Term,\n  Weekday,\n} from \"utilities/interfaces\";\nimport \"./AddSectionPopover.scss\";\n\nconst SPACING = 2;\n\nconst transformDataToTrueSectionInput = (data: SectionInput): SectionInput => {\n  const dataCourseSection = mapInputToInternalTypes(data);\n  let newMeeting = emptyMeeting;\n  if (dataCourseSection.newSection.meetings.length) {\n    [newMeeting] = dataCourseSection.newSection.meetings;\n  }\n  return mapInternalTypesToInput({\n    course: dataCourseSection.newCourse,\n    meeting: newMeeting,\n    section: dataCourseSection.newSection,\n  });\n};\n\n/* A form to input information to add a schedule */\nexport const AddSectionPopover = ({ values }: PopoverValueProps) => {\n  const {\n    appState: { schedule, rooms, professors },\n    setIsCSVLoading,\n  } = useContext(AppContext);\n\n  const methods = useForm<SectionInput>({\n    criteriaMode: \"all\",\n    defaultValues: mapInternalTypesToInput(values),\n    resolver: yupResolver(addSectionSchema),\n  });\n  const { reset } = methods;\n  const [semesterLength, setSemesterLength] = useState<SemesterLengthOption>(\n    convertFromSemesterLength(values?.section.semesterLength),\n  );\n  const { addSectionToSchedule } = useAddSectionToSchedule();\n  const { deleteMeetingFromSchedule } = useDeleteMeetingFromSchedule();\n\n  const onSubmit = (removeOldMeeting: boolean) => {\n    return async (data: SectionInput) => {\n      const dataTransformed = transformDataToTrueSectionInput(data);\n      // Submit the data if any of the form values were updated (omitting null and undefined values)\n      if (\n        !isEqual(omitBy(dataTransformed, isNil), omitBy(mapInternalTypesToInput(values), isNil))\n      ) {\n        await addSectionToSchedule(data, values, removeOldMeeting);\n      } else {\n        // Close the popover\n        setIsCSVLoading(true);\n        setIsCSVLoading(false);\n      }\n    };\n  };\n\n  const deleteMeeting = () => {\n    return () => {\n      deleteMeetingFromSchedule(values);\n    };\n  };\n\n  const onSemesterLengthChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSemesterLength(e.target.value as SemesterLengthOption);\n  };\n\n  useEffect(() => {\n    setSemesterLength(convertFromSemesterLength(values?.section.semesterLength));\n    const inputValues = mapInternalTypesToInput(values);\n    reset(inputValues);\n  }, [reset, values]);\n\n  const isHalfSemester = semesterLength === SemesterLengthOption.HalfSemester;\n  const isIntensiveSemester = semesterLength === SemesterLengthOption.IntensiveSemester;\n  const isCustomSemester = semesterLength === SemesterLengthOption.CustomSemester;\n  const title = values ? \"Update Section\" : \"Add Section\";\n\n  let defaultTerm = values?.section.term;\n  if (Array.isArray(defaultTerm)) {\n    [defaultTerm] = defaultTerm;\n  }\n\n  const buttons = () => {\n    const addTitle = values ? \"Add New Section\" : \"Add Section\";\n    return (\n      <>\n        {values && (\n          <Button\n            className=\"update-button\"\n            color=\"primary\"\n            onClick={methods.handleSubmit(onSubmit(true))}\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Update Section\n          </Button>\n        )}\n        <Button\n          className=\"add-button\"\n          color=\"primary\"\n          onClick={methods.handleSubmit(onSubmit(false))}\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          {addTitle}\n        </Button>\n        {values && (\n          <Button\n            className=\"delete-button\"\n            color=\"secondary\"\n            onClick={methods.handleSubmit(deleteMeeting())}\n            variant=\"contained\"\n          >\n            Delete Section\n          </Button>\n        )}\n      </>\n    );\n  };\n\n  // TODO: Make fields for termStart, startDate, and endDate?\n  return (\n    <FormProvider {...methods}>\n      <form className=\"popover-container\">\n        <Box mb={SPACING}>\n          <Typography className=\"popover-title\" variant=\"h4\">\n            {title}\n          </Typography>\n        </Box>\n        <Grid container spacing={SPACING}>\n          <GridItemTextField label=\"Department\" textFieldProps={{ autoFocus: true }} />\n        </Grid>\n        <Grid container spacing={SPACING}>\n          <GridItemAutocomplete label=\"Prefix\" multiple options={getPrefixes(schedule)} />\n          <GridItemAutocomplete label=\"Number\" options={getNumbers(schedule)} />\n          <GridItemAutocomplete label=\"Section\" options={getSectionLetters(schedule)} />\n          <GridItemAutocomplete label=\"Name\" options={getCourseNames(schedule)} />\n          <GridItemAutocomplete\n            label=\"Instructional Method\"\n            options={getInstructionalMethods(schedule)}\n          />\n        </Grid>\n        <Grid container spacing={SPACING}>\n          <GridItemAutocomplete label=\"Instructor\" multiple options={[...professors].sort()} />\n          <GridItemAutocomplete label=\"Location\" options={[...rooms].sort()} />\n          <GridItemTextField label=\"Room Capacity\" />\n          <GridItemTextField label=\"Faculty Hours\" />\n          <GridItemTextField label=\"Student Hours\" />\n        </Grid>\n        <Grid container spacing={SPACING}>\n          <GridItemTextField label=\"Anticipated Size\" />\n          <GridItemTextField label=\"Used\" />\n          <GridItemTextField label=\"Day 10 Used\" />\n          <GridItemTextField label=\"Local Max\" />\n          <GridItemTextField label=\"Global Max\" />\n        </Grid>\n        <Grid container spacing={SPACING}>\n          <GridItemTextField\n            label=\"Start Time\"\n            textFieldProps={{ fullWidth: true, type: \"time\" }}\n          />\n          <GridItemTextField\n            label=\"Duration\"\n            textFieldProps={{\n              InputProps: {\n                endAdornment: <InputAdornment position=\"end\">min</InputAdornment>,\n              },\n            }}\n          />\n          <GridItemTextField label=\"Year\" />\n          <GridItemTextField label=\"Status\" />\n          {/* This empty item just fills space */}\n          <Grid item xs />\n        </Grid>\n        <Grid container spacing={SPACING}>\n          <GridItemCheckboxGroup\n            initialValue={addFalseToDaysCheckboxList(values?.meeting?.days) as string[]}\n            label=\"Days\"\n            options={Object.values(Day).filter((day) => {\n              return Object.values(Weekday).includes(day);\n            })}\n          />\n          <GridItemRadioGroup label=\"Term\" options={Object.values(Term)} />\n          <GridItemRadioGroup\n            label=\"Semester Length\"\n            onChange={onSemesterLengthChange}\n            options={Object.values(SemesterLengthOption)}\n          />\n          <Grid item xs>\n            {isHalfSemester && (\n              <GridItemRadioGroup\n                label=\"Half Semester\"\n                options={Object.values(SemesterLength).filter((h) => {\n                  return Object.values(Half).includes(h);\n                })}\n              />\n            )}\n            {isIntensiveSemester && (\n              <GridItemRadioGroup\n                label=\"Intensive Semester\"\n                options={Object.values(SemesterLength).filter((i) => {\n                  return Object.values(Intensive).includes(i);\n                })}\n              />\n            )}\n            {isCustomSemester && (\n              <Grid container direction=\"column\" spacing={SPACING}>\n                {/* TODO: add support for custom */}\n                <GridItemTextField\n                  label=\"Start Date\"\n                  textFieldProps={{\n                    defaultValue: \"2020-20-20\",\n                    disabled: true,\n                    fullWidth: true,\n                    // type: \"date\",\n                  }}\n                />\n                <Typography variant=\"caption\">\n                  Custom semester lengths are not supported yet.\n                </Typography>\n              </Grid>\n            )}\n          </Grid>\n          <GridItemTextField\n            label=\"Notes\"\n            textFieldProps={{ multiline: true, name: \"comments\", rows: 4 }}\n            value={values?.section.comments}\n          />\n        </Grid>\n        <Grid alignItems=\"flex-end\" container justify=\"space-between\">\n          <Grid item>\n            <Typography variant=\"caption\">\n              Tip: use <b>tab</b> and <b>shift + tab</b> to navigate, <b>space bar</b> to select\n              days, <b>arrow keys</b> to select term and others, and <b>return</b> to submit.\n            </Typography>\n          </Grid>\n          <Grid className=\"popover-buttons\" item>\n            {buttons()}\n            {values?.section.timestamp && (\n              <Typography variant=\"caption\">\n                Last Edited: {moment(values?.section.timestamp).format(\"MMMM Do YYYY, h:mm:ss a\")}\n              </Typography>\n            )}\n          </Grid>\n        </Grid>\n      </form>\n    </FormProvider>\n  );\n};\n\nAddSectionPopover.defaultProps = {\n  values: undefined,\n};\n","import { Grid } from \"@material-ui/core\";\nimport React, { PropsWithChildren, useCallback, useState } from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport ReactVisibilitySensor from \"react-visibility-sensor\";\nimport \"./AnimateShowAndHide.scss\";\n\ninterface AnimateShowAndHide {\n  /* complete the animation once */\n  once?: boolean;\n}\n\n/* A component that animates children vertically when it goes into scroll view.\n  References:\n  - https://codesandbox.io/embed/zn2q57vn13\n  - https://stackoverflow.com/questions/56928771/reactjs-react-countup-visible-only-once-in-visibility-sensor\n*/\nexport const AnimateShowAndHide = ({ children, once }: PropsWithChildren<AnimateShowAndHide>) => {\n  const [isActive, setIsActive] = useState(true);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const springProps = useSpring({\n    config: { friction: 200, mass: 5, tension: 2000 },\n    from: { height: 0, opacity: 0, x: 20 },\n    height: isVisible ? 110 : 0,\n    opacity: isVisible ? 1 : 0,\n    x: isVisible ? 0 : 20,\n  });\n\n  const onVisibilityChange = useCallback(\n    (isElemVisible: boolean) => {\n      /* Animate once */\n      if (once && isElemVisible) {\n        setIsVisible(true);\n        setIsActive(false);\n        /* Animate on every view */\n      } else {\n        setIsVisible(isElemVisible);\n      }\n    },\n    [once],\n  );\n\n  const { height } = springProps;\n\n  return (\n    <ReactVisibilitySensor active={isActive} onChange={onVisibilityChange}>\n      <Grid className=\"show-and-hide-main\" container justify=\"flex-start\">\n        <animated.div className=\"show-and-hide-text\" style={springProps}>\n          <animated.div style={{ height }}>{children}</animated.div>\n        </animated.div>\n      </Grid>\n    </ReactVisibilitySensor>\n  );\n};\n\nAnimateShowAndHide.defaultProps = {\n  once: true,\n};\n","import { NewTabLink } from \"components\";\nimport Image from \"material-ui-image\";\nimport React from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport { TeamMember } from \"utilities\";\nimport { calc, trans } from \".\";\nimport \"./Spring3DHover.scss\";\n\ninterface Spring3DCard {\n  member: TeamMember;\n}\n\n/* Transforms and Reanimates an image when a mouse is hovered.\n  Ref: https://codesandbox.io/embed/rj998k4vmm\n*/\nexport const Spring3DHover = ({ member }: Spring3DCard) => {\n  const [springProps, set] = useSpring(() => {\n    return { config: { friction: 40, mass: 5, tension: 350 }, xys: [0, 0, 1] };\n  });\n\n  const { xys } = springProps;\n  const { photo, website, name } = member;\n\n  return (\n    <div className=\"spring-3d-wrapper\">\n      <NewTabLink href={website}>\n        <animated.div\n          className=\"spring-3d-content\"\n          onMouseLeave={() => {\n            return set({ xys: [0, 0, 1] });\n          }}\n          onMouseMove={({ clientX: x, clientY: y }) => {\n            return set({ xys: calc(x, y) });\n          }}\n          style={{ transform: xys.interpolate(trans as never) }}\n        >\n          <Image\n            alt={`image of ${name}`}\n            className=\"spring-3d-image\"\n            src={photo}\n            style={{ borderRadius: \"100%\" }}\n          />\n        </animated.div>\n      </NewTabLink>\n    </div>\n  );\n};\n","/* Referenced: https://codesandbox.io/embed/rj998k4vmm */\n\n/* Calculates the y, x, and scale for the transformation. */\nexport const calc = (x: number, y: number) => {\n  // TODO: This makes only things in the center perfectly transform.\n  // I can't figure out the math to fix this yet\n  // Need to offset for where the div is placed on the screen.\n  return [-(y - window.innerHeight / 2) / 50, (x - window.innerWidth / 2) / 50, 1.1];\n};\n\n/* Transforms the image */\nexport const trans = (x: number, y: number, s: number): string => {\n  return `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n};\n","import React, { FC, PropsWithChildren } from \"react\";\nimport { Literal, Static, Union } from \"runtypes\";\nimport { createFC, getElements } from \"utilities\";\n\ninterface AsyncComponent {\n  isLoading: boolean;\n}\n\n// Define the runtype\nconst SubComponents = Union(Literal(\"Loading\"), Literal(\"Loaded\"));\n\n// Some boiler plate to get useable types.\ntype SubComponents = Static<typeof SubComponents>;\ntype AsyncSubComponents = { [key in SubComponents]: FC<{}> };\n\n/*\n  Show a loading state while waiting on a async function to finish.\n\n  Usage:\n  <AsyncComponent isLoading={boolean}>\n    <AsyncComponent.Loading>\n      content to display while loading\n    </AsyncComponent.Loading>\n    <AsyncComponent.Loaded>\n      content to display when loading is complete\n    </AsyncComponent.Loaded>\n  </AsyncComponent>\n\n  References:\n    - https://stackoverflow.com/a/56953600/9931154\n    - https://dev.to/shayanypn/buckle-with-react-sub-component-10ll\n*/\nexport const AsyncComponent: FC<AsyncComponent> & AsyncSubComponents = ({\n  children,\n  isLoading,\n}: PropsWithChildren<AsyncComponent>) => {\n  const { Loading, Loaded } = getElements(children, SubComponents);\n\n  return <>{isLoading ? <>{Loading}</> : <>{Loaded}</>}</>;\n};\n\n// Define sub-components.\nAsyncComponent.Loading = createFC(\"Loading\");\nAsyncComponent.Loaded = createFC(\"Loaded\");\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport FullCalendar from \"01/../@fullcalendar/react\";\nimport { CalendarOptions } from \"@fullcalendar/common\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport React from \"react\";\nimport { INITIAL_DATE } from \"utilities/constants\";\nimport \"./Calendar.scss\";\n\nexport const Calendar = (props: CalendarOptions) => {\n  return (\n    <>\n      <FullCalendar {...props} />\n    </>\n  );\n};\n\nCalendar.defaultProps = {\n  allDaySlot: false,\n  dayHeaderFormat: { weekday: \"short\" },\n  droppable: false,\n  editable: false, // TODO: Change to true if we can lock section meeting times\n  headerToolbar: false,\n  height: \"auto\",\n  initialDate: INITIAL_DATE,\n  initialView: \"timeGridWeek\",\n  nowIndicator: false,\n  plugins: [interactionPlugin, timeGridPlugin],\n  selectable: true,\n  slotMaxTime: \"22:00:00\",\n  slotMinTime: \"6:00:00\",\n  weekends: false,\n};\n","import { IconButton, Tooltip } from \"@material-ui/core\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport React from \"react\";\nimport { useFieldArrayFormContext } from \"utilities\";\n\ninterface DeleteFieldButtonProps {\n  index: number;\n}\n\n/**\n * Deletes a row in the field array at a specific index.\n */\nexport const DeleteFieldButton = ({ index }: DeleteFieldButtonProps) => {\n  const { remove } = useFieldArrayFormContext();\n\n  return (\n    <div>\n      <Tooltip title=\"Remove\">\n        <IconButton\n          aria-label=\"remove\"\n          onClick={() => {\n            remove(index);\n          }}\n        >\n          <HighlightOffIcon />\n        </IconButton>\n      </Tooltip>\n    </div>\n  );\n};\n","import { Box, TextField } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport { useFieldArrayFormContext } from \"utilities\";\n\ninterface FieldArrayFieldProps {\n  fieldIndex: string;\n  index: number;\n}\n\n/**\n * A single field in a field array. There could be multiple fields per row\n *   or just one.\n */\nexport const FieldArrayField = ({ index, fieldIndex }: FieldArrayFieldProps) => {\n  const { control, titleCaseName: name, defaultValue = {} } = useFieldArrayFormContext();\n\n  return (\n    <Box m={1}>\n      <Controller\n        as={<TextField label={fieldIndex} variant=\"outlined\" />}\n        control={control}\n        defaultValue={defaultValue[fieldIndex]}\n        name={`${name}[${index}][${fieldIndex}]`}\n      />\n    </Box>\n  );\n};\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useFieldArrayFormContext } from \"utilities\";\nimport { DeleteFieldButton } from \"../DeleteFieldButton\";\nimport { FieldArrayField } from \"../FieldArrayField\";\n\n/**\n * Creates one row in the FieldArrayForm. Renders multiple fields\n *   if there are more keys in the original object.\n */\nexport const FieldArrayFields = () => {\n  const { fields } = useFieldArrayFormContext();\n\n  return (\n    <>\n      {fields.map((field, index) => {\n        return (\n          <Grid key={field.id} container justify=\"center\">\n            {Object.keys(field)\n              .filter((f) => {\n                return f !== \"id\";\n              })\n              .map((key) => {\n                return <FieldArrayField key={key} fieldIndex={key} index={index} />;\n              })}\n            <DeleteFieldButton index={index} />\n          </Grid>\n        );\n      })}\n    </>\n  );\n};\n","import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useFieldArrayFormContext } from \"utilities\";\n\n/** Buttons at the bottom of the FieldArrayForm that allow the\n *   user to add more rows to the form and submit it.\n */\nexport const FieldArrayFormActionButtons = () => {\n  const { append, defaultValue, titleCaseName } = useFieldArrayFormContext();\n\n  return (\n    <>\n      <Button\n        color=\"secondary\"\n        onClick={() => {\n          append(defaultValue || {});\n        }}\n        style={{ margin: \"1em\" }}\n        type=\"button\"\n        variant=\"outlined\"\n      >\n        Add {titleCaseName?.slice(0, -1)}\n      </Button>\n\n      <Button color=\"primary\" style={{ margin: \"1em\" }} type=\"submit\" variant=\"outlined\">\n        Submit\n      </Button>\n    </>\n  );\n};\n","import startCase from \"lodash/startCase\";\nimport toLower from \"lodash/toLower\";\nimport React from \"react\";\nimport { useFieldArray, useForm } from \"react-hook-form\";\nimport { FieldArrayFormProvider } from \"utilities\";\nimport { FieldArrayFields } from \"./FieldArrayFields\";\nimport { FieldArrayFormActionButtons } from \"./FieldArrayFormActionButtons\";\n\nexport interface FieldArrayFormProps {\n  defaultValue: object;\n  fieldsName: string;\n  onSubmit?: (data: object[]) => void;\n}\n\n/**\n * FieldArrayForm creates a form with a variable amount of fields all for similar values.\n * This uses a provider to pass form related data down the component tree.\n * Handles the form submission and formats the name to look nice on the web.\n */\nexport const FieldArrayForm = ({ fieldsName, defaultValue, onSubmit }: FieldArrayFormProps) => {\n  const titleCaseName = startCase(toLower(fieldsName));\n  const formMethods = useForm({\n    defaultValues: { [titleCaseName]: [defaultValue] },\n  });\n  const { control, handleSubmit } = formMethods;\n  const fieldArrayMethods = useFieldArray({\n    control,\n    name: titleCaseName,\n  });\n\n  return (\n    <FieldArrayFormProvider\n      {...formMethods}\n      {...fieldArrayMethods}\n      defaultValue={defaultValue}\n      titleCaseName={titleCaseName}\n    >\n      <form\n        onSubmit={handleSubmit((data) => {\n          onSubmit && onSubmit(data[titleCaseName] as object[]);\n        })}\n      >\n        <h3>{titleCaseName}: </h3>\n        <FieldArrayFields />\n        <FieldArrayFormActionButtons />\n      </form>\n    </FieldArrayFormProvider>\n  );\n};\n\nFieldArrayForm.defaultProps = {\n  onSubmit: undefined,\n};\n","import { Grid, TextField } from \"@material-ui/core\";\nimport { Autocomplete, AutocompleteProps } from \"@material-ui/lab\";\nimport React from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { useInput } from \"utilities\";\nimport \"./GridItemAutocomplete.scss\";\n\ninterface GridItemAutocomplete {\n  defaultValue?: string[];\n  label: string;\n  name?: string;\n}\n\n/* A text field to be used on forms */\nexport const GridItemAutocomplete = (\n  props: GridItemAutocomplete &\n    Omit<AutocompleteProps<unknown, boolean, boolean, boolean>, \"renderInput\">,\n) => {\n  const { defaultValue, label, name } = props;\n  const { control, errors } = useFormContext();\n  const { name: nameFallback, errorMessage } = useInput(label, errors);\n\n  return (\n    <Grid container direction=\"column\" item xs>\n      <Grid item xs>\n        <Controller\n          control={control}\n          defaultValue={defaultValue}\n          name={name ?? nameFallback}\n          onChange={([, data]: [unknown, unknown]) => {\n            return data;\n          }}\n          render={({ onChange, ...controllerProps }) => {\n            const cPropSet = new Set(\n              Array.isArray(controllerProps.value)\n                ? controllerProps.value\n                : [controllerProps.value],\n            );\n            const propsCopy = { ...props };\n            // Remove existing elements from the autocomplete options\n            // Set difference: https://stackoverflow.com/a/36504668/14478665\n            propsCopy.options = [\n              ...new Set(\n                props.options.filter((x) => {\n                  return x && !cPropSet.has(x);\n                }),\n              ),\n            ];\n            return (\n              <Autocomplete\n                autoSelect\n                freeSolo\n                onChange={(e, data) => {\n                  return onChange(data);\n                }}\n                openOnFocus\n                renderInput={(params) => {\n                  return (\n                    <TextField\n                      label={label}\n                      {...params}\n                      error={!!errorMessage}\n                      helperText={errorMessage}\n                      variant=\"outlined\"\n                    />\n                  );\n                }}\n                {...propsCopy}\n                {...controllerProps}\n              />\n            );\n          }}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nGridItemAutocomplete.defaultProps = {\n  defaultValue: undefined,\n  name: undefined,\n};\n","import {\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormHelperText,\n  FormLabel,\n  Grid,\n} from \"@material-ui/core\";\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { useFormContext } from \"react-hook-form\";\nimport { useInput } from \"utilities\";\nimport \"./GridItemCheckboxGroup.scss\";\n\ninterface GridItemCheckboxGroup {\n  initialValue: string[];\n  label: string;\n  name?: string;\n  options: string[];\n}\n\nexport const GridItemCheckboxGroup = ({\n  label,\n  name,\n  options,\n  initialValue,\n}: GridItemCheckboxGroup) => {\n  const { register, errors } = useFormContext();\n  const { name: nameFallback, errorMessage } = useInput(label, errors);\n  const [value, onValueChange] = useState(initialValue);\n\n  useEffect(() => {\n    onValueChange(initialValue);\n  }, [initialValue]);\n\n  /* onCheckboxChange handles the value change when a checkbox is clicked\n      value is a string[] with a length equal to the number of options.\n      If an option is selected, its position in the value array is updated\n      with the option name. If it is unselected, its position in the value array\n      is updated with \"false\".\n  */\n  const onCheckboxChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const opt = e.target.value;\n    if (value) {\n      const valueCopy = [...value];\n      if (value?.includes(opt)) {\n        valueCopy.splice(options.indexOf(opt), 1, \"false\");\n        onValueChange(valueCopy);\n      } else {\n        valueCopy.splice(options.indexOf(opt), 1, opt);\n        onValueChange(valueCopy);\n      }\n    } else {\n      onValueChange([opt]);\n    }\n  };\n\n  return (\n    <Grid item xs>\n      <FormControl component=\"fieldset\" error={!!errorMessage}>\n        <FormLabel component=\"legend\">{label}</FormLabel>\n        <FormGroup>\n          <Grid container direction=\"column\">\n            {options.map((opt, i) => {\n              return (\n                <Grid key={opt} item>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={value?.includes(opt) ?? false}\n                        onChange={onCheckboxChange}\n                      />\n                    }\n                    inputRef={register}\n                    label={opt}\n                    name={`${name ?? nameFallback}[${i}]`}\n                    value={opt}\n                  />\n                </Grid>\n              );\n            })}\n          </Grid>\n        </FormGroup>\n        <FormHelperText>{errorMessage}</FormHelperText>\n      </FormControl>\n    </Grid>\n  );\n};\n\nGridItemCheckboxGroup.defaultProps = {\n  name: undefined,\n};\n","import {\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n} from \"@material-ui/core\";\nimport { camelCase } from \"lodash\";\nimport React, { ChangeEvent } from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport \"./GridItemRadioGroup.scss\";\n\ninterface GridItemRadioGroup {\n  defaultValue?: string;\n  label: string;\n  name?: string;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  options: string[];\n}\n\n/* Renders a group of radio buttons for a form.\nRef: https://stackoverflow.com/questions/64042394/react-hook-form-and-material-ui-formcontrol */\nexport const GridItemRadioGroup = ({\n  defaultValue,\n  label,\n  name,\n  onChange,\n  options,\n}: GridItemRadioGroup) => {\n  const { control } = useFormContext();\n\n  return (\n    <Grid item xs>\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">{label}</FormLabel>\n        <Controller\n          as={\n            <RadioGroup>\n              {options.map((opt) => {\n                return (\n                  <FormControlLabel\n                    key={opt}\n                    control={<Radio onChange={onChange} />}\n                    label={opt}\n                    value={opt}\n                  />\n                );\n              })}\n            </RadioGroup>\n          }\n          control={control}\n          defaultValue={defaultValue}\n          name={name ?? camelCase(label)}\n        />\n      </FormControl>\n    </Grid>\n  );\n};\n\nGridItemRadioGroup.defaultProps = {\n  defaultValue: undefined,\n  name: undefined,\n  onChange: undefined,\n};\n","import { Grid, StandardTextFieldProps, TextField } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useFormContext } from \"react-hook-form\";\nimport { useInput } from \"utilities\";\nimport \"./GridItemTextField.scss\";\n\ninterface GridItemTextField {\n  label: string;\n  name?: string;\n  textFieldProps?: StandardTextFieldProps;\n  value?: string;\n}\n\n/* A text field to be used on forms */\nexport const GridItemTextField = ({ label, textFieldProps, value, name }: GridItemTextField) => {\n  const { register, errors } = useFormContext();\n  const { name: nameFallback, errorMessage } = useInput(label, errors);\n\n  return (\n    <Grid container direction=\"column\" item xs>\n      <Grid item xs>\n        <TextField\n          defaultValue={value}\n          fullWidth\n          inputRef={register}\n          label={label}\n          name={name ?? nameFallback}\n          {...textFieldProps}\n          error={!!errorMessage}\n          helperText={errorMessage}\n          variant=\"outlined\"\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nGridItemTextField.defaultProps = {\n  name: undefined,\n  textFieldProps: undefined,\n  value: \"\",\n};\n","import React, { PropsWithChildren } from \"react\";\nimport { useImportFile } from \"utilities\";\n\ninterface ImportInputWrapperProps {\n  /**\n   * If true, will add schedules together.\n   *   false will override the current schedule.\n   *\n   * @type {boolean}\n   * @memberof ImportInputWrapperProps\n   * @optional\n   */\n  isAdditiveImport?: boolean;\n}\n\n/**\n * Wraps whatever children in a label that will capture the click\n *   on the children and open the file explorer to upload a file.\n */\nexport const ImportInputWrapper = ({\n  children,\n  isAdditiveImport = false,\n}: PropsWithChildren<ImportInputWrapperProps>) => {\n  const onInputChange = useImportFile(isAdditiveImport);\n\n  const id = `${isAdditiveImport ? \"additive-\" : \"\"}import-button`;\n\n  return (\n    <label htmlFor={id}>\n      <input accept=\".csv, .xlsx\" className=\"hidden\" id={id} onChange={onInputChange} type=\"file\" />\n      {children}\n    </label>\n  );\n};\n","import { Modal, Paper } from \"@material-ui/core\";\nimport { Pagination } from \"@material-ui/lab\";\nimport React, {\n  ChangeEvent,\n  forwardRef,\n  Ref,\n  useContext,\n  useImperativeHandle,\n  useState,\n} from \"react\";\nimport {\n  CourseSectionMeeting,\n  CSMIterableKeyMap,\n  FindCourseSectionMeetingFunction,\n  PopoverValueProps,\n  UpdateModalPaginationRef,\n} from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\nimport \"./ModalPagination.scss\";\n\ninterface ModalPaginationProps {\n  /**\n   * A component that displays a form to edit the entries\n   * @type {React.ElementType<PopoverValueProps>}\n   * @memberof ModalPaginationProps\n   */\n  PopoverComponent: React.ElementType<PopoverValueProps>;\n  /**\n   * Function to find specific CSMs for the specific cell clicked\n   * @type {FindCourseSectionMeetingFunction}\n   * @memberof ModalPaginationProps\n   */\n  findCourseSectionMeeting: FindCourseSectionMeetingFunction;\n}\n\ninterface IterableKeyMap {\n  iterable: string[];\n  key: string;\n}\n\n/**\n * Creates a modal for forms with multiple pages and allows the user to\n *   step through the pages and edit the same form for multiple entities.\n * Used on the FacultyPage to find CourseSectionMeetings\n */\nexport const ModalPagination = forwardRef(\n  (props: ModalPaginationProps, ref: Ref<UpdateModalPaginationRef>) => {\n    const { findCourseSectionMeeting, PopoverComponent } = props;\n\n    const {\n      appState: { schedule },\n    } = useContext(AppContext);\n\n    const [open, setOpen] = useState(false);\n    const [modalValues, setModalValues] = useState<CourseSectionMeeting>();\n    const [iterableKeyMap, setIterableKeyMap] = useState<IterableKeyMap>({\n      iterable: [],\n      key: \"\",\n    });\n    const [page, setPage] = useState(1);\n\n    const handlePageChange = (event: ChangeEvent<unknown>, value: number) => {\n      setPage(value);\n      const courseSectionMeeting = findCourseSectionMeeting(\n        schedule,\n        iterableKeyMap.iterable[value - 1],\n        iterableKeyMap.key,\n      );\n      if (courseSectionMeeting !== null) {\n        setOpen(false);\n        setModalValues(courseSectionMeeting);\n        setOpen(true);\n      }\n    };\n\n    const handleModalClose = () => {\n      setPage(1);\n      setOpen(false);\n    };\n\n    const handleModalOpen = ({ csm, iterable, key }: CSMIterableKeyMap) => {\n      if (csm) {\n        setModalValues(csm);\n        setIterableKeyMap({\n          iterable,\n          key,\n        });\n      }\n      setOpen(true);\n    };\n\n    // Allow parents to open the child modal.\n    useImperativeHandle(ref, () => {\n      return {\n        handleModalOpen,\n      };\n    });\n\n    return (\n      <Modal className=\"pagination-modal\" onClose={handleModalClose} open={open}>\n        <Paper className=\"pagination-modal-paper\">\n          <Pagination\n            count={iterableKeyMap.iterable.length}\n            onChange={handlePageChange}\n            page={page}\n          />\n          <PopoverComponent values={modalValues} />\n        </Paper>\n      </Modal>\n    );\n  },\n);\n","import { Link } from \"@material-ui/core\";\nimport React, { PropsWithChildren } from \"react\";\n\ntype NewTabLink = Pick<HTMLAnchorElement, \"href\">;\n\n/* Opens a link in a new tab. Useful for referencing pages outside of the app */\nexport const NewTabLink = ({ children, href }: PropsWithChildren<NewTabLink>) => {\n  return (\n    <Link href={href} rel=\"noopener noreferrer\" target=\"_blank\">\n      {children}\n    </Link>\n  );\n};\n","import { AsyncComponent, ScheduleBase, ScheduleBaseProps } from \"components\";\nimport React, { useState } from \"react\";\nimport { ScheduleContext } from \"utilities/contexts\";\nimport \"./Schedule.scss\";\n\n/* Provides a Schedule component to handle loading and async events and interfaces\n  with a BaseSchedule.\n*/\nexport const Schedule = (props: ScheduleBaseProps) => {\n  const [isScheduleLoading, setIsScheduleLoading] = useState(false);\n\n  return (\n    <ScheduleContext.Provider value={{ isScheduleLoading, setIsScheduleLoading }}>\n      <AsyncComponent isLoading={isScheduleLoading}>\n        <AsyncComponent.Loading>Updating Schedule...</AsyncComponent.Loading>\n        <AsyncComponent.Loaded>\n          <ScheduleBase {...props} />\n        </AsyncComponent.Loaded>\n      </AsyncComponent>\n    </ScheduleContext.Provider>\n  );\n};\n","import React from \"react\";\nimport StickyNode from \"react-stickynode\";\nimport { getCalendarClassName } from \"utilities\";\nimport { ScheduleBaseProps } from \"./ScheduleBase\";\n\ninterface ScheduleHeaderProps {\n  headers: ScheduleBaseProps[\"calendarHeaders\"];\n  scheduleType: ScheduleBaseProps[\"scheduleType\"];\n}\n\nconst tenVH = window.innerHeight / 10;\n\n/*\n  StickyHeader is used to keep the Schedule header sticky to the\n  top of the view port.\n*/\nexport const ScheduleHeader = ({ headers, scheduleType }: ScheduleHeaderProps) => {\n  return (\n    <StickyNode top={tenVH}>\n      <div className=\"adjacent schedule-header-row\">\n        {headers.map((header) => {\n          const className = `calendar-title ${getCalendarClassName(scheduleType)}`;\n          return (\n            <div key={header} className={className}>\n              {header}\n            </div>\n          );\n        })}\n      </div>\n    </StickyNode>\n  );\n};\n","import React from \"react\";\nimport { getHoursArr } from \"utilities/services\";\n\ninterface ScheduleLeftTimeAxisProps {\n  slotMaxTime: string;\n  slotMinTime: string;\n}\n\n/* Display the hours on the left axis of the schedule */\nexport const ScheduleLeftTimeAxis = ({\n  slotMinTime: min,\n  slotMaxTime: max,\n}: ScheduleLeftTimeAxisProps) => {\n  return (\n    <div className=\"left-time-axis\">\n      {getHoursArr(min, max).map((time) => {\n        return (\n          <div key={time} className=\"time-slot\">\n            <span>{`${time}:00`}</span>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import { CalendarOptions, EventClickArg } from \"@fullcalendar/react\";\nimport { Popover } from \"@material-ui/core\";\nimport { AddSectionPopover, Calendar, ScheduleToolbar } from \"components\";\nimport { bindPopover, usePopupState } from \"material-ui-popup-state/hooks\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport Stick from \"react-stick\";\nimport { CourseSectionMeeting, useAppContext } from \"utilities\";\nimport {\n  colorConflictBorders,\n  colorEventsByFeature,\n  filterEventsByTerm,\n  filterHeadersWithNoEvents,\n  getCalendarClassName,\n  GroupedEvents,\n} from \"utilities/services\";\nimport { ScheduleHeader } from \"./ScheduleHeader\";\nimport { ScheduleLeftTimeAxis } from \"./ScheduleLeftTimeAxis\";\n\nexport interface ScheduleBaseProps extends CalendarOptions {\n  calendarHeaders: string[];\n  groupedEvents: GroupedEvents;\n  readonly?: boolean;\n  scheduleType: string;\n}\n\n/* Creates a list of Calendars to create a Schedule\n  <Stick> is used to stick the Schedule Header to the Schedule\n  to track horizontal scrolling.\n*/\nexport const ScheduleBase = ({\n  readonly,\n  calendarHeaders,\n  groupedEvents,\n  scheduleType,\n  ...calendarOptions\n}: ScheduleBaseProps) => {\n  const {\n    appState: { colorBy, selectedTerm, slotMaxTime, slotMinTime },\n  } = useAppContext();\n  const [popupData, setPopupData] = useState<CourseSectionMeeting>();\n\n  const popupState = usePopupState({\n    popupId: \"addSection\",\n    variant: \"popover\",\n  });\n\n  const handleEventClick = useCallback(\n    (arg: EventClickArg) => {\n      setPopupData(arg.event.extendedProps as CourseSectionMeeting);\n      popupState.open(arg.el);\n    },\n    [popupState],\n  );\n\n  const times = {\n    slotMaxTime,\n    slotMinTime,\n  };\n\n  // Add context times to the existing calendarOptions\n  calendarOptions = {\n    ...calendarOptions,\n    ...times,\n  };\n\n  // Filter out events from other terms\n  const filteredEvents = useMemo(() => {\n    return filterEventsByTerm(groupedEvents, selectedTerm);\n  }, [groupedEvents, selectedTerm]);\n\n  // Filter out headers with no events\n  const calenderHeadersNoEmptyInTerm = useMemo(() => {\n    return filterHeadersWithNoEvents(filteredEvents, calendarHeaders);\n  }, [filteredEvents, calendarHeaders]);\n\n  // Color events by the selected feature\n  colorEventsByFeature(filteredEvents, colorBy);\n  colorConflictBorders(groupedEvents);\n\n  return (\n    <>\n      <ScheduleToolbar />\n      <div className=\"schedule-time-axis-wrapper\">\n        <ScheduleLeftTimeAxis {...times} />\n        <div className=\"schedule-wrapper\">\n          <Stick\n            node={\n              <ScheduleHeader headers={calenderHeadersNoEmptyInTerm} scheduleType={scheduleType} />\n            }\n            position=\"top left\"\n          >\n            <div className=\"adjacent\">\n              {calenderHeadersNoEmptyInTerm.map((header) => {\n                const className = `hide-axis ${getCalendarClassName(scheduleType)}`;\n                return (\n                  <div key={header} className={className}>\n                    <Calendar\n                      {...calendarOptions}\n                      key={header}\n                      eventClick={handleEventClick}\n                      events={filteredEvents[header]}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          </Stick>\n        </div>\n      </div>\n      <Popover\n        {...bindPopover(popupState)}\n        anchorOrigin={{\n          horizontal: \"left\",\n          vertical: \"bottom\",\n        }}\n        PaperProps={{ style: { maxHeight: \"90%\", maxWidth: \"90%\", minWidth: \"500px\" } }}\n        transformOrigin={{\n          horizontal: \"right\",\n          vertical: \"top\",\n        }}\n      >\n        <AddSectionPopover values={popupData} />\n      </Popover>\n    </>\n  );\n};\n","import { Box, Grid, Typography } from \"@material-ui/core\";\nimport { NewTabLink } from \"components/reuseables\";\nimport React from \"react\";\nimport { team, TeamMember } from \"utilities\";\nimport { TeamMemberProfile, TextSection } from \".\";\nimport \"./AboutPage.scss\";\n\n/* A page with information about the project\n  with references */\nexport const AboutPage = () => {\n  return (\n    <Grid container justify=\"center\">\n      <Typography align=\"left\">\n        <Box maxWidth={900} mb={3} p={4}>\n          <AboutVision />\n          <AboutTeam />\n          <AboutCode />\n          <AboutReport />\n          <AboutResources />\n        </Box>\n      </Typography>\n    </Grid>\n  );\n};\n\nconst AboutVision = () => {\n  return (\n    <TextSection\n      body={\n        <>\n          Every year, all department chairs at Calvin must develop a schedule for their department’s\n          classes based on a spreadsheet provided to them by the Registrar. The schedule must\n          contain the times, professors, and rooms for every class section in the department and the\n          schedule must satisfy the following constraints:\n          <ul>\n            <li>Only one section can be in a room at a time</li>\n            <li>A professor can only teach one section at a time</li>\n            <li>\n              Two sections taken together cannot be offered at the same time (e.g. CS 212 is often\n              taken together with MATH 251 and ENGR 220)\n            </li>\n            <li>Professors can only teach courses when they are available</li>\n            <li>Professors can only teach courses they are qualified to teach</li>\n            <li>Professors must/cannot teach consecutive classes depending on their preferences</li>\n            <li>A room’s capacity cannot be exceeded by the expected enrollment in the class</li>\n            <li>Faculty teaching loads cannot be “too high” or “too low”</li>\n          </ul>\n          These constraints make it extremely difficult for the department chair to create a\n          schedule without a tool to help them. We propose building a web application, named the\n          Course Schedulizer, that will allow department chairs to visualize and manipulate their\n          department course schedules. It will provide:\n          <ul>\n            <li>The ability to upload and export department schedules via CSV</li>\n            <li>Integration with the spreadsheets provided and required by the Registrar</li>\n            <li>Two views to visualize the schedule data (by location and by instructor)</li>\n            <li>Options to color the data by level, instructor, location, or prefix</li>\n            <li>Functionality to create, read, update, and delete class sections</li>\n            <li>A load summary for each instructor in the department</li>\n            <li>Schedule conflict detection and resolution suggestions (for honors portion)</li>\n            <li>An optimized user interface with an efficient use of screen space</li>\n            <li>An extensible interface to integrate with future systems (e.g. Workday)</li>\n          </ul>\n          By offering these features and improvements on the functionality previously implemented by\n          Professor Pruim and Professor VanderLinden, the Course Schedulizer will allow department\n          chairs to easily create their schedules.\n          <br />\n          <br />\n          For an Honors Project, Charles is completing a second project relating to constraint\n          problem satisfaction alongside the Course Schedulizer. By employing constraint\n          satisfaction techniques, Charles hopes to allow department chairs the ability to upload a\n          list of classes, professors, rooms, and times to the Course Schedulizer web application\n          and have the system create a schedule with no conflicts.\n        </>\n      }\n      title=\"Vision\"\n    />\n  );\n};\n\nconst AboutTeam = () => {\n  return (\n    <TextSection\n      body={\n        <Grid container direction=\"column\" justify=\"flex-start\" spacing={2}>\n          {team.map((member: TeamMember) => {\n            return <TeamMemberProfile key={member.name} member={member} />;\n          })}\n        </Grid>\n      }\n      title=\"Team\"\n    />\n  );\n};\n\nconst AboutCode = () => {\n  return (\n    <TextSection\n      body={\n        <>\n          This website is our code built and deployed. Feel free to play around with the site. Our\n          code repository is{\" \"}\n          <NewTabLink href=\"https://github.com/senior-knights/course-schedulizer\">\n            hosted on GitHub\n          </NewTabLink>\n          . We have two persistent branches: <code>production</code> and <code>develop</code>.{\" \"}\n          <code>production</code> is the working, stable build of the web application and{\" \"}\n          <code>develop</code> is the less-stable, bleeding-edge build of our Course Schedulizer\n          app. Please feel free to look around the code and interact with us on the discussion board\n          or by posting issues. The honors constraint satisfaction package is also{\" \"}\n          <NewTabLink href=\"https://github.com/senior-knights/aima-typescript-csp\">\n            hosted on GitHub\n          </NewTabLink>\n          . For details on the development process, please view the respective ReadMes on GitHub.\n        </>\n      }\n      title=\"Code\"\n    />\n  );\n};\n\nconst AboutReport = () => {\n  return (\n    <TextSection\n      body={\n        <ul>\n          <li>\n            <NewTabLink href=\"https://docs.google.com/document/d/e/2PACX-1vQPQ1Qhu0jCVThVbNsUFxV8fB56fHgVf4Dnhfkf6EU_7627iMVuSHntW8VxF0j0Aw/pub\">\n              Updated Proposal\n            </NewTabLink>{\" \"}\n            - 12.15.2020\n          </li>\n          <li>\n            <NewTabLink href=\"https://docs.google.com/document/d/e/2PACX-1vQTy2A83LmPKrZhQ5_LCN6a3ow4UHxknIq4OjgimPU-Brfyl6fAhb9aQmxjNvg5tA/pub\">\n              Original Proposal\n            </NewTabLink>{\" \"}\n            - 10.15.2020\n          </li>\n        </ul>\n      }\n      title=\"Report\"\n    />\n  );\n};\n\nconst AboutResources = () => {\n  return (\n    <TextSection\n      body={\n        <ul>\n          <li>\n            <NewTabLink href=\"https://computing.calvin.edu/\">\n              Computing@Calvin Department Website\n            </NewTabLink>\n          </li>\n          <li>\n            <NewTabLink href=\"https://web.microsoftstream.com/video/cee6b774-a010-4220-a0d8-c6a6c5240d84?st=2456\">\n              Status Report 1\n            </NewTabLink>{\" \"}\n            - 12.01.2020\n          </li>\n          <li>\n            <NewTabLink href=\"https://docs.google.com/document/d/e/2PACX-1vS8sc8-Vs1qkfyGpelPXsuwvSQif3IFlnsZNoak3P7DbBmSYxWDgXL2ig-OJk8VJVHny2lCUZxCyCfJ/pub\">\n              Honors Status Report 1\n            </NewTabLink>{\" \"}\n            - 12.01.2020\n          </li>\n          <li>\n            <NewTabLink href=\"https://docs.google.com/presentation/d/e/2PACX-1vQrjMY5c-gnlvX5AAD1zIqRY0P5BLppQFT5y-3fxeR0TzuEvzUpDADYUGY_3J4TBe1PL3sq9rEqUdRA/pub?start=false&loop=false&delayms=3000\">\n              Presentation 1\n            </NewTabLink>{\" \"}\n            - 12.01.2020\n          </li>\n        </ul>\n      }\n      title=\"Resources\"\n    />\n  );\n};\n","import { Grid } from \"@material-ui/core\";\nimport { Spring3DHover } from \"components\";\nimport React from \"react\";\nimport { TeamMember } from \"utilities\";\n\ninterface TeamMemberProfile {\n  member: TeamMember;\n}\n\n/* Display information about the Team Member */\nexport const TeamMemberProfile = ({ member }: TeamMemberProfile) => {\n  const { name, bio } = member;\n\n  return (\n    <Grid alignItems=\"center\" container item>\n      <Grid alignItems=\"center\" container direction=\"column\" item xs={4}>\n        <Spring3DHover member={member} />\n        <h3>{name}</h3>\n      </Grid>\n      <Grid container item xs={8}>\n        {bio}\n      </Grid>\n    </Grid>\n  );\n};\n","import { Box } from \"@material-ui/core\";\nimport { AnimateShowAndHide } from \"components\";\nimport React, { ReactNode } from \"react\";\n\ninterface TextSection {\n  body?: ReactNode;\n  title?: ReactNode;\n}\n\n/* Display a header with content. Used on About Page */\nexport const TextSection = ({ title, body }: TextSection) => {\n  return (\n    <Box mb={9} mt={3}>\n      <AnimateShowAndHide>{title}</AnimateShowAndHide>\n      <>{body}</>\n    </Box>\n  );\n};\n\nTextSection.defaultProps = {\n  body: undefined,\n  title: undefined,\n};\n","import { Harmony as HarmonyBase, Result } from \"@harmoniously/react\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  HarmonyAssignmentsState,\n  HarmonyResultState,\n  useHarmonyAssignmentsStore,\n  useHarmonyResultStore,\n} from \"utilities\";\n\n// TODO: move this to the harmony page and allow users to load in exiting data\n// temporary hook used to get data from the imported schedule and generate fake assignments.\n// const useInferredAssignments = () => {\n//   const {\n//     appState: { rooms, professors, classes },\n//   } = useContext(AppContext);\n\n//   const inferredAssignments: Assignments = {};\n//   classes.forEach((cls) => {\n//     inferredAssignments[cls] = {\n//       professors,\n//       rooms: [...rooms, \"a\", \"b\"],\n//       times,\n//     };\n//   });\n\n//   return { inferredAssignments, professors, rooms };\n// };\n\n/** Harmony returns a component to automatically create schedules. */\nexport const Harmony = () => {\n  const assignments = useHarmonyAssignmentsStore(selector);\n  const setResult = useHarmonyResultStore(resultSelector);\n  const [res, setRes] = useState<Result>();\n\n  // Save state in the store.\n  useEffect(() => {\n    setResult(res);\n  }, [res, setResult]);\n\n  return (\n    <>\n      <HarmonyBase assignments={assignments} setResult={setRes} />\n    </>\n  );\n};\n\nconst selector = ({ assignments }: HarmonyAssignmentsState) => {\n  return assignments;\n};\n\nconst resultSelector = ({ setResult }: HarmonyResultState) => {\n  return setResult;\n};\n","import { Checkbox } from \"@material-ui/core\";\nimport React, { ChangeEvent, Dispatch, SetStateAction, useCallback, useState } from \"react\";\n\ninterface HarmonyCheckboxProps {\n  item: string;\n  setList: Dispatch<SetStateAction<string[]>>;\n}\n\n/** A single check box to update lists on the Harmony page */\nexport const HarmonyCheckbox = ({ setList, item }: HarmonyCheckboxProps) => {\n  const [checked, setChecked] = useState(false);\n\n  const handleChange = useCallback(\n    (clickedItem: string) => {\n      return (event: ChangeEvent<HTMLInputElement>) => {\n        const isChecked = event.target.checked;\n        setChecked(isChecked);\n        if (isChecked) {\n          setList((prevState) => {\n            return [...prevState, clickedItem];\n          });\n        } else {\n          setList((prevState) => {\n            return prevState.filter((i) => {\n              return i !== clickedItem;\n            });\n          });\n        }\n      };\n    },\n    [setList],\n  );\n\n  return (\n    <div>\n      {item} <Checkbox checked={checked} onChange={handleChange(item)} />\n    </div>\n  );\n};\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport { HarmonyCheckbox } from \"./HarmonyCheckbox\";\n\ninterface HarmonyCheckboxListProps<T> {\n  course: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  customLabel?: (obj: any) => string;\n  id: string;\n  list: T;\n  setList: Dispatch<SetStateAction<string[]>>;\n}\n\n/** Multiple check boxes for a specific attribute: rooms, times, professors */\nexport const HarmonyCheckboxList = <T extends unknown[]>({\n  list,\n  course,\n  id,\n  customLabel,\n  setList,\n}: HarmonyCheckboxListProps<T>) => {\n  return (\n    <>\n      <h4>{id}</h4>\n      {/* eslint-disable-next-line @typescript-eslint/no-explicit-any */}\n      {list.map((itemObj: any) => {\n        const item: string =\n          (customLabel && customLabel(itemObj)) || itemObj[Object.keys(itemObj)[0]];\n        return <HarmonyCheckbox key={`${item}-${course}`} item={item} setList={setList} />;\n      })}\n    </>\n  );\n};\n\nHarmonyCheckboxList.defaultProps = {\n  customLabel: undefined,\n};\n","import { Box, Paper } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  HarmonyFormsAccessors,\n  HarmonyFormsState,\n  SingularAccessors,\n  useHarmonyAssignmentsStore,\n  useHarmonyFormsStore,\n} from \"utilities/hooks\";\nimport { HarmonyCheckboxList } from \"./HarmonyCheckboxList\";\n\ninterface HarmonyCourseCheckboxesProps {\n  course: string;\n}\n\n/** All of the check box lists for each attribute for a specific class */\nexport const HarmonyCourseCheckboxes = ({ course }: HarmonyCourseCheckboxesProps) => {\n  const [professors, times, rooms] = useHarmonyFormsStore(selector);\n  const { setClass } = useHarmonyAssignmentsStore();\n  const [profList, setProfList] = useState<string[]>([]);\n  const [timeList, setTimeList] = useState<string[]>([]);\n  const [roomList, setRoomList] = useState<string[]>([]);\n\n  useEffect(() => {\n    setClass(course, { professors: profList, rooms: roomList, times: timeList });\n  }, [course, profList, roomList, setClass, timeList]);\n\n  return (\n    <Box component=\"div\" m={2}>\n      <Paper>\n        <b>{course}</b>\n        <HarmonyCheckboxList\n          course={course}\n          customLabel={(profObj: SingularAccessors[\"professor\"]) => {\n            return `${profObj.First} ${profObj.Last}`;\n          }}\n          id=\"professors\"\n          list={professors as HarmonyFormsAccessors[\"professors\"]}\n          setList={setProfList}\n        />\n        <HarmonyCheckboxList\n          course={course}\n          id=\"times\"\n          list={times as HarmonyFormsAccessors[\"times\"]}\n          setList={setTimeList}\n        />\n        <HarmonyCheckboxList\n          course={course}\n          id=\"rooms\"\n          list={rooms as HarmonyFormsAccessors[\"rooms\"]}\n          setList={setRoomList}\n        />\n      </Paper>\n    </Box>\n  );\n};\n\n// pick values from store.\nconst selector = ({ professors, times, rooms }: HarmonyFormsState) => {\n  return [professors, times, rooms];\n};\n","import React from \"react\";\nimport { HarmonyFormsAccessors, HarmonyFormsState, useHarmonyFormsStore } from \"utilities/hooks\";\nimport { HarmonyCourseCheckboxes } from \"./HarmonyCourseCheckboxes\";\n\n/**\n * Section on Harmony page designed to allow users to input\n *   assignment restrictions for courses.\n */\nexport const HarmonyAddAssignments = () => {\n  const courses = useHarmonyFormsStore(selector);\n  return (\n    <>\n      <h3>Add Assignments</h3>\n      {(courses as HarmonyFormsAccessors[\"courses\"]).map((courseObj) => {\n        return <HarmonyCourseCheckboxes key={courseObj.Course} course={courseObj.Course} />;\n      })}\n      {/* <Button type=\"submit\">Submit</Button>\n      <Button>Download JSON</Button>\n      <Button>Upload JSON</Button> */}\n    </>\n  );\n};\n\n// pick values from store.\nconst selector = ({ courses }: HarmonyFormsState) => {\n  return courses;\n};\n","import { FieldArrayForm, FieldArrayFormProps } from \"components\";\nimport React from \"react\";\nimport { HarmonyFormsState, useHarmonyFormsStore } from \"utilities/hooks/useHarmonyFormsStore\";\n\ninterface HarmonyFieldArrayFormProps extends FieldArrayFormProps {\n  onSubmit?: () => void;\n}\n\n/** Custom field array form for Harmony which injects the specific add function\n *   with the correct fieldsName using a closure.\n */\nexport const HarmonyFieldArrayForm = (props: HarmonyFieldArrayFormProps) => {\n  const { onSubmit, fieldsName } = props;\n  const update = useHarmonyFormsStore(selector);\n\n  const onSubmitCallback = React.useCallback(\n    (data) => {\n      update(fieldsName, data);\n      onSubmit && onSubmit();\n    },\n    [update, onSubmit, fieldsName],\n  );\n\n  return <FieldArrayForm {...props} onSubmit={onSubmitCallback} />;\n};\n\nHarmonyFieldArrayForm.defaultProps = {\n  onSubmit: undefined,\n};\n\nconst selector = (state: HarmonyFormsState) => {\n  return state.update;\n};\n","import { Button } from \"@material-ui/core\";\nimport { Schedule } from \"components\";\nimport React, { useCallback, useMemo } from \"react\";\nimport { getEvents, getProfs } from \"utilities\";\nimport {\n  HarmonyResultState,\n  useAppContext,\n  useHarmonyResultStore,\n  useRedirect,\n} from \"utilities/hooks\";\n\n/** Display the resulting schedule from Harmony on a\n *   visual schedule.\n */\nexport const HarmonySchedule = () => {\n  const schedule = useHarmonyResultStore(selector);\n  const { appDispatch } = useAppContext();\n  const redirectTo = useRedirect();\n\n  const { headers, events } = useMemo(() => {\n    return { events: getEvents(schedule, \"faculty\"), headers: getProfs(schedule) };\n  }, [schedule]);\n\n  const onClick = useCallback(() => {\n    appDispatch({ payload: { schedule }, type: \"setScheduleData\" });\n    redirectTo(\"/\");\n  }, [appDispatch, redirectTo, schedule]);\n\n  return (\n    <>\n      <br />\n      <Button onClick={onClick} type=\"button\">\n        Send to Schedulizer\n      </Button>\n      <Schedule calendarHeaders={headers} groupedEvents={events} readonly scheduleType=\"harmony\" />\n    </>\n  );\n};\n\nconst selector = ({ schedule }: HarmonyResultState) => {\n  return schedule;\n};\n","import { AnimateShowAndHide, HarmonyFieldArrayForm } from \"components\";\nimport React from \"react\";\nimport { Harmony, HarmonyAddAssignments } from \"./Harmony\";\nimport { HarmonySchedule } from \"./Harmony/HarmonySchedule\";\n\n/**\n * The page contains all of the Harmoniously user-experience.\n *   Allows the user to load professor, courses, rooms, and times from\n *   the uploaded schedule as well as edit them and create assignments (constraints).\n * Harmony will find schedules with no conflicts and allow the user to send it back\n *   to the Schedulizer to make edits.\n */\nexport const HarmonyPage = () => {\n  return (\n    <>\n      <AnimateShowAndHide>Harmony</AnimateShowAndHide>\n      <h1>\n        Note: This page is in a <i>pre-alpha</i> state. Output might not be perfect.\n      </h1>\n      <HarmonyFieldArrayForm defaultValue={{ First: \"\", Last: \"\" }} fieldsName=\"professors\" />\n      <HarmonyFieldArrayForm defaultValue={{ Course: \"\" }} fieldsName=\"courses\" />\n      <HarmonyFieldArrayForm defaultValue={{ Room: \"\" }} fieldsName=\"rooms\" />\n      <HarmonyFieldArrayForm defaultValue={{ Time: \"\" }} fieldsName=\"times\" />\n      <HarmonyAddAssignments />\n      <Harmony />\n      <HarmonySchedule />\n    </>\n  );\n};\n","import React from \"react\";\n\nexport const HelpPage = () => {\n  return <>Help</>;\n};\n","import { Tabs } from \"components\";\nimport React, { useEffect } from \"react\";\nimport { useImportRemoteFile } from \"utilities/hooks/importRemoteFileHook\";\n\nexport const SchedulizerPage = () => {\n  // Load a remote file from the GET parameters\n  const { importRemoteFile } = useImportRemoteFile();\n  useEffect(importRemoteFile);\n\n  return (\n    <>\n      <Tabs />\n    </>\n  );\n};\n","import { Footer, Header } from \"components\";\nimport { AboutPage, HarmonyPage, HelpPage, SchedulizerPage } from \"components/pages\";\nimport React, { useReducer, useState } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { reducer, useLocal } from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\nimport { initialAppState } from \"utilities/interfaces\";\nimport \"./App.scss\";\n\n/* App with a HashRouter.\nRef: https://medium.com/@bennirus/deploying-a-create-react-app-with-routing-to-github-pages-f386b6ce84c2\n*/\nexport const App = () => {\n  const [isCSVLoading, setIsCSVLoading] = useState(false);\n  const { save } = useLocal(\"appState\");\n  const [appState, appDispatch] = useReducer(reducer(save), initialAppState);\n\n  return (\n    <div className=\"App\">\n      <HashRouter basename=\"/\">\n        <Header />\n        <AppContext.Provider value={{ appDispatch, appState, isCSVLoading, setIsCSVLoading }}>\n          <div className=\"content-container\">\n            <Switch>\n              <Route path=\"/about\">\n                <AboutPage />\n              </Route>\n              <Route path=\"/help\">\n                <HelpPage />\n              </Route>\n              <Route path=\"/harmony\">\n                <HarmonyPage />\n              </Route>\n              <Route path=\"/\">\n                <SchedulizerPage />\n              </Route>\n            </Switch>\n          </div>\n        </AppContext.Provider>\n        <Footer />\n      </HashRouter>\n    </div>\n  );\n};\n","import { AppBar, Box, Grid } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport \"./Footer.scss\";\n\n/* Provides a footer that is always at the bottom of the page: no matter what.\n    Always provides the proper year. To get this working correctly, CSS-Tricks\n    was referenced for the flex-box version.\n  Ref: https://css-tricks.com/couple-takes-sticky-footer/#there-is-flexbox\n*/\nexport const Footer = () => {\n  return (\n    <AppBar className=\"app-footer\" elevation={0} position=\"static\">\n      <Grid container justify=\"flex-start\">\n        <Box p={2}>© {moment().year()} Senior Knights</Box>\n      </Grid>\n    </AppBar>\n  );\n};\n","import CalvinLogo from \"./CalvinUniv-vert-full-color-inverse.png\";\n\nexport const logo = CalvinLogo;\n","import { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport { logo } from \"assets\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport \"./Header.scss\";\n\n/* Header is the top bar that persists across the app */\nexport const Header = () => {\n  return (\n    <AppBar elevation={0} position=\"static\">\n      <Toolbar className=\"toolbar\">\n        <RouterLink className=\"toolbar-group title\" to=\"/\">\n          <img alt=\"Org Logo\" className=\"org-logo\" src={logo} />\n          <Typography variant=\"h6\">Course Schedulizer</Typography>\n        </RouterLink>\n        <Typography className=\"toolbar-group links\">\n          <Link component={RouterLink} to=\"/\">\n            Schedulizer\n          </Link>\n          <Link component={RouterLink} to=\"/harmony\">\n            Harmony\n          </Link>\n          <Link component={RouterLink} to=\"/about\">\n            About\n          </Link>\n          <Link component={RouterLink} to=\"/help\">\n            Help\n          </Link>\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import { Schedule } from \"components\";\nimport React, { useContext } from \"react\";\nimport { getEvents } from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\nimport \"./DepartmentSchedule.scss\";\n\n/* Creates a list of Calendars to create the Department Schedule\n */\nexport const DepartmentSchedule = () => {\n  const {\n    appState: { departments, schedule },\n  } = useContext(AppContext);\n\n  return (\n    <>\n      <Schedule\n        calendarHeaders={departments.sort()}\n        groupedEvents={getEvents(schedule, \"department\")}\n        scheduleType=\"department\"\n      />\n    </>\n  );\n};\n","/* eslint-disable react/jsx-key */\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport { UpdateNonTeachingLoadModalPagination, UpdateSectionModalPagination } from \"components\";\nimport React, { useContext, useMemo, useRef } from \"react\";\nimport { Cell, Column, useSortBy, useTable } from \"react-table\";\nimport {\n  createTable,\n  FacultyRow,\n  getCourseSectionMeetingFromCell,\n  getIdFromFaculty,\n  getNonTeachingLoadsFromCell,\n  UpdateModalPaginationRef,\n} from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\nimport { AddNonTeachingLoadPopover, PopoverButton } from \"../../reuseables\";\nimport \"./FacultyLoads.scss\";\n\nexport const FacultyLoads = () => {\n  const {\n    appState: { schedule },\n  } = useContext(AppContext);\n\n  const data = useMemo<FacultyRow[]>(() => {\n    return createTable(schedule);\n  }, [schedule]);\n\n  const updateSectionModalRef = useRef<UpdateModalPaginationRef>(null);\n  const updateNonTeachingLoadModalRef = useRef<UpdateModalPaginationRef>(null);\n\n  const handleCellClick = (cell: Cell<FacultyRow>) => {\n    if (typeof cell.value === \"string\") {\n      const cellHeader = cell.column.Header as string;\n      const isNonTeachingLoad = cellHeader === \"Other Duties\";\n      const cellData = isNonTeachingLoad\n        ? getNonTeachingLoadsFromCell(schedule, cell.value, cell.row.values.faculty)\n        : getCourseSectionMeetingFromCell(schedule, cell.value, cellHeader);\n      if (cellData.csm) {\n        if (isNonTeachingLoad && updateNonTeachingLoadModalRef.current) {\n          updateNonTeachingLoadModalRef.current.handleModalOpen(cellData);\n        } else if (!isNonTeachingLoad && updateSectionModalRef.current) {\n          updateSectionModalRef.current.handleModalOpen(cellData);\n        }\n      }\n    }\n  };\n\n  const columns = useMemo<Column<FacultyRow>[]>(() => {\n    return [\n      { Header: \"Faculty\", accessor: \"faculty\" },\n      { Header: \"Total Hours\", accessor: \"totalHours\" },\n      { Header: \"Fall Course Sections\", accessor: \"fallCourseSections\" },\n      { Header: \"Fall Hours\", accessor: \"fallHours\" },\n      { Header: \"Spring Course Sections\", accessor: \"springCourseSections\" },\n      { Header: \"Spring Hours\", accessor: \"springHours\" },\n      { Header: \"Summer Course Sections\", accessor: \"summerCourseSections\" },\n      { Header: \"Summer Hours\", accessor: \"summerHours\" },\n      { Header: \"Other Duties\", accessor: \"otherDuties\" },\n      { Header: \"Other Hours\", accessor: \"otherHours\" },\n    ];\n  }, []);\n\n  // Sort by faculty name by default\n  data.sort((a, b): number => {\n    if (a.faculty < b.faculty) {\n      return -1;\n    }\n    return 1;\n  });\n\n  const tableInstance = useTable({ columns, data }, useSortBy);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = tableInstance;\n\n  // https://react-table.tanstack.com/docs/quick-start\n  return (\n    <>\n      <UpdateSectionModalPagination ref={updateSectionModalRef} />\n      <UpdateNonTeachingLoadModalPagination ref={updateNonTeachingLoadModalRef} />\n      <TableContainer component={Paper}>\n        <div className=\"add-non-teaching-activity-button\">\n          <PopoverButton\n            buttonTitle=\"Add Non-Teaching Activity\"\n            isIcon={false}\n            popupId=\"addNonTeachingActivity\"\n          >\n            <AddNonTeachingLoadPopover />\n          </PopoverButton>\n        </div>\n        <Table {...getTableProps()}>\n          <TableHead>\n            {\n              // Loop over the header rows\n              headerGroups.map((headerGroup) => {\n                return (\n                  // Apply the header row props\n                  <TableRow {...headerGroup.getHeaderGroupProps()}>\n                    {\n                      // Loop over the headers in each row\n                      headerGroup.headers.map((column) => {\n                        return (\n                          // Apply the header cell props, and sort when clicked\n                          // See https://codesandbox.io/s/github/tannerlinsley/react-table/tree/master/examples/sorting?file=/src/App.js:1439-1662\n                          <TableCell {...column.getHeaderProps(column.getSortByToggleProps())}>\n                            {\n                              // Render the header\n                              column.render(\"Header\")\n                            }\n                            <span>\n                              {column.isSorted ? (column.isSortedDesc ? \" 🔽\" : \" 🔼\") : \"\"}\n                            </span>\n                          </TableCell>\n                        );\n                      })\n                    }\n                  </TableRow>\n                );\n              })\n            }\n          </TableHead>\n          {/* Apply the table body props */}\n          <TableBody {...getTableBodyProps()}>\n            {\n              // Loop over the table rows\n              rows.map((row) => {\n                // Prepare the row for display\n                prepareRow(row);\n                const rowId = getIdFromFaculty(row.original.faculty);\n                return (\n                  // Apply the row props\n                  <TableRow {...row.getRowProps()} id={rowId}>\n                    {\n                      // Loop over the rows cells\n                      row.cells.map((cell) => {\n                        // Apply the cell props\n                        const cellClass =\n                          cell.value &&\n                          cell\n                            .getCellProps()\n                            .key.toString()\n                            .match(/(CourseSections)|(otherDuties)/g)\n                            ? \"change-cursor\"\n                            : \"\";\n                        return (\n                          <TableCell\n                            className={cellClass}\n                            {...cell.getCellProps()}\n                            onClick={() => {\n                              handleCellClick(cell);\n                            }}\n                          >\n                            {\n                              // Render the cell contents\n                              cell.render(\"Cell\")\n                            }\n                          </TableCell>\n                        );\n                      })\n                    }\n                  </TableRow>\n                );\n              })\n            }\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n","import { ModalPagination } from \"components\";\nimport { AddNonTeachingLoadPopover } from \"components/reuseables\";\nimport React, { forwardRef, Ref } from \"react\";\nimport { findNonTeachingLoad, UpdateModalPaginationRef } from \"utilities\";\nimport \"./UpdateNonTeachingLoadModalPagination.scss\";\n\n/**\n * Creates a popup modal used on the FacultyLoads page to find\n *   non-teaching loads and allow the user to page through and edit them\n *   on a modal.\n */\nexport const UpdateNonTeachingLoadModalPagination = forwardRef(\n  (props, ref: Ref<UpdateModalPaginationRef>) => {\n    return (\n      <ModalPagination\n        ref={ref}\n        findCourseSectionMeeting={findNonTeachingLoad}\n        PopoverComponent={AddNonTeachingLoadPopover}\n      />\n    );\n  },\n);\n\nUpdateNonTeachingLoadModalPagination.displayName = \"UpdateNonTeachingLoadModalPagination\";\n","import { AddSectionPopover, ModalPagination } from \"components\";\nimport React, { forwardRef, Ref } from \"react\";\nimport { FindCourseSectionMeetingFunction, findSection, UpdateModalPaginationRef } from \"utilities\";\nimport \"./UpdateSectionModalPagination.scss\";\n\n/**\n * Creates a popup modal used on the FacultyLoads page to find\n *   courses and allow the user to page through and edit them\n *   on a modal.\n */\nexport const UpdateSectionModalPagination = forwardRef(\n  (props, ref: Ref<UpdateModalPaginationRef>) => {\n    return (\n      <ModalPagination\n        ref={ref}\n        findCourseSectionMeeting={findSection as FindCourseSectionMeetingFunction}\n        PopoverComponent={AddSectionPopover}\n      />\n    );\n  },\n);\n\nUpdateSectionModalPagination.displayName = \"UpdateSectionModalPagination\";\n","import { Schedule } from \"components\";\nimport React, { useContext } from \"react\";\nimport { getEvents } from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\nimport \"./FacultySchedule.scss\";\n\n/* Creates a list of Calendars to create the Faculty Schedule\n */\nexport const FacultySchedule = () => {\n  const {\n    appState: { professors, schedule },\n  } = useContext(AppContext);\n\n  return (\n    <>\n      <Schedule\n        calendarHeaders={professors.sort()}\n        groupedEvents={getEvents(schedule, \"faculty\")}\n        scheduleType=\"faculty\"\n      />\n    </>\n  );\n};\n","import { Schedule } from \"components\";\nimport React, { useContext } from \"react\";\nimport { getEvents } from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\n\nexport const RoomsSchedule = () => {\n  const {\n    appState: { schedule, rooms },\n  } = useContext(AppContext);\n\n  return (\n    <>\n      <Schedule\n        calendarHeaders={rooms.sort()}\n        groupedEvents={getEvents(schedule, \"room\")}\n        scheduleType=\"room\"\n      />\n    </>\n  );\n};\n","import { IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\nimport { ImportInputWrapper } from \"components\";\nimport { bindMenu, bindTrigger, usePopupState } from \"material-ui-popup-state/hooks\";\nimport React from \"react\";\nimport { useExportFullCSV } from \"utilities\";\nimport \"./CSVActions.scss\";\n\n/* Hamburger with options for the CSV */\nexport const CSVActions = () => {\n  const popupState = usePopupState({ popupId: \"menu\", variant: \"popover\" });\n  const onFullExportClick = useExportFullCSV();\n\n  return (\n    <>\n      <IconButton color=\"inherit\" edge=\"start\" {...bindTrigger(popupState)}>\n        <MenuIcon />\n      </IconButton>\n      <Menu // Anchoring from: https://codesandbox.io/s/3rmgv?file=/demo.js:603-812\n        anchorOrigin={{\n          horizontal: \"right\",\n          vertical: \"top\",\n        }}\n        getContentAnchorEl={null}\n        transformOrigin={{\n          horizontal: \"left\",\n          vertical: \"top\",\n        }}\n        {...bindMenu(popupState)}\n      >\n        <ImportInputWrapper isAdditiveImport={false}>\n          <MenuItem button>IMPORT NEW SCHEDULE</MenuItem>\n        </ImportInputWrapper>\n        <ImportInputWrapper isAdditiveImport>\n          <MenuItem button>ADD SCHEDULE</MenuItem>\n        </ImportInputWrapper>\n        <MenuItem button onClick={onFullExportClick}>\n          EXPORT CSV\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n","import { Button, ButtonProps } from \"@material-ui/core\";\nimport { ImportInputWrapper } from \"components\";\nimport React from \"react\";\nimport \"../CSVActions.scss\";\n\n/* An import button that is stylable using the Mat UI props. */\nexport const ImportButton = (btnProps: ButtonProps) => {\n  return (\n    <ImportInputWrapper>\n      <Button color=\"primary\" component=\"span\" {...btnProps}>\n        Import Schedule\n      </Button>\n    </ImportInputWrapper>\n  );\n};\n","import { Box } from \"@material-ui/core\";\nimport { AddSectionButton, ImportButton } from \"components\";\nimport React from \"react\";\nimport \"./NoCoursesHeader.scss\";\n\n/* Display information when schedule has no courses. */\nexport const NoCoursesHeader = () => {\n  return (\n    <>\n      <h2>No schedule data.</h2>\n      <p>\n        Please import a CSV of an existing schedule or start building the schedule from scratch by\n        adding your first section.\n      </p>\n      <Box component=\"span\" marginRight={1}>\n        <ImportButton variant=\"contained\" />\n      </Box>\n      <AddSectionButton isIcon={false} />\n    </>\n  );\n};\n","import { Box, Typography } from \"@material-ui/core\";\nimport React, { PropsWithChildren } from \"react\";\n\ninterface TabPanelProps {\n  index: number;\n  value: number;\n}\n\n/* TabPanel displays the content of a selected tab */\nexport const TabPanel = (props: PropsWithChildren<TabPanelProps>) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      aria-labelledby={`simple-tab-${index}`}\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      role=\"tabpanel\"\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography component=\"div\">{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n};\n","import { Container, Tab, Tabs as MUITabs, Typography } from \"@material-ui/core\";\nimport { AsyncComponent } from \"components\";\nimport { DepartmentSchedule, FacultyLoads, FacultySchedule, RoomsSchedule } from \"components/Tabs\";\nimport React, { ChangeEvent, useContext, useState } from \"react\";\nimport { AppContext } from \"utilities/contexts\";\nimport { SchedulizerTab } from \"utilities/interfaces\";\nimport { CSVActions, NoCoursesHeader, TabPanel } from \"./tabComponents\";\nimport \"./Tabs.scss\";\n\n/* A navigator between the different features of the app */\nexport const Tabs = () => {\n  const {\n    appState: { schedule, schedulizerTab },\n    isCSVLoading,\n    appDispatch,\n  } = useContext(AppContext);\n  const [tabValue, setTabValue] = useState(schedulizerTab || 0);\n\n  const handleTabChange = (event: ChangeEvent<{}>, newValue: SchedulizerTab) => {\n    setTabValue(newValue);\n    appDispatch({ payload: { schedulizerTab: newValue }, type: \"setSchedulizerTab\" });\n  };\n\n  const scheduleHasCourses = schedule.courses.length > 0;\n\n  return (\n    <AsyncComponent isLoading={isCSVLoading}>\n      <AsyncComponent.Loading>Parsing CSV...</AsyncComponent.Loading>\n      <AsyncComponent.Loaded>\n        {scheduleHasCourses ? (\n          <>\n            <Container className=\"schedulizer-header\" maxWidth={false}>\n              <CSVActions />\n\n              <MUITabs\n                centered\n                indicatorColor=\"primary\"\n                onChange={handleTabChange}\n                textColor=\"primary\"\n                value={tabValue}\n              >\n                <Tab label=\"Faculty Schedule\" />\n                <Tab label=\"Room Schedule\" />\n                <Tab label=\"Dept Schedule\" />\n                <Tab label=\"Teaching Loads\" />\n                <Tab label=\"Conflicts\" />\n              </MUITabs>\n              <span>{/* Empty */}</span>\n            </Container>\n            <TabPanel index={0} value={tabValue}>\n              <FacultySchedule />\n            </TabPanel>\n            <TabPanel index={1} value={tabValue}>\n              <RoomsSchedule />\n            </TabPanel>\n            <TabPanel index={2} value={tabValue}>\n              <DepartmentSchedule />\n            </TabPanel>\n            <TabPanel index={3} value={tabValue}>\n              <FacultyLoads />\n            </TabPanel>\n            <TabPanel index={4} value={tabValue}>\n              <Typography>The conflicts tab is not supported yet.</Typography>\n            </TabPanel>\n          </>\n        ) : (\n          <NoCoursesHeader />\n        )}\n      </AsyncComponent.Loaded>\n    </AsyncComponent>\n  );\n};\n","import { InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport React, { ChangeEvent, useContext } from \"react\";\nimport { AppContext } from \"utilities/contexts\";\nimport { ColorBy } from \"utilities/interfaces\";\nimport \"./ColorSelector.scss\";\n\nexport const ColorSelector = () => {\n  const {\n    appState: { colorBy },\n    appDispatch,\n    setIsCSVLoading,\n  } = useContext(AppContext);\n\n  const handleColorChange = (event: ChangeEvent<{ value: unknown }>) => {\n    setIsCSVLoading(true);\n    const selectedColorBy = event.target.value as ColorBy;\n    appDispatch({ payload: { colorBy: selectedColorBy }, type: \"setColorBy\" });\n    setIsCSVLoading(false);\n  };\n\n  return (\n    <div>\n      <InputLabel id=\"label\">Color By</InputLabel>\n      <Select id=\"color-select\" onChange={handleColorChange} value={colorBy}>\n        <MenuItem value={ColorBy.Level}>Level</MenuItem>\n        <MenuItem value={ColorBy.Room}>Room</MenuItem>\n        <MenuItem value={ColorBy.Instructor}>Instructor</MenuItem>\n        <MenuItem value={ColorBy.Prefix}>Prefix</MenuItem>\n      </Select>\n    </div>\n  );\n};\n","import { AddSectionButton, ColorSelector, Searchbar, SemesterSelector } from \"components\";\nimport React, { useContext } from \"react\";\nimport { AppContext } from \"utilities/contexts\";\nimport \"./ScheduleToolbar.scss\";\n\nexport const ScheduleToolbar = () => {\n  const {\n    appState: { fileUrl },\n  } = useContext(AppContext);\n\n  return (\n    <div className=\"schedule-toolbar\">\n      <div className=\"toolbar-left\">\n        <Searchbar />\n        <ColorSelector />\n      </div>\n      <div>{fileUrl ? `Imported URL: ${fileUrl}` : \"\"}</div>\n      <div className=\"toolbar-right\">\n        <SemesterSelector />\n        <AddSectionButton />\n      </div>\n    </div>\n  );\n};\n","import { TextField } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport React from \"react\";\nimport \"./Searchbar.scss\";\n\nexport const Searchbar = () => {\n  return (\n    <Autocomplete\n      className=\"searchbar\"\n      getOptionLabel={(option) => {\n        return option.label;\n      }}\n      id=\"combo-box-demo\"\n      options={notSupported}\n      renderInput={(params) => {\n        return <TextField {...params} label=\"Search\" variant=\"outlined\" />;\n      }}\n    />\n  );\n};\n\nconst notSupported = [{ label: \"The searchbar is not supported yet.\" }];\n","import { IconButton, Typography } from \"@material-ui/core\";\nimport { ChevronLeft, ChevronRight } from \"@material-ui/icons\";\nimport React, { useContext } from \"react\";\nimport { enumArray, Term } from \"utilities\";\nimport { AppContext, ScheduleContext } from \"utilities/contexts\";\nimport \"./SemesterSelector.scss\";\n\nexport const SemesterSelector = () => {\n  const terms: Term[] = enumArray(Term);\n  const {\n    appState: { selectedTerm },\n    appDispatch,\n  } = useContext(AppContext);\n  const { setIsScheduleLoading } = useContext(ScheduleContext);\n\n  const handleOnClick = (index: number) => {\n    return async () => {\n      setIsScheduleLoading(true);\n      const newTerm = terms[index];\n      // This action takes so long it affectively makes this\n      //  synchronous function asynchronous.\n      await appDispatch({\n        payload: { selectedTerm: newTerm },\n        type: \"setSelectedTerm\",\n      });\n      setIsScheduleLoading(false);\n    };\n  };\n\n  return (\n    <div className=\"semester-selector\">\n      <IconButton\n        disabled={selectedTerm === terms[0]}\n        onClick={handleOnClick(terms.indexOf(selectedTerm) - 1)}\n      >\n        <ChevronLeft />\n      </IconButton>\n      <Typography variant=\"h6\">{selectedTerm}</Typography>\n      <IconButton\n        disabled={selectedTerm === terms[terms.length - 1]}\n        onClick={handleOnClick(terms.indexOf(selectedTerm) + 1)}\n      >\n        <ChevronRight />\n      </IconButton>\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { App } from \"components\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"serviceWorker\";\nimport \"styles/index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { camelCase, forEach } from \"lodash\";\nimport moment from \"moment\";\nimport { useContext } from \"react\";\nimport { DeepMap, FieldError } from \"react-hook-form\";\nimport { insertSectionCourse } from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\nimport {\n  AppAction,\n  Course,\n  CourseSectionMeeting,\n  SchedulizerTab,\n  Section,\n  Term,\n} from \"utilities/interfaces\";\nimport {\n  createEventClassName,\n  handleOldMeeting,\n  mapInputToInternalTypes,\n  NonTeachingLoadInput,\n  SectionInput,\n} from \"utilities/services\";\nimport { mapNonTeachingLoadInput } from \"utilities/services/addNonTeachingLoadService\";\n\ninterface MappedSection {\n  newCourse: Course;\n  newSection: Section;\n}\n\ninterface AddToScheduleParams {\n  newCourse: Course;\n  newSection: Section;\n  oldData: CourseSectionMeeting | undefined;\n  removeOldMeeting: boolean;\n}\n\nexport const useAddSectionToSchedule = () => {\n  const {\n    appState: { schedule, selectedTerm, schedulizerTab },\n    appDispatch,\n    setIsCSVLoading,\n  } = useContext(AppContext);\n\n  // Update the schedule via pass by sharing.\n  const addSectionToSchedule = async (\n    data: SectionInput,\n    oldData: CourseSectionMeeting | undefined,\n    removeOldMeeting = false,\n  ) => {\n    setIsCSVLoading(true);\n    const { newSection, newCourse }: MappedSection = mapInputToInternalTypes(data);\n    addToSchedule({ newCourse, newSection, oldData, removeOldMeeting });\n\n    // Depending on the current tab, scroll to the updated/added section/row\n    if (schedulizerTab === SchedulizerTab.Faculty || schedulizerTab === SchedulizerTab.Room) {\n      await switchToCorrectTerm(newSection, selectedTerm, appDispatch);\n      setIsCSVLoading(false);\n      scrollToUpdatedSection(newCourse, newSection);\n    } else if (schedulizerTab === SchedulizerTab.Loads) {\n      setIsCSVLoading(false);\n      // TODO: This may not be the row clicked on if there are multiple instructors?\n      scrollToUpdatedFacultyRow(newSection.instructors[newSection.instructors.length - 1]);\n    } else {\n      setIsCSVLoading(false);\n    }\n  };\n\n  const addNonTeachingLoadToSchedule = (\n    data: NonTeachingLoadInput,\n    oldData: CourseSectionMeeting | undefined,\n    removeOldMeeting = false,\n  ) => {\n    setIsCSVLoading(true);\n    const { newCourse, newSection }: MappedSection = mapNonTeachingLoadInput(data);\n    addToSchedule({ newCourse, newSection, oldData, removeOldMeeting });\n    setIsCSVLoading(false);\n    scrollToUpdatedFacultyRow(newSection.instructors[newSection.instructors.length - 1]);\n  };\n\n  const addToSchedule = ({\n    newCourse,\n    newSection,\n    oldData,\n    removeOldMeeting,\n  }: AddToScheduleParams) => {\n    newSection.timestamp = moment().format();\n    handleOldMeeting(oldData, newSection, newCourse, removeOldMeeting, schedule);\n    insertSectionCourse(schedule, newSection, newCourse);\n    appDispatch({ payload: { schedule }, type: \"setScheduleData\" });\n  };\n\n  return { addNonTeachingLoadToSchedule, addSectionToSchedule };\n};\n\nconst switchToCorrectTerm = async (\n  newSection: Section,\n  currentTerm: Term,\n  appDispatch: React.Dispatch<AppAction> | (() => void),\n) => {\n  const newTerm = Array.isArray(newSection.term) ? newSection.term[0] : newSection.term;\n  if (newTerm !== currentTerm) {\n    await appDispatch({\n      payload: { selectedTerm: newTerm },\n      type: \"setSelectedTerm\",\n    });\n  }\n};\n\nconst scrollToUpdatedSection = (newCourse: Course, newSection: Section) => {\n  let className = \"\";\n  let newElement: Element | undefined;\n  const newSectionName = `${newCourse.prefixes[0]}-${newCourse.number}-${newSection.letter}`;\n  forEach(newSection.instructors, (prof) => {\n    forEach(newSection.meetings, (meeting) => {\n      const room = `${meeting.location.building}_${meeting.location.roomNumber}`;\n      className = createEventClassName(newSectionName, room, prof);\n      const newElements = document.getElementsByClassName(className);\n      if (newElements) {\n        newElement = newElements.item(newElements.length - 1) ?? undefined;\n      }\n    });\n  });\n  if (newElement && newElement.parentElement?.parentElement) {\n    newElement.scrollIntoView(false);\n  }\n};\n\nconst scrollToUpdatedFacultyRow = (instructor: string) => {\n  const id = getIdFromFaculty(instructor);\n  const row = document.getElementById(id);\n  if (row !== null) {\n    row.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n  }\n};\n\n// a helper to provide consistent naming and retrieve error messages\nexport const useInput = <T>(label: string, errors: DeepMap<T, FieldError>) => {\n  const name = camelCase(label);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const errorMessage = (errors[name as keyof T] as any)?.message;\n  return { errorMessage, name };\n};\n\nexport const getIdFromFaculty = (faculty: string) => {\n  return faculty.replace(/ /g, \"-\");\n};\n","import { useContext } from \"react\";\nimport { AppContext } from \"utilities/contexts\";\nimport { CourseSectionMeeting } from \"utilities/interfaces\";\nimport { removeMeetingFromSchedule } from \"utilities/services\";\n\nexport const useDeleteMeetingFromSchedule = () => {\n  const {\n    appState: { schedule },\n    appDispatch,\n    setIsCSVLoading,\n  } = useContext(AppContext);\n\n  // Update the schedule via pass by sharing.\n  const deleteMeetingFromSchedule = (data: CourseSectionMeeting | undefined) => {\n    const meeting = data?.meeting;\n    const section = data?.section;\n    const course = data?.course;\n    setIsCSVLoading(true);\n    removeMeetingFromSchedule(data, schedule, meeting, section, course);\n    appDispatch({ payload: { schedule }, type: \"setScheduleData\" });\n    setIsCSVLoading(false);\n  };\n\n  return { deleteMeetingFromSchedule };\n};\n","import { useContext } from \"react\";\nimport { AppContext } from \"utilities/contexts\";\n\n/** Get a handle on the app context.\n *  Uses one import in files rather than two.\n */\nexport const useAppContext = () => {\n  return useContext(AppContext);\n};\n","import download from \"js-file-download\";\nimport moment from \"moment\";\nimport { useContext } from \"react\";\nimport { scheduleToCSVString, scheduleToNonTeachingCSVString } from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\n\n// Deprecated, TODO: Remove this function?\n/* Hook that downloads the current schedule when onExportClick\n is executed. */\nexport const useExportCSV = () => {\n  const {\n    appState: { schedule },\n  } = useContext(AppContext);\n\n  const onExportClick = () => {\n    // TODO: maybe generate a cool title like schedule-fall-2020.csv\n    download(scheduleToCSVString(schedule), `schedule_${moment().format()}.csv`);\n    const nonTeachingCSV = scheduleToNonTeachingCSVString(schedule);\n    if (nonTeachingCSV) {\n      download(nonTeachingCSV, `non_teaching_${moment().format()}.csv`);\n    }\n  };\n  return onExportClick;\n};\n","import download from \"js-file-download\";\nimport moment from \"moment\";\nimport { useContext } from \"react\";\nimport { scheduleToFullCSVString, scheduleToNonTeachingCSVString } from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\n\n/* Hook that downloads the current schedule when onFullExportClick\n is executed. */\nexport const useExportFullCSV = () => {\n  const {\n    appState: { schedule },\n  } = useContext(AppContext);\n\n  const onFullExportClick = () => {\n    // TODO: maybe generate a cool title like full-schedule-fall-2020.csv\n    download(scheduleToFullCSVString(schedule), `full_schedule_${moment().format()}.csv`);\n    const nonTeachingCSV = scheduleToNonTeachingCSVString(schedule);\n    if (nonTeachingCSV) {\n      download(nonTeachingCSV, `non_teaching_${moment().format()}.csv`);\n    }\n  };\n  return onFullExportClick;\n};\n","import React from \"react\";\nimport { FieldValues } from \"react-hook-form\";\nimport { AllFormMethods, FieldArrayFormProviderProps } from \"utilities\";\n\n/** Creates a Context for a FieldArrayForm Instance */\nconst FieldArrayFormContext = React.createContext<AllFormMethods | null>(null);\nFieldArrayFormContext.displayName = \"RHFArrayContext\";\n\n/**\n * Allows a component inside the FieldArrayFormContext access to all of the\n *   methods and other data in the FieldArrayForm\n * @returns AllFormMethods\n */\nexport const useFieldArrayFormContext = <TFieldValues extends FieldValues>(): AllFormMethods<\n  TFieldValues\n> => {\n  return React.useContext(FieldArrayFormContext) as AllFormMethods<TFieldValues>;\n};\n\n/**\n * A provider that has AllFormMethods within it. Used with FieldArrayForms\n */\nexport const FieldArrayFormProvider = <TFieldValues extends FieldValues>({\n  children,\n  ...props\n}: FieldArrayFormProviderProps<TFieldValues>) => {\n  return (\n    <FieldArrayFormContext.Provider value={{ ...props } as AllFormMethods}>\n      {children}\n    </FieldArrayFormContext.Provider>\n  );\n};\n","import { Assignments, ClassLimits } from \"@harmoniously/react\";\nimport { immer } from \"utilities\";\nimport create, { State } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\n\n/**\n * A hook to get access to a global store containing assignment data for Harmony\n * Persists the value in localStorage\n */\nexport const useHarmonyAssignmentsStore = create<HarmonyAssignmentsState>(\n  persist(\n    immer<HarmonyAssignmentsState>((set) => {\n      return {\n        assignments: {},\n        setClass: (className: string, attributes: ClassLimits) => {\n          return set((state) => {\n            state.assignments[className] = attributes;\n          });\n        },\n      };\n    }),\n    {\n      name: \"harmonyAssignmentsState\",\n    },\n  ),\n);\n\nexport interface HarmonyAssignmentsState extends State {\n  assignments: Assignments;\n  setClass: (className: string, setAttributes: ClassLimits) => void;\n}\n","import { Result } from \"@harmoniously/react\";\nimport { Day, Schedule, SemesterLength, Term } from \"utilities/interfaces\";\nimport create, { GetState, SetState, State } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\n\nexport const useHarmonyResultStore = create<HarmonyResultState>(\n  persist<HarmonyResultState>(\n    (set: SetState<HarmonyResultState>, get: GetState<HarmonyResultState>) => {\n      return {\n        result: {},\n        schedule: { courses: [] },\n        setResult: (res: Result) => {\n          set({ result: res, schedule: convertToSchedule(res) });\n        },\n      };\n    },\n    {\n      name: \"harmonyResultState\",\n    },\n  ),\n);\n\nexport interface HarmonyResultState extends State {\n  result: Result;\n  schedule: Schedule;\n  setResult: (result: Result) => void;\n}\n\n/** Convert the assignments to a schedule object. */\nconst convertToSchedule = (result: Result): Schedule => {\n  const schedule: Schedule = { courses: [] };\n  if (result !== undefined) {\n    Object.keys(result).forEach((course) => {\n      // TODO update this.\n      const [prefix, number, letter] = course.split(\"-\");\n      const courseObject = result[course];\n      const { professor, time, room } = courseObject;\n      const [building, roomNumber] = room.split(\" \");\n\n      schedule.courses.push({\n        department: \"\",\n        name: \"\",\n        number,\n        prefixes: [prefix],\n        sections: [\n          {\n            comments: \"\",\n            endDate: \"1/1/21\",\n            facultyHours: -1,\n            instructionalMethod: \"\",\n            instructors: [professor],\n            letter,\n            meetings: [\n              {\n                days: [Day.Monday, Day.Wednesday, Day.Friday],\n                duration: 50,\n                location: { building, roomNumber },\n                startTime: time,\n              },\n            ],\n            semesterLength: SemesterLength.Full,\n            startDate: \"01/01/21\",\n            status: \"\",\n            studentHours: -1,\n            term: Term.Fall,\n            termStart: \"01/01/21\",\n            year: -1,\n          },\n        ],\n      });\n    });\n  }\n\n  return schedule;\n};\n","import { isEqual } from \"lodash\";\nimport { ChangeEvent, useContext } from \"react\";\nimport { csvStringToSchedule, insertSectionCourse, Schedule } from \"utilities\";\nimport { AppContext } from \"utilities/contexts\";\nimport { read, utils } from \"xlsx\";\n\n/**\n * Hook that returns function to handle file uploaded\n *   and store it in local state.\n *\n * @param  {boolean} isAdditiveImport\n * @returns void\n *\n * Ref: https://stackoverflow.com/questions/5201317/read-the-contents-of-a-file-object\n */\nexport const useImportFile = (isAdditiveImport: boolean) => {\n  const {\n    appState: { schedule },\n    appDispatch,\n    setIsCSVLoading,\n  } = useContext(AppContext);\n\n  /**\n   * Used to handle changes to inputs when files are uploaded.\n   */\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setIsCSVLoading(true);\n\n    const file: File | null = e.target.files && e.target.files[0];\n    const fileNameTokens = file?.name.split(\".\") || [];\n    const fileType = fileNameTokens[fileNameTokens.length - 1];\n    const reader = new FileReader();\n    let scheduleJSON: Schedule;\n\n    switch (fileType) {\n      case \"xlsx\": {\n        file && reader.readAsArrayBuffer(file);\n        break;\n      }\n      case \"csv\": {\n        file && reader.readAsBinaryString(file);\n        break;\n      }\n      default: {\n        throw Error(`FileType ${fileType} not supported.`);\n      }\n    }\n\n    reader.onloadend = async () => {\n      let scheduleString: string;\n      if (fileType === \"xlsx\") {\n        scheduleString = getCSVFromXLSXData(reader.result as ArrayBufferLike);\n      } else {\n        scheduleString = String(reader.result);\n      }\n      scheduleJSON = csvStringToSchedule(scheduleString);\n\n      !isAdditiveImport && appDispatch({ payload: { fileUrl: \"\" }, type: \"setFileUrl\" });\n      await updateScheduleInContext(schedule, scheduleJSON, appDispatch, isAdditiveImport);\n      setIsCSVLoading(false);\n    };\n  };\n\n  return onInputChange;\n};\n\n/**\n * Update the Schedule information in the context\n * @param currentSchedule\n * @param newSchedule\n * @param appDispatch\n * @param isAdditiveImport\n *\n * Ref: https://stackoverflow.com/a/57214316/9931154\n */\nexport const updateScheduleInContext = async (\n  currentSchedule: Schedule,\n  newSchedule: Schedule,\n  appDispatch: AppContext[\"appDispatch\"],\n  isAdditiveImport = false,\n) => {\n  if (!isEqual(currentSchedule, newSchedule)) {\n    let newScheduleData: Schedule;\n    if (isAdditiveImport) {\n      newScheduleData = combineSchedules(currentSchedule, newSchedule);\n    } else {\n      newScheduleData = newSchedule;\n    }\n    await appDispatch({ payload: { schedule: newScheduleData }, type: \"setScheduleData\" });\n  }\n};\n\n/**\n * Convert XLSX Data to CSV\n *\n * @param  {ArrayBufferLike} xlsxData\n * @returns string\n */\nexport const getCSVFromXLSXData = (xlsxData: ArrayBufferLike): string => {\n  const data = new Uint8Array(xlsxData);\n  const workBook = read(data, { type: \"array\" });\n  const firstSheet = workBook.Sheets[workBook.SheetNames[0]];\n  return utils.sheet_to_csv(firstSheet);\n};\n\n/**\n * Combine two schedule courses together.\n *\n * @param  {Schedule} currentSchedule\n * @param  {Schedule} newSchedule\n */\nconst combineSchedules = (currentSchedule: Schedule, newSchedule: Schedule) => {\n  newSchedule.courses.forEach((newCourse) => {\n    newCourse.sections.forEach((newSection) => {\n      currentSchedule = insertSectionCourse(currentSchedule, newSection, newCourse);\n    });\n  });\n  return currentSchedule;\n};\n","import { useHistory } from \"react-router-dom\";\n\n/** Hook that uses history to programmatically\n *   route to a new page. Returns a function\n *   routeTo: (path: string) => void\n */\nexport const useRedirect = () => {\n  const history = useHistory();\n\n  return (path: string) => {\n    history.push(path);\n  };\n};\n","export * from \"./appInterfaces\";\nexport * from \"./dataInterfaces\";\nexport * from \"./fieldArrayTypes\";\nexport * from \"./popover\";\n","import { cloneDeep, forEach } from \"lodash\";\nimport moment from \"moment\";\nimport { emptyMeeting } from \"utilities/constants\";\nimport { Course, Day, Meeting, Section, SemesterLength, Term } from \"utilities/interfaces\";\n\nexport interface CaseCallbackParams {\n  course: Course;\n  meetings: Meeting[];\n  section: Section;\n}\n\nexport const MIN_HALF_LENGTH = 35;\nexport const MAX_HALF_LENGTH = 80;\nconst SEPARATORS = [\",\", \";\", \"\\n\"];\n\n// Define regexes for parsing\n// const timeReg = RegExp(\"(?<![1-9])(1[0-9]|2[0-3]|[0-9]):([0-5][0-9])\");\n// const amReg = RegExp(\"[Aa][Mm]\");\n// const pmReg = RegExp(\"[Pp][Mm]\");\nconst fallReg = RegExp(\"[Ff]\");\nconst summerReg = RegExp(\"[Ss][Uu]|[Mm][Aa]\");\nconst springReg = RegExp(\"[Ss](?![Uu])\");\n// \"W\" represents interim in Pruim's system it seems\nconst interimReg = RegExp(\"[Ii]|[Ww]\");\nconst sunReg = RegExp(\"[Ss][Uu]|[Nn]\");\nconst monReg = RegExp(\"[Mm]\");\nconst tuesReg = RegExp(\"[Tt](?![Hh])\");\nconst wedReg = RegExp(\"[Ww]\");\nconst thursReg = RegExp(\"[Tt][Hh]|[Rr]\");\nconst friReg = RegExp(\"[Ff]\");\nconst satReg = RegExp(\"[Ss](?![Uu])\");\n\nconst createMeetings = (value: string, { meetings }: CaseCallbackParams): string[] => {\n  const valueParts = value.split(\"\\n\");\n  valueParts.forEach((_, i) => {\n    if (meetings.length <= i) {\n      // If there aren't enough meetings, create a new one\n      meetings.push(cloneDeep(emptyMeeting));\n    }\n  });\n  return valueParts;\n};\n\nconst assignWithMeetings = (\n  value: string,\n  params: CaseCallbackParams,\n  arrAssign: (value: string, i: number, arr: Meeting[]) => void,\n) => {\n  const valueParts = createMeetings(value, params);\n  const { meetings } = params;\n  valueParts.forEach((v, i) => {\n    arrAssign(v, i, meetings);\n  });\n};\n\nexport const startTimeCallback = (value: string, params: CaseCallbackParams) => {\n  assignWithMeetings(value, params, (startTime, i, meetings) => {\n    meetings[i].startTime = startTimeCase(startTime);\n  });\n};\n\nexport const locationCallback = (value: string, params: CaseCallbackParams) => {\n  assignWithMeetings(value, params, (location, i, meetings) => {\n    [meetings[i].location.building, meetings[i].location.roomNumber] = locationCase(location);\n  });\n};\n\nexport const termCallback = (value: string, { section }: CaseCallbackParams) => {\n  let separator = \",\";\n  if (\n    SEPARATORS.some((s) => {\n      separator = s;\n      return value.includes(s);\n    })\n  ) {\n    const terms = value.split(separator);\n    const termsArr: Term[] = [];\n    forEach(terms, (term) => {\n      termsArr.push(termCase(term));\n    });\n    section.term = termsArr;\n  } else {\n    section.term = value === \"\" ? [] : termCase(value);\n  }\n};\n\nexport const semesterLengthCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.semesterLength = semesterLengthCase(value);\n};\n\nexport const daysCallback = (value: string, params: CaseCallbackParams) => {\n  assignWithMeetings(value, params, (days, i, meetings) => {\n    meetings[i].days = daysCase(days);\n  });\n};\n\nexport const instructorCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.instructors = instructorCase(value);\n};\n\nexport const prefixCallback = (value: string, { course }: CaseCallbackParams) => {\n  course.prefixes = value === \"\" ? [] : prefixCase(value);\n};\n\nexport const nameCallback = (value: string, { course }: CaseCallbackParams) => {\n  course.name = value;\n};\n\nexport const numberCallback = (value: string, { course }: CaseCallbackParams) => {\n  course.number = value;\n};\n\nexport const letterCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.letter = value;\n};\n\nexport const globalMaxCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.globalMax = integerDefaultZeroCase(value);\n};\n\nexport const localMaxCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.localMax = integerDefaultZeroCase(value);\n};\n\nexport const anticipatedSizeCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.anticipatedSize = integerDefaultZeroCase(value);\n};\n\nexport const commentsCallback = (value: string, { section }: CaseCallbackParams) => {\n  if (value.trim() !== \"\") {\n    section.comments = value;\n  }\n};\n\nexport const yearCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.year = yearCase(value);\n};\n\nexport const studentHoursCallback = (value: string, { section }: CaseCallbackParams) => {\n  // Remove '$' is Excel prepended it to the student hours\n  section.studentHours = value.startsWith(\"$\") ? Number(value.substr(1)) : Number(value);\n};\n\nexport const facultyHoursCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.facultyHours = value.startsWith(\"$\") ? Number(value.substr(1)) : Number(value);\n};\n\nexport const durationCallback = (value: string, params: CaseCallbackParams) => {\n  assignWithMeetings(value, params, (duration, i, meetings) => {\n    meetings[i].duration = durationCase(duration);\n  });\n};\n\nexport const roomCapacityCallback = (value: string, params: CaseCallbackParams) => {\n  assignWithMeetings(value, params, (capacity, i, meetings) => {\n    meetings[i].location.roomCapacity =\n      value.trim() === \"\" ? undefined : integerDefaultZeroCase(capacity);\n  });\n};\n\nexport const departmentCallback = (value: string, { course }: CaseCallbackParams) => {\n  course.department = value;\n};\n\nexport const termStartCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.termStart = value;\n};\n\nexport const usedCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.used = integerDefaultZeroCase(value);\n};\n\nexport const day10UsedCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.day10Used = integerDefaultZeroCase(value);\n};\n\nexport const startDateCallback = (value: string, { section }: CaseCallbackParams) => {\n  if (value.trim() !== \"\") {\n    section.startDate = value;\n  }\n};\n\nexport const endDateCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.endDate = value;\n  section.semesterLength = endDateCase(value, section.startDate);\n};\n\nexport const statusCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.status = value;\n};\n\nexport const timestampCallback = (value: string, { section }: CaseCallbackParams) => {\n  if (value.trim() !== \"\") {\n    section.timestamp = value;\n  }\n};\n\nexport const instructionalMethodCallback = (value: string, { section }: CaseCallbackParams) => {\n  section.instructionalMethod = value;\n};\n\nexport const sectionCallback = (value: string, params: CaseCallbackParams) => {\n  if (value === \"--\" || value.trim() === \"\") {\n    params.section.isNonTeaching = true;\n  } else {\n    const sectionParts = value.split(\"-\");\n    prefixCallback(sectionParts[0], params);\n    numberCallback(sectionParts[1], params);\n    letterCallback(sectionParts[2], params);\n  }\n};\n\nexport const timeCallback = (value: string, params: CaseCallbackParams) => {\n  const [startTime] = value.split(\" \").join(\"\").split(\"-\");\n  startTimeCallback(startTime, params);\n  durationCallback(value, params);\n};\n\nexport const nonTeachingActivityCallback = (value: string, params: CaseCallbackParams) => {\n  params.section.isNonTeaching = true;\n  instructionalMethodCallback(value, params);\n};\n\nexport const startTimeCase = (value: string): string => {\n  const startMoment = moment(value, \"h:mm A\");\n  return startMoment.isValid() ? startMoment.format(\"h:mm A\") : \"\";\n};\n\nexport const locationCase = (value: string): string[] => {\n  if (value) {\n    const roomParts = value.trim().split(\" \");\n    if (roomParts.length === 1) {\n      // No room number given\n      return [roomParts[0], \"\"];\n    }\n    if (roomParts.length === 2) {\n      // Building and room number given\n      return roomParts;\n    }\n    // Too many room parts given, assume last part is room number and rest is building\n    return [roomParts.slice(0, -1).join(\" \"), roomParts.slice(-1)[0]];\n  }\n  return [];\n};\n\nexport const termCase = (value: string): Term => {\n  if (fallReg.test(value)) {\n    return Term.Fall;\n  }\n  if (summerReg.test(value)) {\n    return Term.Summer;\n  }\n  if (springReg.test(value)) {\n    return Term.Spring;\n  }\n  if (interimReg.test(value)) {\n    return Term.Interim;\n  }\n  // eslint-disable-next-line no-console\n  console.log(`Term of \"${value}\" is unreadable, defaulting to Fall`);\n  return Term.Fall;\n};\n\nexport const semesterLengthCase = (value: string): SemesterLength => {\n  const upperValue = value.toUpperCase();\n  const lowerValue = value.toLowerCase();\n  if (lowerValue === \"first\") {\n    return SemesterLength.HalfFirst;\n  }\n  if (lowerValue === \"second\") {\n    return SemesterLength.HalfSecond;\n  }\n  if (lowerValue === \"full\") {\n    return SemesterLength.Full;\n  }\n  if (upperValue === \"A\") {\n    return SemesterLength.IntensiveA;\n  }\n  if (upperValue === \"B\") {\n    return SemesterLength.IntensiveB;\n  }\n  if (upperValue === \"C\") {\n    return SemesterLength.IntensiveC;\n  }\n  if (upperValue === \"D\") {\n    return SemesterLength.IntensiveD;\n  }\n  // eslint-disable-next-line no-console\n  console.log(`Half of \"${value}\" is unreadable, defaulting to Full`);\n  return SemesterLength.Full;\n};\n\nexport const daysCase = (value: string) => {\n  const days: Day[] = [];\n  if (sunReg.test(value)) {\n    days.push(Day.Sunday);\n  }\n  if (monReg.test(value)) {\n    days.push(Day.Monday);\n  }\n  if (tuesReg.test(value)) {\n    days.push(Day.Tuesday);\n  }\n  if (wedReg.test(value)) {\n    days.push(Day.Wednesday);\n  }\n  if (thursReg.test(value)) {\n    days.push(Day.Thursday);\n  }\n  if (friReg.test(value)) {\n    days.push(Day.Friday);\n  }\n  if (satReg.test(value)) {\n    days.push(Day.Saturday);\n  }\n  return days;\n};\n\nexport const instructorCase = (value: string): string[] => {\n  const instructors = value.split(/[;,\\n]/);\n  return instructors.map((instructor) => {\n    return instructor.trim();\n  });\n};\n\nexport const endDateCase = (\n  value: string,\n  startSectionDate: string | undefined,\n): SemesterLength => {\n  const sectionStart = moment(startSectionDate, \"l\");\n  const sectionEnd = moment(value, \"l\");\n  const sectionLength = sectionEnd.diff(sectionStart, \"days\");\n  const startMonth = sectionStart.month();\n  const firstStartMonths = [0, 1, 7, 8]; // Jan, Feb, Aug, Sept\n  if (sectionLength > MAX_HALF_LENGTH || value.trim() === \"\") {\n    return SemesterLength.Full;\n  }\n  if (sectionLength > MIN_HALF_LENGTH && sectionLength <= MAX_HALF_LENGTH) {\n    return firstStartMonths.includes(startMonth)\n      ? SemesterLength.HalfFirst\n      : SemesterLength.HalfSecond;\n  }\n  // TODO: Figure out if intensive is A, B, C, or D\n  return SemesterLength.IntensiveA;\n};\n\nexport const prefixCase = (value: string): string[] => {\n  return value.replace(\" \", \"\").split(/[;,\\n]/);\n};\n\nexport const integerDefaultZeroCase = (value: string): number | undefined => {\n  return value.trim() === \"\" ? undefined : Number.isInteger(Number(value)) ? Number(value) : 0;\n};\n\nexport const durationCase = (value: string): number => {\n  if (Number.isInteger(Number(value))) {\n    return Number(value);\n  }\n  const [startTime, endTime] = value.split(\" \").join(\"\").split(\"-\");\n  const startTimeMoment = moment(startTime, \"h:mmA\");\n  const endTimeMoment = moment(endTime, \"h:mmA\");\n  return endTimeMoment.diff(startTimeMoment, \"minutes\");\n};\n\nexport const yearCase = (value: string): number | string | undefined => {\n  return value && Number.isInteger(Number(value)) ? Number(value) : value;\n};\n","import produce, { Draft } from \"immer\";\nimport { State, StateCreator } from \"zustand\";\n\n/**\n * immer is a helper function that is used as a middleware for\n *   zustand stores. This allows one to create the next immutable state\n *   by mutation the first one.\n *\n * Usage:\n *  const useStore = create(immer(set => { ... }));\n *\n * Note: immer isn't limited to zustand use.\n * Ref: https://github.com/pmndrs/zustand#middleware\n */\nexport const immer = <T extends State>(\n  config: StateCreator<T, (fn: (draft: Draft<T>) => void) => void>,\n): StateCreator<T> => {\n  return (set, get, api) => {\n    return config(\n      (fn) => {\n        return set(produce(fn) as (state: T) => T);\n      },\n      get,\n      api,\n    );\n  };\n};\n","import React, { ComponentProps, ElementType, FC, forwardRef, ReactNode } from \"react\";\nimport { getChildByName } from \"utilities\";\n\n/* Options props to pass when creating a component. */\ninterface ComponentOptions<T extends ElementType = \"div\"> {\n  Component?: T;\n  defaultProps?: Partial<ComponentProps<T>>;\n  displayName?: string;\n}\n\n/*\nThis function will create a \"pass-through\" component. It is used to create\n  sub-components that return its children so the parent component and arrange those children.\n  The parent affectively can employ \"middleware\" between the child component JSX and the JSX that is\n  rendered. This function was originally from from React-Bootstrap which has been modified under their\n  MIT license.\nRef: https://github.com/react-bootstrap/react-bootstrap/blob/072e7c5fb01b492735a9db2409909058a9976190/src/createWithBsPrefix.tsx#L16\n*/\nexport const createFC = <T extends ElementType = \"div\">(\n  prefix: string,\n  { displayName = prefix, Component, defaultProps }: ComponentOptions<T> = {},\n): FC<{}> => {\n  const subComponent = forwardRef(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ({ className, as: Tag = Component || \"div\", ...props }: any, ref) => {\n      return <Tag ref={ref} className={`${className}`} {...props} />;\n    },\n  );\n  subComponent.defaultProps = defaultProps;\n  subComponent.displayName = displayName;\n  return subComponent as FC<{}>;\n};\n\ntype Alternatives = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  alternatives?: any;\n};\n\n/*\nReturns an iterable from a \"runtypes\" union.\nRef: https://github.com/microsoft/TypeScript/issues/13542#issuecomment-282762530\n*/\nconst getUnionTypeIterable = <T extends Alternatives>(type: T): string[] => {\n  return type.alternatives.map((literal: { value: string }) => {\n    return literal.value;\n  });\n};\n\ntype Elements<T extends string> = { [key in T]?: JSX.Element };\n\n/* This gets the JSX.Elements from the children of a component and return them in an object\nRef: https://stackoverflow.com/questions/53813188/how-can-i-cast-custom-type-to-primitive-type\n*/\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const getElements = <T extends string>(children: ReactNode, type: any) => {\n  const elements: Elements<T> = {};\n  getUnionTypeIterable<T & Alternatives>(type).forEach((it: string) => {\n    // eslint-disable-next-line prefer-destructuring\n    elements[(it as unknown) as T] = getChildByName(children, it)[0];\n  });\n  return elements;\n};\n","import { cloneDeep, isEqual } from \"lodash\";\nimport papa from \"papaparse\";\nimport {\n  Course,\n  emptyCourse,\n  emptySection,\n  Meeting,\n  Schedule,\n  Section,\n  updateNonIdentifyingCourseInfo,\n  updateNonIdentifyingSectionInfo,\n} from \"utilities\";\nimport { getCourse, getSection } from \"utilities/services\";\nimport * as cf from \"./caseFunctions\";\n\ninterface ValidFields {\n  [key: string]: (value: string, data: cf.CaseCallbackParams) => void;\n}\n\nconst pruimSpreadsheetFields: ValidFields = {\n  anticipatedSize: cf.anticipatedSizeCallback,\n  comments: cf.commentsCallback,\n  days: cf.daysCallback,\n  duration: cf.durationCallback,\n  facultyHours: cf.facultyHoursCallback,\n  globalMax: cf.globalMaxCallback,\n  half: cf.semesterLengthCallback,\n  instructor: cf.instructorCallback,\n  instructors: cf.instructorCallback,\n  localMax: cf.localMaxCallback,\n  location: cf.locationCallback,\n  name: cf.nameCallback,\n  number: cf.numberCallback,\n  prefix: cf.prefixCallback,\n  prefixes: cf.prefixCallback,\n  roomCapacity: cf.roomCapacityCallback,\n  section: cf.letterCallback,\n  semesterLength: cf.semesterLengthCallback,\n  startTime: cf.startTimeCallback,\n  startTimeStr: cf.startTimeCallback,\n  studentHours: cf.studentHoursCallback,\n  term: cf.termCallback,\n  year: cf.yearCallback,\n};\n\nconst registrarSpreadsheetFields: ValidFields = {\n  AcademicYear: cf.yearCallback,\n  BuildingAndRoom: cf.locationCallback,\n  Comments: cf.commentsCallback,\n  CourseNum: cf.numberCallback,\n  Day10Used: cf.day10UsedCallback,\n  Department: cf.departmentCallback,\n  Faculty: cf.instructorCallback,\n  FacultyLoad: cf.facultyHoursCallback,\n  GlobalMax: cf.globalMaxCallback,\n  InstructionalMethod: cf.instructionalMethodCallback,\n  LastEditTimestamp: cf.timestampCallback,\n  LocalMax: cf.localMaxCallback,\n  MeetingDays: cf.daysCallback,\n  MeetingDurationMinutes: cf.durationCallback,\n  MeetingStart: cf.startTimeCallback,\n  MeetingTime: cf.timeCallback,\n  MinimumCredits: cf.studentHoursCallback,\n  RoomCapacity: cf.roomCapacityCallback,\n  SectionCode: cf.letterCallback,\n  SectionEndDate: cf.endDateCallback,\n  SectionStartDate: cf.startDateCallback,\n  SectionStatus: cf.statusCallback,\n  SemesterLength: cf.semesterLengthCallback,\n  ShortTitle: cf.nameCallback,\n  SubjectCode: cf.prefixCallback,\n  Term: cf.termCallback,\n  TermStart: cf.termStartCallback,\n  Used: cf.usedCallback,\n};\n\nconst templateSpreadsheetFields: ValidFields = {\n  Days: cf.daysCallback,\n  FacLoad: cf.facultyHoursCallback,\n  NonTeachingActivity: cf.nonTeachingActivityCallback,\n  Room: cf.locationCallback,\n  SectionName: cf.sectionCallback,\n  StuCred: cf.studentHoursCallback,\n  Terms: cf.termCallback,\n};\n\nconst callbacks: ValidFields = {\n  ...pruimSpreadsheetFields,\n  ...registrarSpreadsheetFields,\n  ...templateSpreadsheetFields,\n};\n\nexport const csvStringToSchedule = (csvString: string): Schedule => {\n  // Remove junk from Excel export to CSV\n  csvString = csvString.replace(\"ï»¿\", \"\");\n\n  // Remove title rows from template spreadsheet. Perhaps there is a better way to check if it is in the template format\n  if (csvString.startsWith(\"2\")) {\n    csvString = csvString.split(\"\\n\").slice(2).join(\"\\n\");\n  }\n\n  const objects: papa.ParseResult<never> = papa.parse(csvString, {\n    header: true,\n    skipEmptyLines: \"greedy\",\n  });\n\n  // Define variables for Schedule creation\n  const schedule: Schedule = {\n    courses: [],\n  };\n\n  // Get data and fields from the CSV\n  const { data, meta } = objects;\n  const { fields } = meta;\n\n  // Parse each row of the CSV as an object\n  data.forEach((object) => {\n    // Reset defaults\n    const section = cloneDeep(emptySection);\n    const meetings: Meeting[] = [];\n    const course: Course = cloneDeep(emptyCourse);\n\n    // Iterate through the fields of the CSV, and parse their values for this object\n    // TODO: Create a sense of priority for MeetingDurationMinutes over MeetingTime and SemesterLength over SemesterEndDate - SemesterStartDate\n    if (fields) {\n      fields.forEach((field) => {\n        const value = String(object[field]);\n        field = field.replace(/\\s/g, \"\").replace(\"(\", \"\").replace(\")\", \"\").replace(\"-\", \"\");\n        if (field in callbacks) {\n          callbacks[field as keyof ValidFields](value, { course, meetings, section });\n        }\n      });\n\n      // Insert the Section to the Schedule, either as a new Course or to an existing Course\n      section.meetings = meetings;\n      insertSectionCourse(schedule, section, course);\n    }\n  });\n  return schedule;\n};\n\n// Insert the Section to the Schedule, either as a new Course or to an existing Course\nexport const insertSectionCourse = (schedule: Schedule, section: Section, course: Course) => {\n  const { meetings } = section;\n\n  // Check if any meetings are empty, and should be removed\n  // TODO: What about TBA meetings where the location is specified but not the time\n  //       (currently allowing these causes the app to crash)\n  section.meetings = meetings.filter((meeting) => {\n    return meeting.days?.length > 0 && meeting.duration > 0;\n  });\n\n  // Check if there is already a course in the schedule with the same prefix and number\n  const existingCourse = getCourse(schedule, course.prefixes, course.number);\n\n  // If there is, first check if there is already a section for that course with the same letter, instructors, and term\n  if (existingCourse) {\n    const existingCourseIndex = schedule.courses.indexOf(existingCourse);\n    const existingSection = getSection(\n      schedule,\n      course.prefixes,\n      course.number,\n      section.letter,\n      section.term,\n      section.instructors,\n      section.instructionalMethod,\n    );\n\n    // Update Course fields which were changed\n    schedule.courses[existingCourseIndex] = updateNonIdentifyingCourseInfo(existingCourse, course);\n    if (course.name !== schedule.courses[existingCourseIndex].name) {\n      section.name = course.name;\n    }\n\n    // Update the section name if the received name is different than the course name (section name will override the course name)\n    if (course.name !== schedule.courses[existingCourseIndex].name) {\n      section.name = course.name;\n    }\n\n    // If there is, add the new meeting(s) to the existing course\n    if (existingSection) {\n      const existingSectionIndex = schedule.courses[existingCourseIndex].sections.indexOf(\n        existingSection,\n      );\n      const newMeetings = section.meetings;\n\n      // Update Section fields which were changed\n      schedule.courses[existingCourseIndex].sections[\n        existingSectionIndex\n      ] = updateNonIdentifyingSectionInfo(existingSection, section);\n\n      // Only add meetings which don't already exist\n      newMeetings.forEach((newMeeting) => {\n        let meetingExists = false;\n        schedule.courses[existingCourseIndex].sections[existingSectionIndex].meetings.forEach(\n          (oldMeeting) => {\n            // Short-circuit if duplicate is found\n            if (!meetingExists && isEqual(newMeeting, oldMeeting)) {\n              meetingExists = true;\n            }\n          },\n        );\n        if (!meetingExists) {\n          schedule.courses[existingCourseIndex].sections[\n            existingSectionIndex\n          ].meetings = schedule.courses[existingCourseIndex].sections[\n            existingSectionIndex\n          ].meetings.concat(newMeeting);\n        }\n      });\n    }\n    // Otherwise, add the new section to the existing course\n    else {\n      schedule.courses[existingCourseIndex].sections.push(section);\n    }\n  }\n  // Otherwise, add the new course to the schedule\n  else {\n    course.sections.push(section);\n    schedule.courses.push(course);\n  }\n  return schedule;\n};\n","export interface TeamMember {\n  bio: string;\n  name: string;\n  photo: string;\n  website: string;\n}\n\n/* Basic information about the project team members */\nexport const team: TeamMember[] = [\n  {\n    bio:\n      \"Computer Science Student at Calvin University. Jonathan is a hard worker, a faster runner, and has previous web development experience.\",\n    name: \"Jonathan Ellis\",\n    photo:\n      \"https://avatars3.githubusercontent.com/u/49655167?s=460&u=b81f525db7da58b19bc28588282b366cd8b748ab&v=4\",\n    website: \"https://github.com/Jonri2\",\n  },\n  {\n    bio:\n      \"Computer Science and Mathematics Student at Calvin University. Bryant is hoping to go into software development while keeping Mathematics as a lifelong hobby.\",\n    name: \"Bryant George\",\n    photo:\n      \"https://avatars1.githubusercontent.com/u/51130302?s=460&u=83737db9aeff2b377654a3e0a7cd3dc39f54f7ff&v=4\",\n    website: \"https://github.com/bryantgeorge\",\n  },\n  {\n    bio:\n      \"Computer Science Student at Calvin University. Charles plans to start his software career post-graduation with Tekton as an ecommerce developer.\",\n    name: \"Charles Kornoelje\",\n    photo:\n      \"https://avatars2.githubusercontent.com/u/33156025?s=460&u=fb61bdf55f17108f9687c334b4b4abc4b09c7259&v=4\",\n    website: \"https://github.com/charkour\",\n  },\n  {\n    bio:\n      \"Computer Science Professor and Department Chair at Calvin University. VanderLinden's research interests are in Natural Language Engineering and Human-Computer Interaction.\",\n    name: \"Professor Keith VanderLinden\",\n    photo:\n      \"https://avatars0.githubusercontent.com/u/4930536?s=460&u=216f27d175496fec82a87e0c1c1c1514f73997da&v=4\",\n    website: \"https://calvin.edu/directory/people/keith-vander-linden\",\n  },\n  {\n    bio:\n      \"Mathematics and Statistics Professor and Department Chair at Calvin University. Pruim's research interests are in Computational Statistics, Scientific Computing, and Statistics Education.\",\n    name: \"Professor Randall Pruim\",\n    photo: \"https://www.statistics.com/wp-content/uploads/2019/05/dr-randall-pruim.jpg\",\n    website: \"https://calvin.edu/directory/people/randall-pruim\",\n  },\n];\n","import { Children, ReactNode } from \"react\";\n\n/* Create an iterable from an enumeration */\nexport const enumArray = <T>(e: T) => {\n  return Object.keys(e).map((val) => {\n    return e[val as keyof typeof e];\n  });\n};\n\n/* a no-op fn used for default values */\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const voidFn = () => {};\n\n/* Method of getting a child component by their display name.\n  Used in sub-components.\n*/\nexport const getChildByName = (children: ReactNode, displayName: string) => {\n  return Children.map(children as JSX.Element[], (child: JSX.Element) => {\n    return child?.type.displayName === displayName ? child : null;\n  });\n};\n","import { forEach } from \"lodash\";\nimport moment, { Moment } from \"moment\";\nimport { Day, Schedule, Section, Term } from \"utilities/interfaces\";\nimport { getLocationString } from \"utilities/services\";\n\nexport const scheduleToFullCSVString = (schedule: Schedule): string => {\n  const numericReg = RegExp(\"[0-9]\");\n  let csvStr =\n    \"Department,Term,TermStart,AcademicYear,SectionName,SubjectCode,CourseNum,SectionCode,CourseLevelCode,MinimumCredits,FacultyLoad,Used,Day10Used,LocalMax,GlobalMax,RoomCapacity,BuildingAndRoom,MeetingDays,MeetingTime,SectionStartDate,SectionEndDate,SemesterLength,Building,RoomNumber,MeetingStart,MeetingStartInternal,MeetingDurationMinutes,MeetingEnd,MeetingEndInternal,Monday,Tuesday,Wednesday,Thursday,Friday,ShortTitle,Faculty,SectionStatus,InstructionalMethod,Comments,LastEditTimestamp\\n\";\n  schedule.courses.forEach((course) => {\n    course.sections.forEach((section) => {\n      // Iterate through meetings to construct relevant strings\n      let startMoment;\n      let endMoment;\n      let meetingTimeStr = \"\";\n      let meetingStartStr = \"\";\n      let meetingStartInternalStr = \"\";\n      let meetingEndStr = \"\";\n      let meetingEndInternalStr = \"\";\n      let meetingDurationMinutesStr = \"\";\n      let buildingStr = \"\";\n      let roomNumberStr = \"\";\n      let buildingAndRoomStr = \"\";\n      let roomCapacityStr = \"\";\n      let daysStr = \"\";\n      let monStr = \"\";\n      let tuesStr = \"\";\n      let wedStr = \"\";\n      let thursStr = \"\";\n      let friStr = \"\";\n      section.meetings.forEach((meeting) => {\n        startMoment = moment(meeting.startTime, \"h:mm A\");\n        endMoment = startMoment.clone().add(meeting.duration, \"minutes\");\n        if (startMoment.isValid()) {\n          meetingTimeStr += getMeetingTimeStr(startMoment, endMoment);\n          meetingStartStr += `${startMoment.format(\"h:mm A\")}\\n`;\n          meetingStartInternalStr += `${startMoment.format(\"H:mm:ss\")}\\n`;\n          meetingEndStr += `${endMoment.format(\"h:mm A\")}\\n`;\n          meetingEndInternalStr += `${endMoment.format(\"H:mm:ss\")}\\n`;\n        } else {\n          meetingTimeStr += \"\\n\";\n          meetingStartStr += \"\\n\";\n          meetingStartInternalStr += \"\\n\";\n          meetingEndStr += \"\\n\";\n          meetingEndInternalStr += \"\\n\";\n        }\n        meetingDurationMinutesStr += `${meeting.duration}\\n`;\n        if (meeting.location && meeting.location.building) {\n          buildingStr += `${meeting.location.building}\\n`;\n          roomNumberStr += `${meeting.location.roomNumber}\\n`;\n          buildingAndRoomStr += meeting.location.roomNumber\n            ? `${getLocationString(meeting.location)}\\n`\n            : `${meeting.location.building}\\n`;\n        }\n        roomCapacityStr += `${meeting.location.roomCapacity ?? \"\"}\\n`;\n        daysStr += `${meeting.days.join(\"\")}\\n`;\n        monStr += `${meeting.days.includes(Day.Monday) ? \"M\" : \"\"}\\n`;\n        tuesStr += `${meeting.days.includes(Day.Tuesday) ? \"T\" : \"\"}\\n`;\n        wedStr += `${meeting.days.includes(Day.Wednesday) ? \"W\" : \"\"}\\n`;\n        thursStr += `${meeting.days.includes(Day.Thursday) ? \"TH\" : \"\"}\\n`;\n        friStr += `${meeting.days.includes(Day.Friday) ? \"F\" : \"\"}\\n`;\n      });\n      // Remove trailing newlines\n      meetingTimeStr = meetingTimeStr.slice(0, -1);\n      meetingStartStr = meetingStartStr.slice(0, -1);\n      meetingStartInternalStr = meetingStartInternalStr.slice(0, -1);\n      meetingEndStr = meetingEndStr.slice(0, -1);\n      meetingEndInternalStr = meetingEndInternalStr.slice(0, -1);\n      meetingDurationMinutesStr = meetingDurationMinutesStr.slice(0, -1);\n      buildingStr = buildingStr.slice(0, -1);\n      roomNumberStr = roomNumberStr.slice(0, -1);\n      buildingAndRoomStr = buildingAndRoomStr.slice(0, -1);\n      roomCapacityStr = roomCapacityStr.slice(0, -1);\n      daysStr = daysStr.slice(0, -1);\n      monStr = monStr.slice(0, -1);\n      tuesStr = tuesStr.slice(0, -1);\n      wedStr = wedStr.slice(0, -1);\n      thursStr = thursStr.slice(0, -1);\n      friStr = friStr.slice(0, -1);\n      // Create strings for fields that need to be constructed\n      const termStr = getTermsStr(section);\n      const sectionNameStr = `${course.prefixes.length ? course.prefixes[0] : \"\"}-${\n        course.number\n      }-${section.letter}`;\n      const courseLevelCodeStr = numericReg.test(course.number[0]) ? `${course.number[0]}00` : \"\";\n\n      // Construct a row in the output CSV\n      csvStr += `\"${course.department ?? \"\"}\",${termStr},${section.termStart ?? \"\"},${\n        section.year ?? \"\"\n      },\"${sectionNameStr}\",\"${course.prefixes.join(\"\\n\")}\",${course.number},${\n        section.letter\n      },${courseLevelCodeStr},${section.studentHours > -1 ? section.studentHours : \"\"},${\n        section.facultyHours > -1 ? section.facultyHours : \"\"\n      },${section.used ?? \"\"},${section.day10Used ?? \"\"},${section.localMax ?? \"\"},${\n        section.globalMax ?? \"\"\n      },\"${roomCapacityStr ?? \"\"}\",\"${buildingAndRoomStr}\",\"${daysStr}\",\"${meetingTimeStr}\",${\n        section.startDate ?? \"\"\n      },${section.endDate ?? \"\"},${\n        section.semesterLength ?? \"\"\n      },\"${buildingStr}\",\"${roomNumberStr}\",\"${meetingStartStr}\",\"${meetingStartInternalStr}\",\"${meetingDurationMinutesStr}\",\"${meetingEndStr}\",\"${meetingEndInternalStr}\",\"${monStr}\",\"${tuesStr}\",\"${wedStr}\",\"${thursStr}\",\"${friStr}\",\"${\n        section.name ?? course.name\n      }\",\"${section.instructors.join(\"\\n\")}\",\"${section.status ?? \"\"}\",\"${\n        section.instructionalMethod ?? \"\"\n      }\",\"${section.comments ?? \"\"}\",\"${section.timestamp ?? \"\"}\"\\n`;\n    });\n  });\n  return csvStr;\n};\n\nexport const getMeetingTimeStr = (startMoment: Moment, endMoment: Moment): string => {\n  return `${startMoment.format(\"h:mmA\")} - ${endMoment.format(\"h:mmA\")}\\n`;\n};\n\nexport const getTermsStr = (section: Section): string => {\n  if (Array.isArray(section.term)) {\n    if (section.term.length === 0) {\n      return \"\";\n    }\n    let termsStr = '\"';\n    forEach(section.term, (term) => {\n      termsStr += `${getTermStr(section.year, term)}, `;\n    });\n    return `${termsStr.slice(0, -2)}\"`;\n  }\n  return getTermStr(section.year, section.term);\n};\n\nconst getTermStr = (year: Section[\"year\"], term: Term): string => {\n  return year\n    ? `${\n        typeof year === \"number\"\n          ? term === Term.Fall\n            ? String(year).slice(-2)\n            : String(year + 1).slice(-2)\n          : term === Term.Fall\n          ? String(Number(year?.slice(-2)) - 1)\n          : year?.slice(-2)\n      }/${term}`\n    : term;\n};\n","import moment from \"moment\";\nimport { getLocationString, getMeetingTimeStr, getTermsStr } from \"utilities\";\nimport { Schedule } from \"utilities/interfaces\";\n\n// Exported alongside the full schedule\nexport const scheduleToNonTeachingCSVString = (schedule: Schedule): string => {\n  const csvHeader = \"Term(s),Non-Teaching Activity,Fac Load,Faculty\\n\";\n  let csvStr = csvHeader;\n  schedule.courses.forEach((course) => {\n    // Only produce output for courses that don't have a prefix and number (assume they are non-teaching loads)\n    if (!((course.prefixes.length && course.prefixes[0]) || course.number)) {\n      course.sections.forEach((section) => {\n        // Create strings for fields that need to be constructed\n        const termStr = getTermsStr(section);\n\n        // TODO: Should instructionalMethod be used for Non-Teaching Activity or should we add a new field?\n        // Construct a row in the output CSV\n        csvStr += `${termStr},${section.instructionalMethod},${section.facultyHours.toFixed(\n          2,\n        )},\"${section.instructors.join(\"\\n\")}\"\\n`;\n      });\n    }\n  });\n  // Only output if there are non-teaching loads\n  if (csvStr !== csvHeader) {\n    return csvStr;\n  }\n  return \"\";\n};\n\n// Deprecated, TODO: Remove this function?\n// Simplified version of scheduleToFullCSVString() from writeFullCSV.ts\nexport const scheduleToCSVString = (schedule: Schedule): string => {\n  let csvStr = \"Term,Section Name,Stu Cred,Fac Load,Room,Days,Meeting Time,Short Title,Faculty\\n\";\n  schedule.courses.forEach((course) => {\n    // Only produce output for courses with a prefix and number (else assume they are non-teaching loads)\n    if ((course.prefixes.length && course.prefixes[0]) || course.number) {\n      course.sections.forEach((section) => {\n        // Iterate through meetings to construct relevant strings\n        let startMoment;\n        let endMoment;\n        let meetingTimeStr = \"\";\n        let buildingAndRoomStr = \"\";\n        let daysStr = \"\";\n        section.meetings.forEach((meeting) => {\n          startMoment = moment(meeting.startTime, \"h:mm A\");\n          endMoment = startMoment.clone().add(meeting.duration, \"minutes\");\n          if (startMoment.isValid()) {\n            meetingTimeStr += getMeetingTimeStr(startMoment, endMoment);\n          } else {\n            meetingTimeStr += \"\\n\";\n          }\n          buildingAndRoomStr += meeting.location.roomNumber\n            ? `${getLocationString(meeting.location)}\\n`\n            : `${meeting.location.building}\\n`;\n          daysStr += `${meeting.days.join(\"\")}\\n`;\n        });\n        // Remove trailing newlines\n        meetingTimeStr = meetingTimeStr.slice(0, -1);\n        buildingAndRoomStr = buildingAndRoomStr.slice(0, -1);\n        daysStr = daysStr.slice(0, -1);\n        // Create strings for fields that need to be constructed\n        const termStr = getTermsStr(section);\n        const sectionNameStr = `${course.prefixes.length ? course.prefixes[0] : \"\"}-${\n          course.number\n        }-${section.letter}`;\n\n        // Construct a row in the output CSV\n        csvStr += `${termStr},\"${sectionNameStr}\",${section.studentHours.toFixed(\n          2,\n        )},${section.facultyHours.toFixed(\n          2,\n        )},\"${buildingAndRoomStr}\",\"${daysStr}\",\"${meetingTimeStr}\",\"${\n          section.name ?? course.name\n        }\",\"${section.instructors.join(\"\\n\")}\"\\n`;\n      });\n    }\n  });\n  return csvStr;\n};\n"],"sourceRoot":""}